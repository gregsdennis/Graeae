openapi: 3.0.3
info:
    title: Postman API
    description: |
        The Postman API enables you to programmatically access data stored in your Postman account.

        ## Important

        - You must pass an `Accept` header with the `application/vnd.api.v10+json` value to use v10 and higher endpoints. While some of these endpoints may appear the same as the deprecated Postman v9 endpoints, they will use the v10 behavior when you send this `Accept` header.
        - To use the **API** endpoints, you must first [update your APIs to the v10 format](https://postman.postman.co/docs/designing-and-developing-your-api/creating-an-api/#updating-an-api).

        ## Getting started

        You can get started with the Postman API by [forking the Postman API collection](https://learning.postman.com/docs/collaborating-in-postman/version-control/#creating-a-fork) to your workspace. You can then use Postman to send requests.

        ## Overview

        1. You must use a valid API Key to send requests to the API endpoints. You can get your API key from Postman's [integrations dashboard](https://go.postman.co/settings/me/api-keys).
        1. The API has [rate and usage limits](#rate-and-usage-limits).
        1. The API only responds to HTTPS-secured communications. Any requests sent via HTTP return an HTTP `301` redirect to the corresponding HTTPS resources.
        1. The API returns requests responses in [JSON format](https://en.wikipedia.org/wiki/JSON). When an API request returns an error, it is sent in the JSON response as an error key.
        1. The request method (verb) determines the nature of action you intend to perform. A request made using the `GET` method implies that you want to fetch something from Postman. The `POST` method implies you want to save something new to Postman.
        1. For all requests, API calls respond with their corresponding [HTTP status codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes). In the Postman client, the status code also provides help text that details the possible meaning of the response code.
        1. You can access individual resources in your Postman with its unique ID (`uid`) value. The `uid` is a simple concatenation of the resource owner's user ID and the resource's ID. For example, a collection's `uid` is the `{{owner_id}}-{{collection_id}}` value.

        ## ID and UID

        All items in Postman, such as collections, workspaces, and APIs, have ID and UIDs:

        - An ID is the unique ID assigned to a Postman item. For example, `ec29121c-5203-409f-9e84-e83ffc10f226`.
        - The UID is the **full** ID of a Postman item. This value is the item's unique ID concatenated with the user ID. For example, in the `12345678-ec29121c-5203-409f-9e84-e83ffc10f226` UID:
            - `12345678` is the user's ID.
            - `ec29121c-5203-409f-9e84-e83ffc10f226` is the item's ID.

        ## Authentication

        Postman uses API keys for authentication. The API key tells the API server that the request came from you. Everything that you have access to in Postman is accessible with your API key. You can generate a Postman API key in the [**API keys**](https://postman.postman.co/settings/me/api-keys) section of your Postman account settings.

        You must include an API key in each request to the Postman API with the `X-Api-Key` request header. In Postman, you can store your API key as an [environment variable](https://www.getpostman.com/docs/environments). The Postman API [collection](https://www.getpostman.com/docs/collections) will use it to make API calls.

        ### Authentication error response

        If an API key is missing, malformed, or invalid, you will receive an HTTP `401 Unauthorized` response code.

        ### Using the API key as a query parameter

        Requests that accept the `X-Api-Key` request header also accept the API key when you send it as the `apikey` query parameter. An API key sent as part of the header has a higher priority when you send the key as both a request header and a query parameter.

        ## Rate and usage limits

        API access rate limits apply at a per-API key basis in unit time. The limit is **300 requests per minute**. Also, depending on your [plan](https://www.postman.com/pricing/), you may have usage limits. If you exceed either limit, your request will return an HTTP `429 Too Many Requests` status code.

        Each API response returns the following set of headers to help you identify your use status:

        | Header | Description |
        | ------ | ----------- |
        | `X-RateLimit-Limit` | The maximum number of requests that the consumer is permitted to make per minute. |
        | `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window. |
        | `X-RateLimit-Reset` | The time at which the current rate limit window resets in UTC epoch seconds. |

        ## 503 response

        An HTTP `503` response from our servers indicates there is an unexpected spike in API access traffic. The server is usually operational within the next five minutes. If the outage persists or you receive any other form of an HTTP `5XX` error, [contact support](https://support.postman.com/hc/en-us/requests/new/).

        ## Support

        For help regarding accessing the Postman API, you can:

        - Visit [Postman Support](https://support.postman.com/hc/en-us) or our [Community and Support](https://www.postman.com/community/) sites.
        - Reach out to the [Postman community](https://community.postman.com/).
        - Submit a help request to [Postman support](https://support.postman.com/hc/en-us/requests/new/).

        ## Policies

        - [Postman Terms of Service](http://www.postman.com/legal/terms/)
        - [Postman Privacy Policy](https://www.postman.com/legal/privacy-policy/)
    version: "1.0"
    termsOfService: https://www.postman.com/legal/terms/
    contact:
        name: Postman Support
        email: help@postman.com
        url: https://www.postman.com/community/
    license:
        name: Apache 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0.html
    x-api-id: postman_api_key
    x-audience: Developers
    x-newrelic-app-id:
        - 1162449093
servers:
    - url: https://api.getpostman.com
security:
    - PostmanApiKey: []
paths:
    /apis:
        get:
            summary: Get all APIs
            description: |
                Gets information about all APIs in a workspace.

                **Note:**

                This endpoint only returns APIs created or migrated in Postman v10 and higher.
            operationId: getAllApis
            tags:
                - API
                - v10
            responses:
                "200":
                    $ref: "#/components/responses/getAllApis"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/apiNotFoundError"
                "422":
                    $ref: "#/components/responses/v9Unsupported"
                "500":
                    $ref: "#/components/responses/serverError"
            parameters:
                - $ref: "#/components/parameters/limit"
                - $ref: "#/components/parameters/createdBy"
                - $ref: "#/components/parameters/cursor"
                - $ref: "#/components/parameters/apiDescription"
        post:
            summary: Create an API
            description: Creates an API.
            operationId: createApi
            tags:
                - API
                - v10
            requestBody:
                $ref: "#/components/requestBodies/createAPI"
            responses:
                "200":
                    $ref: "#/components/responses/createApi"
                "400":
                    $ref: "#/components/responses/workspaceParamMissingError"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/forbiddenErrorApi"
                "404":
                    $ref: "#/components/responses/workspaceInstanceNotFoundError"
                "500":
                    $ref: "#/components/responses/serverError"
        parameters:
            - $ref: "#/components/parameters/workspaceIdApi"
            - $ref: "#/components/parameters/Accept"
    /apis/{apiId}:
        get:
            summary: Get an API
            description: |
                Gets information about an API.

                **Note:**

                API viewers can only use the `versions` option in the `include` query parameter.
            operationId: getAnApi
            tags:
                - API
                - v10
            responses:
                "200":
                    $ref: "#/components/responses/getAnApi"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "404":
                    $ref: "#/components/responses/apiNotFoundError"
                "422":
                    $ref: "#/components/responses/v9Unsupported"
                "500":
                    $ref: "#/components/responses/serverError"
            parameters:
                - $ref: "#/components/parameters/include"
        put:
            summary: Update an API
            description: Updates an API.
            operationId: updateAnApi
            tags:
                - API
                - v10
            requestBody:
                $ref: "#/components/requestBodies/updateAnApi"
            responses:
                "200":
                    $ref: "#/components/responses/updateAnApi"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/forbiddenErrorApi"
                "404":
                    $ref: "#/components/responses/apiNotFoundError"
                "422":
                    $ref: "#/components/responses/v9Unsupported"
                "500":
                    $ref: "#/components/responses/serverError"
        delete:
            summary: Delete an API
            description: Deletes an API.
            operationId: deleteApi
            tags:
                - API
                - v10
            responses:
                "204":
                    description: No Content
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/forbiddenErrorApi"
                "404":
                    $ref: "#/components/responses/apiNotFoundError"
                "422":
                    $ref: "#/components/responses/v9Unsupported"
                "500":
                    $ref: "#/components/responses/serverError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/Accept"
    /apis/{apiId}/collections:
        post:
            summary: Add a collection
            description: |
                Adds a collection to an API. To do this, use the following `operationType` values:

                - `COPY_COLLECTION` — Copies a collection from the workspace and adds it to an API.
                - `CREATE_NEW` — Creates a new collection by providing the new collection's content.
                - `GENERATE_FROM_SCHEMA` — Generates the collection from an API schema.
            operationId: addCollection
            tags:
                - API
                - Collection
                - v10
            requestBody:
                $ref: "#/components/requestBodies/addCollection"
            responses:
                "200":
                    $ref: "#/components/responses/addCollection"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/forbiddenErrorSchema"
                "404":
                    $ref: "#/components/responses/apiNotFoundError"
                "500":
                    $ref: "#/components/responses/serverError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/Accept"
    /apis/{apiId}/collections/{collectionId}:
        get:
            summary: Get a collection
            description: |
                Gets a collection attached to an API. You can use the `versionId` query parameter to get a collection published in a version.

                **Note:**

                The `versionId` query parameter is a required parameter for API viewers.
            operationId: getCollection
            tags:
                - API
                - Collection
                - v10
            responses:
                "200":
                    $ref: "#/components/responses/getCollection"
                "400":
                    $ref: "#/components/responses/versionIdMissing"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/forbiddenErrorApi"
                "404":
                    $ref: "#/components/responses/collectionInstanceNotFoundError"
                "500":
                    $ref: "#/components/responses/serverError"
            parameters:
                - $ref: "#/components/parameters/versionQuery"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/collectionIdApi"
            - $ref: "#/components/parameters/Accept"
    /apis/{apiId}/collections/{collectionId}/sync-with-schema-tasks:
        put:
            summary: Sync collection with schema
            description: |
                Syncs a collection attached to an API with the API schema.

                This is an asynchronous endpoint that returns an HTTP `202 Accepted` response. The response contains a polling link to the `/apis/{apiId}/tasks/{taskId}` endpoint in the `Location` header.

                **Note:**

                This endpoint only supports the OpenAPI 3 schema type.
            operationId: syncCollectionWithSchema
            tags:
                - API
                - Collections
                - v10
            responses:
                "202":
                    $ref: "#/components/responses/syncCollectionWithSchema"
                "400":
                    $ref: "#/components/responses/badRequest"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/forbiddenErrorSchema"
                "404":
                    $ref: "#/components/responses/schemaInstanceNotFoundError"
                "422":
                    description: Unprocessable Entity (WebDAV) (RFC 4918)
                    content:
                        application/problem+json:
                            schema:
                                type: object
                                properties:
                                    type:
                                        type: string
                                        example: actionNotAllowedError
                                        description: The error type.
                                    title:
                                        type: string
                                        example: Action not allowed
                                        description: The generic description for the error's class.
                                    detail:
                                        type: string
                                        example: This action is not allowed for git linked APIs
                                        description: Details about the error.
                            examples:
                                Action Not Allowed:
                                    value:
                                        type: actionNotAllowedError
                                        title: Action not allowed
                                        detail: This action is not allowed for git linked APIs
                                Unsupported Schema Type:
                                    value:
                                        type: unsupportedEntityError
                                        title: Unsupported schema
                                        detail:
                                            Collection syncing is not supported for the current schema
                                            type of the API
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/collectionIdApi"
            - $ref: "#/components/parameters/Accept"
    /apis/{apiId}/schemas:
        post:
            summary: Create a schema
            description: Creates a schema for an API.
            operationId: createApiSchema
            tags:
                - API
                - Schema
                - v10
            requestBody:
                $ref: "#/components/requestBodies/createApiSchema"
            responses:
                "200":
                    $ref: "#/components/responses/createApiSchema"
                "400":
                    $ref: "#/components/responses/schemaInvalidParamsError"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/unauthorizedApi"
                "404":
                    $ref: "#/components/responses/apiInstanceNotFoundError"
                "422":
                    $ref: "#/components/responses/gitLinkedApiError"
                "500":
                    $ref: "#/components/responses/serverError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/Accept"
    /apis/{apiId}/schemas/{schemaId}:
        get:
            summary: Get a schema
            description: |
                Gets information about API schema. You can use the `versionId` query parameter to get a schema published in an API version.

                You can use this API to do the following:

                - Get a schema's metadata.
                - Get all the files in a schema. This only returns the first file in the schema. The endpoint response contains a link to the next set of response results.
                - Get a schema's contents in multi-file or bundled format.

                **Note:**

                The `versionId` query parameter is a **required** parameter for API viewers.
            operationId: getSchema
            tags:
                - API
                - Schema
                - v10
            responses:
                "200":
                    $ref: "#/components/responses/getSchema"
                "400":
                    $ref: "#/components/responses/schemaNotLinked"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/forbiddenErrorApi"
                "404":
                    $ref: "#/components/responses/apiInstanceNotFoundError"
                "422":
                    $ref: "#/components/responses/gitLinkedApiError"
                "500":
                    $ref: "#/components/responses/serverError"
            parameters:
                - $ref: "#/components/parameters/versionQuery"
                - $ref: "#/components/parameters/schemaOutput"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/schemaId"
            - $ref: "#/components/parameters/Accept"
    /apis/{apiId}/schemas/{schemaId}/files:
        get:
            summary: Get schema files
            description: |
                Gets the files in an API schema. You can use the `versionId` query parameter to get schema files published in an API version.

                **Note:**

                The `versionId` query parameter is a required parameter for API viewers.
            operationId: getSchemaFiles
            tags:
                - API
                - Schema
                - v10
            responses:
                "200":
                    $ref: "#/components/responses/getSchemaFiles"
                "400":
                    $ref: "#/components/responses/schemaNotLinked"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "404":
                    $ref: "#/components/responses/apiInstanceNotFoundError"
                "422":
                    $ref: "#/components/responses/gitLinkedApiError"
                "500":
                    $ref: "#/components/responses/serverError"
            parameters:
                - $ref: "#/components/parameters/versionQuery"
                - $ref: "#/components/parameters/limit"
                - $ref: "#/components/parameters/cursor"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/schemaId"
            - $ref: "#/components/parameters/Accept"
    /apis/{apiId}/schemas/{schemaId}/files/{file-path}:
        get:
            summary: Get schema file contents
            description: |
                Gets an API schema file contents at the defined path. You can use the `versionId` query parameter to get schema file contents published in an API version.

                **Note:**

                The `versionId` query parameter is a required parameter for API viewers.
            operationId: getSchemaFileContents
            tags:
                - API
                - Schema
                - v10
            responses:
                "200":
                    $ref: "#/components/responses/getSchemaFileContents"
                "400":
                    $ref: "#/components/responses/schemaNotLinked"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "404":
                    $ref: "#/components/responses/apiInstanceNotFoundError"
                "422":
                    $ref: "#/components/responses/gitLinkedApiError"
                "500":
                    $ref: "#/components/responses/serverError"
            parameters:
                - $ref: "#/components/parameters/versionQuery"
        put:
            summary: Create or update a schema file
            description: |
                Creates or updates an API schema file.

                **Note:**

                - If the provided file path exists, the file will be updated with the new contents.
                - If the provided file path does **not** exist, then a new schema file will be created.
                - If the file path contains a `/` (forward slash) character, then a folder is created. For example, if the file path is the `dir/schema.json` value, then a `dir` folder is created with the `schema.json` file inside.
            operationId: createOrUpdateSchemaFile
            tags:
                - API
                - Schema
                - v10
            requestBody:
                $ref: "#/components/requestBodies/createOrUpdateSchemaFile"
            responses:
                "200":
                    $ref: "#/components/responses/createUpdateSchemaFile"
                "400":
                    $ref: "#/components/responses/schemaNotLinked"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/forbiddenErrorSchema"
                "404":
                    $ref: "#/components/responses/schemaNotFound"
                "422":
                    $ref: "#/components/responses/gitLinkedApiError"
                "500":
                    $ref: "#/components/responses/serverError"
        delete:
            summary: Delete a schema file
            description: Deletes a file in an API schema.
            operationId: deleteSchemaFile
            tags:
                - API
                - Schema
                - v10
            responses:
                "204":
                    description: Deleted
                "400":
                    $ref: "#/components/responses/schemaNotLinked"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/forbiddenErrorSchema"
                "404":
                    $ref: "#/components/responses/apiInstanceNotFoundError"
                "422":
                    $ref: "#/components/responses/gitLinkedApiError"
                "500":
                    $ref: "#/components/responses/serverError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/schemaId"
            - $ref: "#/components/parameters/file-path"
            - $ref: "#/components/parameters/Accept"
    /apis/{apiId}/tasks/{taskId}:
        get:
            summary: Get status of an asynchronous task
            description: Gets the status of an asynchronous task.
            operationId: getStatusOfAnAsyncTask
            tags:
                - API
                - v10
            responses:
                "200":
                    $ref: "#/components/responses/getStatusOfAnAsyncTask"
                "400":
                    $ref: "#/components/responses/badRequest"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/forbiddenErrorApi"
                "404":
                    $ref: "#/components/responses/taskNotFound"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/taskId"
            - $ref: "#/components/parameters/Accept"
    /apis/{apiId}/versions:
        get:
            summary: Get all versions
            description: Gets all the published versions of an API.
            operationId: getAllVersions
            tags:
                - API
                - Version
                - v10
            responses:
                "200":
                    $ref: "#/components/responses/getAllVersions"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "404":
                    $ref: "#/components/responses/apiNotFoundError"
                "422":
                    $ref: "#/components/responses/v9Unsupported"
                "500":
                    $ref: "#/components/responses/serverError"
            parameters:
                - $ref: "#/components/parameters/cursor"
                - $ref: "#/components/parameters/limit"
        post:
            summary: Create a version
            description: |
                Creates a new API version asynchronously and immediately returns an HTTP `202 Accepted` response. The response contains a polling link to the task status API in the `Location` header.

                This endpoint is equivalent to publishing a version in Postman app, which is the snapshot of API collections and schema at a given point in time.
            operationId: createApiVersion
            tags:
                - API
                - Version
                - v10
            requestBody:
                $ref: "#/components/requestBodies/createApiVersion"
            responses:
                "202":
                    $ref: "#/components/responses/createApiVersion"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/forbiddenErrorSchema"
                "404":
                    $ref: "#/components/responses/apiNotFoundError"
                "422":
                    $ref: "#/components/responses/inconsistentApiState"
                "500":
                    $ref: "#/components/responses/serverError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/Accept"
    /apis/{apiId}/versions/{versionId}:
        get:
            summary: Get a version
            description: |
                Gets information about an API version.

                **Note:**

                - For API editors, this endpoint returns an HTTP `302 Found` status code when the version status is pending. It also returns the `/apis/{apiId}/tasks/{taskId}` task status response header.
                - For API viewers, this endpoint returns an HTTP `404 Not Found` when the version status is pending.
            operationId: getApiVersion
            tags:
                - API
                - Version
                - v10
            responses:
                "200":
                    $ref: "#/components/responses/getVersion"
                "302":
                    $ref: "#/components/responses/versionStatusPending"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "404":
                    $ref: "#/components/responses/apiVersionNotFound"
                "500":
                    $ref: "#/components/responses/serverError"
        put:
            summary: Update a version
            description: |
                Updates an API version.

                **Note:**

                This endpoint returns an HTTP `404 Not Found` response when an API version is pending publication.
            operationId: updateApiVersion
            tags:
                - API
                - Version
                - v10
            requestBody:
                $ref: "#/components/requestBodies/updateVersion"
            responses:
                "200":
                    $ref: "#/components/responses/updateVersion"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/forbiddenErrorApi"
                "404":
                    $ref: "#/components/responses/apiVersionNotFound"
                "500":
                    $ref: "#/components/responses/serverError"
        delete:
            summary: Delete a version
            description: |
                Deletes an API version.

                **Note:**

                This endpoint returns an HTTP `404 Not Found` response when an API version is pending publication.
            operationId: deleteApiVersion
            tags:
                - API
                - Version
                - v10
            responses:
                "204":
                    description: No Content
                "400":
                    $ref: "#/components/responses/apiVersionInstanceNotFoundError"
                "401":
                    $ref: "#/components/responses/unauthorizedApi"
                "403":
                    $ref: "#/components/responses/forbiddenErrorApi"
                "404":
                    $ref: "#/components/responses/apiVersionNotFound"
                "500":
                    $ref: "#/components/responses/serverError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/versionId"
            - $ref: "#/components/parameters/Accept"
    /apis/{apiId}/versions/{apiVersionId}/unclassified:
        get:
            deprecated: true
            summary: Get unclassified relations
            description: |
                **This endpoint is deprecated.**

                Gets all of an API version's unclassified relations.

                Unclassified relations are used for documentation and testing. This is the default relation type.
            operationId: getUnclassifiedRelations
            tags:
                - API
                - Relations
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    unclassified:
                                        type: array
                                        description: The API version's unclassified relations.
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    description: The relation ID.
                                                    example: 2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2
                                                name:
                                                    type: string
                                                    description: The related collection's name.
                                                    example: Test
                                                updatedAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the related collection was last updated.
                                                    example: "2019-08-29T10:18:11.000Z"
                                                collectionId:
                                                    type: string
                                                    description: The related collection's ID.
                                                    example: 7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745
                            example:
                                unclassified:
                                    - id: 2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2
                                      name: Test
                                      updatedAt: "2023-01-19T14:50:05.000Z"
                                      collectionId: 7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745
                "400":
                    $ref: "#/components/responses/instanceNotFoundApi"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
    /apis/{apiId}/versions/{apiVersionId}/contracttest:
        get:
            deprecated: true
            summary: Get contract test relations
            description: |
                **This endpoint is deprecated.**
            operationId: getContractTestRelations
            tags:
                - API
                - Relations
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    contracttest:
                                        type: array
                                        description: The API version's contract test relations.
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    description: The contract test relation ID.
                                                    example: 2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2
                                                name:
                                                    type: string
                                                    description: The contract test's name.
                                                    example: Contract Test
                                                updatedAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the contract test was last updated.
                                                    example: "2019-08-29T10:18:11.000Z"
                                                collectionId:
                                                    type: string
                                                    description: The related collection's ID.
                                                    example: 7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745
                            example:
                                contracttest:
                                    - id: 2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2
                                      name: Contract Test
                                      updatedAt: "2019-08-29T10:18:11.000Z"
                                      collectionId: 7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745
                "400":
                    $ref: "#/components/responses/instanceNotFoundApi"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
    /apis/{apiId}/versions/{apiVersionId}/documentation:
        get:
            deprecated: true
            summary: Get documentation relations
            description: |
               **This endpoint is deprecated.**

                Gets an API version's documentation relations.
            operationId: getDocumentationRelations
            tags:
                - API
                - Relations
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    documentation:
                                        type: array
                                        description: The API version's documentation relations.
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    description: The documentation relation ID.
                                                    example: 2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2
                                                name:
                                                    type: string
                                                    description: The related documentation's name.
                                                    example: Test Collection
                                                updatedAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the relation was updated.
                                                    example: "2022-07-08T20:31:06.000Z"
                                                collectionId:
                                                    type: string
                                                    description: The related documentation's ID.
                                                    example: 12345678-203ec937-0c09-42e4-b1d1-553bd4ea9e42
                            example:
                                documentation:
                                    - id: 2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2
                                      name: Test Collection
                                      updatedAt: "2022-07-08T20:31:06.000Z"
                                      collectionId: 12345678-203ec937-0c09-42e4-b1d1-553bd4ea9e42
                "400":
                    $ref: "#/components/responses/instanceNotFoundApi"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
    /apis/{apiId}/versions/{apiVersionId}/environment:
        get:
            deprecated: true
            summary: Get environment relations
            description: |
                **This endpoint is deprecated.**

                Gets an API version's environment relations.
            operationId: getEnvironmentRelations
            tags:
                - API
                - Relations
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    environment:
                                        type: array
                                        description: The API version's environment relations.
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    description: The environment relation ID.
                                                    example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                                name:
                                                    type: string
                                                    description: The related environment's name.
                                                    example: Test Environment
                                                updatedAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the relation was updated.
                                                    example: "2022-07-08T20:31:30.000Z"
                                                environmentId:
                                                    type: string
                                                    description: The related environment's ID.
                                                    example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                            example:
                                environment:
                                    - id: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                      name: Test Environment
                                      updatedAt: "2022-07-08T20:31:30.000Z"
                                      environmentId: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                "400":
                    $ref: "#/components/responses/instanceNotFoundApi"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
    /apis/{apiId}/versions/{apiVersionId}/integrationtest:
        get:
            deprecated: true
            summary: Get integration test relations
            description: |
                **This endpoint is deprecated**.
            operationId: getIntegrationTestRelations
            tags:
                - API
                - Relations
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    integrationtest:
                                        type: array
                                        description: The API version's integration test relations.
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    description: The integration test relation ID.
                                                    example: 2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2
                                                name:
                                                    type: string
                                                    description: The integration test's name.
                                                    example: C test
                                                updatedAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the relation was updated.
                                                    example: "2019-08-29T10:18:11.000Z"
                                                collectionId:
                                                    type: string
                                                    description: The related collection's ID.
                                                    example: 7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745
                            example:
                                integrationtest:
                                    - id: 2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2
                                      name: C test
                                      updatedAt: "2019-08-29T10:18:11.000Z"
                                      collectionId: 12345678-a8bcd149-2b01-4b4c-8c14-c7d05be77745
                "400":
                    $ref: "#/components/responses/instanceNotFoundApi"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
    /apis/{apiId}/versions/{apiVersionId}/mock:
        get:
            deprecated: true
            summary: Get mock server relations
            description: |
                **This endpoint is deprecated.**

                Gets an API version's mock server relations.
            operationId: getMockServerRelations
            tags:
                - API
                - Relations
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    mock:
                                        type: array
                                        description: The API version's mock server relations.
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    description: The mock server relation ID.
                                                    example: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                                name:
                                                    type: string
                                                    description: The related mock server's name.
                                                    example: Test Mock
                                                updatedAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the relation was updated.
                                                    example: "2022-07-10T05:00:25.066Z"
                                                mockId:
                                                    type: string
                                                    format: uuid
                                                    description: The related mock server's ID.
                                                    example: e3d951bf-873f-49ac-a658-b2dcb91d3289
                            example:
                                mock:
                                    - id: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                      name: Test Mock
                                      updatedAt: "2022-07-25T20:48:13.000Z"
                                      mockId: e3d951bf-873f-49ac-a658-b2dcb91d3289
                "400":
                    $ref: "#/components/responses/instanceNotFoundApi"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
    /apis/{apiId}/versions/{apiVersionId}/monitor:
        get:
            deprecated: true
            summary: Get monitor relations
            description: |
                **This endpoint is deprecated.**

                Gets an API version's monitor relations.
            operationId: getMonitorRelations
            tags:
                - API
                - Relations
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    monitor:
                                        type: array
                                        description: The API version's monitor relations.
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    description: The monitor relation ID.
                                                    example: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                                name:
                                                    type: string
                                                    description: The related monitor's name.
                                                    example: Test Monitor
                                                updatedAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the relation was updated.
                                                    example: "2022-07-10T05:00:25.066Z"
                                                monitorId:
                                                    type: string
                                                    format: uuid
                                                    description: The related monitor's ID.
                                                    example: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                            example:
                                monitor:
                                    - id: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                      monitorId: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                      name: Test Monitor
                                      updatedAt: "2022-07-10T05:00:25.066Z"
                "400":
                    $ref: "#/components/responses/instanceNotFoundApi"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
    /apis/{apiId}/versions/{apiVersionId}/relations:
        get:
            deprecated: true
            summary: Get all linked relations
            description: |
                **This endpoint is deprecated.**

                Gets all of an API version's relations.

                **Note:**

                In Postman v10 and higher, this endpoint returns the following:

                - The `unclassified` relation is for documentation and testing. This is the default relation type.
                - The `apiDefinition` relation is the relation used for API definitions.
            operationId: getLinkedRelations
            tags:
                - API
                - Relations
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    relations:
                                        type: object
                                        description: The API version's relations.
                                        properties:
                                            apiDefinition:
                                                type: object
                                                description: The API version's API definition relations.
                                                properties:
                                                    additionalProperties:
                                                        type: object
                                                        description: Information about the API definition. The object's name is the definition relation's ID.
                                                        properties:
                                                            id:
                                                                type: string
                                                                description: The API definition's relation ID.
                                                                example: 16bb367e-fafb-4ef3-933b-ee3d971866fb
                                            unclassified:
                                                type: object
                                                description: The API version's collection relations.
                                                properties:
                                                    additionalProperties:
                                                        type: object
                                                        description: Information about the API version's collection relations. The object's name is the definition relation's ID.
                                                        properties:
                                                            id:
                                                                type: string
                                                            name:
                                                                type: string
                                                            createdAt:
                                                                type: string
                                                                format: date-time
                                                            updatedAt:
                                                                type: string
                                                                format: date-time
                                            schema:
                                                deprecated: true
                                                type: object
                                                description: |
                                                    **Deprecated. Use the `apiDefintion` response**. The API version's schema relations.
                                                properties:
                                                    additionalProperties:
                                                        type: object
                                                        description: Information about the schema. The object's name is the schema relation's ID.
                                                        properties:
                                                            id:
                                                                type: string
                                                                description: The schema relation ID.
                                                                example: 16bb367e-fafb-4ef3-933b-ee3d971866fb
                                            documentation:
                                                deprecated: true
                                                type: object
                                                description: The API version's documentation relations.
                                                properties:
                                                    additionalProperties:
                                                        type: object
                                                        description: Information about the documentation. The object's name is the documentation relation's ID.
                                                        properties:
                                                            id:
                                                                type: string
                                                                description: The documentation relation ID.
                                                                example: 2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2
                                                            name:
                                                                type: string
                                                                description: The related documentation's name.
                                                                example: Test Collection
                                                            createdAt:
                                                                type: string
                                                                format: date-time
                                                                description: The date and time at which the documentation relation was created.
                                                                example: "2022-07-08T20:31:06.000Z"
                                                            updatedAt:
                                                                type: string
                                                                format: date-time
                                                                description: The date and time at which the relation was updated.
                                                                example: "2022-07-08T20:31:06.000Z"
                                            environment:
                                                deprecated: true
                                                type: object
                                                description: The API version's environment relations.
                                                properties:
                                                    additionalProperties:
                                                        type: object
                                                        description: Information about the environment. The object's name is the environment relation's ID.
                                                        properties:
                                                            id:
                                                                type: string
                                                                description: The environment relation ID.
                                                                example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                                            name:
                                                                type: string
                                                                description: The related environment's name.
                                                                example: Test Environment
                                                            createdAt:
                                                                type: string
                                                                format: date-time
                                                                description: The date and time at which the environment relation was created.
                                                                example: "2022-07-08T20:31:06.000Z"
                                                            updatedAt:
                                                                type: string
                                                                format: date-time
                                                                description: The date and time at which the relation was updated.
                                                                example: "2022-07-08T20:31:06.000Z"
                                            monitor:
                                                deprecated: true
                                                type: object
                                                description: The API version's monitor relations.
                                                properties:
                                                    additionalProperties:
                                                        type: object
                                                        description: Information about the monitor. The object's name is the monitor relation's ID.
                                                        properties:
                                                            id:
                                                                type: string
                                                                description: The monitor relation ID.
                                                                example: 1ecfedca-f067-4920-8a53-ec3ec0f416bf
                                                            name:
                                                                type: string
                                                                description: The related monitor's name.
                                                                example: Test Monitor
                                                            createdAt:
                                                                type: string
                                                                format: date-time
                                                                description: The date and time at which the monitor relation was created.
                                                                example: "2022-07-08T20:31:30.000Z"
                                                            updatedAt:
                                                                type: string
                                                                format: date-time
                                                                description: The date and time at which the relation was updated.
                                                                example: "2022-07-08T20:31:30.000Z"
                                            mock:
                                                deprecated: true
                                                type: object
                                                description: The API version's mock server relations.
                                                properties:
                                                    additionalProperties:
                                                        type: object
                                                        description: Information about the mock server. The object's name is the mock server relation's ID.
                                                        properties:
                                                            id:
                                                                type: string
                                                                description: The mock server relation ID.
                                                                example: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                                            name:
                                                                type: string
                                                                description: The related mock server's name.
                                                                example: Test Mock
                                                            createdAt:
                                                                type: string
                                                                format: date-time
                                                                description: The date and time at which the mock server relation was created.
                                                                example: "2022-07-10T05:00:25.066Z"
                                                            updatedAt:
                                                                type: string
                                                                format: date-time
                                                                description: The date and time at which the relation was updated.
                                                                example: "2022-07-10T05:00:25.066Z"
                                                            url:
                                                                type: string
                                                                format: url
                                                                description: The mock server's URL.
                                                                example: "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                                            test:
                                                deprecated: true
                                                type: object
                                                description: The API version's test relations.
                                                properties:
                                                    additionalProperties:
                                                        type: object
                                                        description: Information about the test. The object's name is the test relation's ID.
                                                        properties:
                                                            id:
                                                                type: string
                                                                description: The test relation ID.
                                                                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                            name:
                                                                type: string
                                                                description: The related test's name.
                                                                example: Test Collection
                                                            createdAt:
                                                                type: string
                                                                format: date-time
                                                                description: The date and time at which the mock server relation was created.
                                                                example: "2022-07-08T18:32:49.000Z"
                                                            updatedAt:
                                                                type: string
                                                                format: date-time
                                                                description: The date and time at which the relation was updated.
                                                                example: "2022-07-08T18:32:49.000Z"
                                            contracttest:
                                                deprecated: true
                                                type: object
                                                description: The API version's contract test relations.
                                                properties:
                                                    additionalProperties:
                                                        type: object
                                                        description: Information about the contract test. The object's name is the contract test relation's ID.
                                                        properties:
                                                            id:
                                                                type: string
                                                                description: The contract test relation ID.
                                                                example: 2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2
                                                            name:
                                                                type: string
                                                                description: The contract test's name.
                                                                example: Contract Test
                                                            createdAt:
                                                                type: string
                                                                format: date-time
                                                                description: The date and time at which the contract test relation was created.
                                                                example: "2019-08-29T10:18:11.000Z"
                                                            updatedAt:
                                                                type: string
                                                                format: date-time
                                                                description: The date and time at which the relation was last updated.
                                                                example: "2019-08-29T10:18:11.000Z"
                                            integrationtest:
                                                deprecated: true
                                                type: object
                                                description: The API version's contract test relations.
                                                properties:
                                                    additionalProperties:
                                                        type: object
                                                        description: Information about the integration test. The object's name is the integration test relation's ID.
                                                        properties:
                                                            id:
                                                                type: string
                                                                description: The integration test relation ID.
                                                                example: 521b0486-ab91-4d3a-9189-43c9380a0533
                                                            name:
                                                                type: string
                                                                description: The integration test's name.
                                                                example: Integration Test
                                                            createdAt:
                                                                type: string
                                                                format: date-time
                                                                description: The date and time at which the integration test relation was created.
                                                                example: "2019-08-29T10:18:11.000Z"
                                                            updatedAt:
                                                                type: string
                                                                description: The date and time at which the relation was last updated.
                                                                example: "2019-08-29T11:40:39.000Z"
                            example:
                                relations:
                                    apiDefintion:
                                        16bb367e-fafb-4ef3-933b-ee3d971866fb:
                                            id: 16bb367e-fafb-4ef3-933b-ee3d971866fb
                                    unclassified:
                                        b9bccf0f-e06a-433d-b556-a3cd158f0270:
                                            id: b9bccf0f-e06a-433d-b556-a3cd158f0270
                                            name: Test Collection
                                            createdAt: "2023-01-30T17:41:50.000Z"
                                            updatedAt: "2023-01-19T14:50:05.000Z"
                                    schema:
                                        16bb367e-fafb-4ef3-933b-ee3d971866fb:
                                            id: 16bb367e-fafb-4ef3-933b-ee3d971866fb
                "400":
                    $ref: "#/components/responses/instanceNotFoundApi"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        post:
            deprecated: true
            summary: Create relations
            description: |
                **This endpoint is deprecated.**

                Creates a new relation for an API version.
            operationId: createRelations
            tags:
                - API
                - Relations
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                unclassified:
                                    type: array
                                    description: A list of collection ID values with which to create documentation or testing relation.
                                    items:
                                        type: string
                                        example: 12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91
                                documentation:
                                    deprecated: true
                                    type: array
                                    description: |
                                        **Deprecated. Use the `unclassified` property.** A list of collection UID values with which to create an API version relation.
                                    items:
                                        type: string
                                        example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                environment:
                                    deprecated: true
                                    type: array
                                    description: A list of environment UID values with which to create an API version relation.
                                    items:
                                        type: string
                                        example: 5daabc50-8451-43f6-922d-96b403b4f28e
                                mock:
                                    deprecated: true
                                    type: array
                                    description: A list of mock ID values with which to create an API version relation.
                                    items:
                                        type: string
                                        example: 12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289
                                monitor:
                                    deprecated: true
                                    type: array
                                    description: A list of monitor ID values with which to create an API version relation.
                                    items:
                                        type: string
                                        example: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                test:
                                    deprecated: true
                                    type: array
                                    description: A list collection UID values with which to create an API version relation.
                                    items:
                                        type: string
                                        example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                contracttest:
                                    deprecated: true
                                    type: array
                                    description: |
                                        **Deprecated. Use the `test` property.** A list of collection UID values with which to create an API version relation.
                                    items:
                                        type: string
                                        example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                testsuite:
                                    deprecated: true
                                    type: array
                                    description: |
                                        **Deprecated. Use the `test` property.** A list of collection UID values with which to create an API version relation.
                                    items:
                                        type: string
                                        example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                        example:
                            unclassified:
                                - 12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    unclassified:
                                        type: array
                                        description: A list of the documentation and testing relation IDs.
                                        items:
                                            type: string
                                            example: 2e006451-e819-443f-97bc-d1635e51007f
                                    documentation:
                                        deprecated: true
                                        type: array
                                        description: A list of the documentation relation IDs.
                                        items:
                                            type: string
                                            example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    environment:
                                        deprecated: true
                                        type: array
                                        description: A list of the API version's related environment UID values.
                                        items:
                                            type: string
                                            example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                    mock:
                                        deprecated: true
                                        type: array
                                        description: A list of the API version's related mock ID values.
                                        items:
                                            type: string
                                            example: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                    monitor:
                                        deprecated: true
                                        type: array
                                        description: A list of the API version's related monitor ID values.
                                        items:
                                            type: string
                                            example: 1ecfedca-f067-4920-8a53-ec3ec0f416bf
                                    test:
                                        deprecated: true
                                        type: array
                                        description: A list of the test relation IDs.
                                        items:
                                            type: string
                                            example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    contracttest:
                                        deprecated: true
                                        type: array
                                        description: A list of the API version's related collection ID values.
                                        items:
                                            type: string
                                            example: 5bcece87-ca4b-4e75-a967-2a6845626164
                                    testsuite:
                                        deprecated: true
                                        type: array
                                        description: A list of the API version's related collection ID values.
                                        items:
                                            type: string
                                            example: e525fa71-035e-4620-acda-ce878524f1e7
                            example:
                                unclassified:
                                    - 2e006451-e819-443f-97bc-d1635e51007f
                "400":
                    $ref: "#/components/responses/invalidParamsError"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
    /apis/{apiId}/versions/{apiVersionId}/schemas:
        post:
            deprecated: true
            summary: Create a schema
            description: |
                **This endpoint is deprecated.**

                Creates an API definition.
            operationId: createSchema
            tags:
                - API
                - Schema
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                schema:
                                    type: object
                                    properties:
                                        language:
                                            type: string
                                            description: |
                                                The API definition's language. One of:
                                                - OpenAPI and RAML — `json` or `yaml`
                                                - GraphQL — `graphql`
                                                - WSDL — `xml`
                                                - Protobuf — `proto`
                                            example: json
                                            enum:
                                                - json
                                                - yaml
                                                - graphql
                                                - xml
                                                - proto
                                        schema:
                                            type: string
                                            description: The API definition's contents.
                                            example: "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Test API\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://locahost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"List all users\",\n        \"operationId\": \"listUser\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"The user's ID.\",\n            \"example\": 1234,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Information about the user.\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses.\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                        type:
                                            type: string
                                            description: The API definition's type.
                                            enum:
                                                - openapi3_1
                                                - openapi3
                                                - openapi2
                                                - openapi1
                                                - raml
                                                - raml1
                                                - wsdl1
                                                - wsdl2
                                                #- graphql
                                                - proto2
                                                - graphql
                                                - proto3
                                            example: openapi3
                        example:
                            schema:
                                language: json
                                schema: "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Test API\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://locahost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"List all users\",\n        \"operationId\": \"listUser\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"The user's ID.\",\n            \"example\": 1234,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Information about the user.\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses.\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                type: openapi3
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schema:
                                        type: object
                                        description: Information about the created API definition.
                                        properties:
                                            language:
                                                type: string
                                                description: The API definition's language.
                                                example: json
                                            type:
                                                type: string
                                                description: The API definition's type.
                                                example: openapi3
                                            id:
                                                type: string
                                                format: uuid
                                                description: The API definition's ID.
                                                example: e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822
                                            createdBy:
                                                type: string
                                                description: The user ID of the user who created the API definition.
                                                example: "12345678"
                                            updatedBy:
                                                type: string
                                                description: The user ID of the user who last updated the API definition.
                                                example: "12345678"
                                            createdAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the API definition was created.
                                                example: "2021-05-22T13:17:07.000Z"
                                            updatedAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the API definition was last updated.
                                                example: "2021-05-22T13:17:07.000Z"
                                            apiVersion:
                                                type: string
                                                description: The API version's ID.
                                                format: uuid
                                                example: ad810c39-df60-434e-a76f-a2192cd8d81f
                            example:
                                schema:
                                    language: json
                                    type: openapi3
                                    id: e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822
                                    createdBy: "12345678"
                                    updatedBy: "12345678"
                                    createdAt: "2021-05-22T13:17:07.000Z"
                                    updatedAt: "2021-05-22T13:17:07.000Z"
                                    apiVersion: ad810c39-df60-434e-a76f-a2192cd8d81f
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: instanceAlreadyExists
                                            message:
                                                type: string
                                                description: The error message.
                                                example: A schema already exists for this API Version
                            example:
                                error:
                                    name: instanceAlreadyExists
                                    message: A schema already exists for this API Version
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
    /apis/{apiId}/versions/{apiVersionId}/schemas/{schemaId}:
        get:
            deprecated: true
            summary: Get a schema
            description: |
                **This endpoint is deprecated.**

                Gets information about an API's definition.
            operationId: getSchema
            tags:
                - API
                - Schema
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schema:
                                        type: object
                                        description: Information about the created API definition.
                                        properties:
                                            id:
                                                type: string
                                                description: The API definition's ID.
                                                example: 16bb367e-fafb-4ef3-933b-ee3d971866fb
                                            type:
                                                type: string
                                                description: The API definition's type.
                                                example: openapi3
                                            language:
                                                type: string
                                                description: The API definition's language.
                                                example: json
                                            createdAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the API definition was created.
                                                example: "2022-07-01T20:12:31.000Z"
                                            updatedAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the API definition was last updated.
                                                example: "2022-07-01T20:13:04.000Z"
                                            createdBy:
                                                type: string
                                                description: The user ID of the user who created the API definition.
                                                example: "12345678"
                                            updatedBy:
                                                type: string
                                                example: "12345678"
                                            schema:
                                                type: string
                                                example: "{\n  \"openapi\": \"3.0.0\",\n  \"info\": null,\n  \"version\": \"v1.0\",\n  \"title\": \"API\",\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"Returns details about a particular user\",\n        \"operationId\": \"listUser\",\n        \"tags\": [\n          \"user\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"ID of the user\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details about a user by ID\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\'#/components/schemas/User\\\\'\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\'#/components/schemas/Error\\\\'\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                            apiVersion:
                                                type: string
                                                description: The API version's ID.
                                                example: ad810c39-df60-434e-a76f-a2192cd8d81f
                            example:
                                schema:
                                    id: 16bb367e-fafb-4ef3-933b-ee3d971866fb
                                    type: openapi3
                                    language: json
                                    createdAt: "2022-07-01T20:12:31.000Z"
                                    updatedAt: "2022-07-01T20:13:04.000Z"
                                    createdBy: "12345678"
                                    updatedBy: "12345678"
                                    schema: "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Test API\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://locahost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"List all users\",\n        \"operationId\": \"listUser\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"The user's ID.\",\n            \"example\": 1234,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Information about the user.\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses.\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                    apiVersion: a9879d02-74bf-425a-bbec-6d27aa135507
                "400":
                    $ref: "#/components/responses/instanceNotFoundApi"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        put:
            deprecated: true
            summary: Update a schema
            description: |
                **This endpoint is deprecated in Postman v10 and higher.**

                Updates an API definition.
            operationId: updateSchema
            tags:
                - API
                - Schema
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                schema:
                                    type: object
                                    properties:
                                        language:
                                            type: string
                                            description: |
                                                The API definition's language. One of:
                                                - OpenAPI and RAML — `json` or `yaml`
                                                - GraphQL — `graphql`
                                                - WSDL — `xml`
                                                - Protobuf — `proto`
                                            example: yaml
                                            enum:
                                                - json
                                                - yaml
                                                - graphql
                                                - xml
                                                - proto
                                        schema:
                                            type: string
                                            description: The API definition's contents.
                                            example: "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Test API\nservers:\n  - url: http://localhost:3000\npaths:\n  /user:\n    get:\n      summary: List all users\n      operationId: listUser\n      tags:\n        - user\n      parameters:\n        - name: id\n          in: query\n          required: true\n          description: The user's ID.\n          example: 1234\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: Information about the user.\n          headers:\n            x-next:\n              description: A link to the next page of responses.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User' \ncomponents:\n  schemas:\n   User:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int32\n   Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n"
                                        type:
                                            type: string
                                            description: The API definition's type.
                                            enum:
                                                - openapi3_1
                                                - openapi3
                                                - openapi2
                                                - openapi1
                                                - raml
                                                - raml1
                                                - wsdl1
                                                - wsdl2
                                                #- graphql
                                                - proto2
                                                - graphql
                                                - proto3
                                            example: openapi3
                        example:
                            schema:
                                language: yaml
                                schema: "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Test API\nservers:\n  - url: http://localhost:3000\npaths:\n  /user:\n    get:\n      summary: List all users\n      operationId: listUser\n      tags:\n        - user\n      parameters:\n        - name: id\n          in: query\n          required: true\n          description: The user's ID.\n          example: 1234\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: Information about the user.\n          headers:\n            x-next:\n              description: A link to the next page of responses.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User' \ncomponents:\n  schemas:\n   User:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int32\n   Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n"
                                type: openapi3
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schema:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                description: The API definition's ID.
                                                example: e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822
                                            language:
                                                type: string
                                                description: The API definition's language.
                                                example: yaml
                                            apiVersion:
                                                type: string
                                                example: ad810c39-df60-434e-a76f-a2192cd8d81f
                                            type:
                                                type: string
                                                description: The API definition's type.
                                                example: openapi3
                                            createdBy:
                                                type: string
                                                description: The user ID of the user who created the API definition.
                                                example: "12345678"
                                            updatedBy:
                                                type: string
                                                description: The user ID of the user who last updated the API definition.
                                                example: "12345678"
                                            createdAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the API definition was created.
                                                example: "2021-05-22T13:17:07.000Z"
                                            updatedAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the API definition was last updated.
                                                example: "2021-05-22T13:17:07.000Z"
                            example:
                                schema:
                                    id: 16bb367e-fafb-4ef3-933b-ee3d971866fb
                                    language: yaml
                                    apiVersion: a9879d02-74bf-425a-bbec-6d27aa135507
                                    type: openapi3
                                    createdBy: "12345678"
                                    updatedBy: "12345678"
                                    createdAt: "2021-05-22T13:17:07.000Z"
                                    updatedAt: "2021-05-22T13:17:07.000Z"
                "400":
                    $ref: "#/components/responses/instanceNotFoundApi"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
            - $ref: "#/components/parameters/schemaId"
    /apis/{apiId}/versions/{apiVersionId}/schemas/{schemaId}/collections:
        post:
            deprecated: true
            summary: Create a collection from a schema
            description: |
                **This endpoint is deprecated.**

                Creates a collection and links it to an API as one or multiple relations.
            operationId: createCollectionFromSchema
            tags:
                - API
                - Schema
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - name
                                - relations
                            properties:
                                name:
                                    type: string
                                    description: The name of the collection.
                                    example: Test Collection
                                relations:
                                    type: array
                                    description: A list of collection relations.
                                    items:
                                        type: object
                                        properties:
                                            type:
                                                type: string
                                                description: |
                                                    The type of relation to create with the collection.

                                                    **Note:**

                                                    The `contracttest`, `integrationtest`, and `testsuite` values are deprecated.
                                                example: documentation
                                                enum:
                                                    - documentation
                        example:
                            name: Test Collection
                            relations:
                                - type: documentation
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    collection:
                                        type: object
                                        description: Information about the collection.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The collection's ID.
                                                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                            uid:
                                                type: string
                                                format: uid
                                                description: The collection's unique ID.
                                                example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    relations:
                                        type: array
                                        description: Information about the collection's relations.
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    description: The relation's ID.
                                                    example: 4b40f06a-5a6a-448f-bfcd-a6dbcb68da22
                                                type:
                                                    type: string
                                                    description: The type of relation.
                                                    example: documentation
                            example:
                                collection:
                                    id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    uid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                relations:
                                    - type: documentation
                                      id: d86b6c97-fdf9-4c37-825a-49b0223913c7
                "400":
                    $ref: "#/components/responses/invalidParamsError"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
            - $ref: "#/components/parameters/schemaId"
            - $ref: "#/components/parameters/workspaceQueryId"
    /apis/{apiId}/versions/{apiVersionId}/test:
        get:
            deprecated: true
            summary: Get all test relations
            description: |
                **This endpoint is deprecated.**

                Gets all of an API version's test relations.
            operationId: getTestRelations
            tags:
                - API
                - Relations
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    test:
                                        type: array
                                        description: The API version's test relations.
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    format: uuid
                                                    description: The test relation ID.
                                                    example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                name:
                                                    type: string
                                                    description: The related test's name.
                                                    example: Test Collection
                                                updatedAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the relation was updated.
                                                    example: "2022-07-08T18:32:23.000Z"
                                                collectionId:
                                                    type: string
                                                    description: The related test's ID.
                                                    example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                            example:
                                test:
                                    - id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                      name: Test Collection
                                      updatedAt: "2022-07-08T18:32:23.000Z"
                                      collectionId: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                "400":
                    $ref: "#/components/responses/instanceNotFoundApi"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
    /apis/{apiId}/versions/{apiVersionId}/testsuite:
        get:
            deprecated: true
            summary: Get test suite relations
            description: |
                **This endpoint is deprecated**.
            operationId: getTestSuiteRelations
            tags:
                - API
                - Relations
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    testsuite:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                collectionId:
                                                    type: string
                                                    description: The collection ID.
                                                    example: 7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745
                                                id:
                                                    type: string
                                                    format: uuid
                                                    example: 2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2
                                                name:
                                                    type: string
                                                    example: C test
                                                updatedAt:
                                                    type: string
                                                    example: "2019-08-29T10:18:11.000Z"
                            example:
                                testsuite:
                                    - collectionId: 7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745
                                      id: 2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2
                                      name: C test
                                      updatedAt: "2019-08-29T10:18:11.000Z"
                                    - collectionId: 7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725
                                      id: 521b0486-ab91-4d3a-9189-43c9380a0533
                                      name: C1
                                      updatedAt: "2019-08-29T11:40:39.000Z"
                "400":
                    $ref: "#/components/responses/instanceNotFoundApi"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
    /apis/{apiId}/versions/{apiVersionId}/{relationType}/{entityId}/syncWithSchema:
        put:
            deprecated: true
            summary: Sync API relations with definition
            description: |
                **This endpoint is deprecated.**

                Syncs an API version's relation with the API's definition.
            operationId: syncRelationsWithSchema
            tags:
                - API
                - Relations
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                        description: If true, the sync succeeded.
                                        example: true
                            example:
                                success: true
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: validationFailed
                                            message:
                                                type: string
                                                description: The error message.
                                                example: Unable to validate. Only the OpenAPI 3.0 schema format is supported.
                            examples:
                                Validation Failed:
                                    value:
                                        error:
                                            name: validationFailed
                                            message: Unable to validate. Only the OpenAPI 3.0 schema format is supported.
                                Invalid Relation:
                                    value:
                                        error:
                                            name: invalidRelationTypeError
                                            message: The provided relation type is invalid.
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/apiId"
            - $ref: "#/components/parameters/apiVersionId"
            - $ref: "#/components/parameters/relationType"
            - $ref: "#/components/parameters/entityId"
    /audit/logs:
        get:
            summary: Get team audit logs
            description: Gets a list of your team's generated audit events. For a complete list of all audit events, read our [Utilizing audit logs](https://learning.postman.com/docs/administration/audit-logs/) documentation.
            operationId: getAuditLogs
            tags:
                - Audit Logs
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    trails:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: number
                                                    description: The audit event's ID.
                                                    example: 12345678
                                                ip:
                                                    type: string
                                                    description: The IP address of the user that performed the action.
                                                    example: 192.0.2.0
                                                userAgent:
                                                    type: string
                                                    description: The user agent information.
                                                    example: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
                                                action:
                                                    type: string
                                                    description: The action performed by the user.
                                                    example: user.login_google_success
                                                timestamp:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the event occurred.
                                                    example: "2022-08-31T15:19:32.000Z"
                                                message:
                                                    type: string
                                                    description: The audit event's description.
                                                    example: Taylor Lee successfully logged in using the Google OAuth.
                                                data:
                                                    type: object
                                                    properties:
                                                        actor:
                                                            type: object
                                                            description: Information about the user who preformed the audit event.
                                                            properties:
                                                                name:
                                                                    type: string
                                                                    description: The user's name.
                                                                    example: Taylor Lee
                                                                username:
                                                                    type: string
                                                                    description: The user's username.
                                                                    example: taylor-lee
                                                                email:
                                                                    type: string
                                                                    format: email
                                                                    description: The user's email address.
                                                                    example: taylor.lee@example.com
                                                                id:
                                                                    type: number
                                                                    example: 12345678
                                                                active:
                                                                    type: boolean
                                                                    description: If true, the user is active. If false, the user is deactivated.
                                                                    example: true
                                                        user:
                                                            type: object
                                                            description: Information about the user.
                                                            properties:
                                                                name:
                                                                    type: string
                                                                    description: The user's name.
                                                                    example: Taylor Lee
                                                                username:
                                                                    type: string
                                                                    description: The user's username.
                                                                    example: taylor-lee
                                                                email:
                                                                    type: string
                                                                    format: email
                                                                    description: The user's email address.
                                                                    example: taylor.lee@example.com
                                                                id:
                                                                    type: number
                                                                    description: The user's ID.
                                                                    example: 12345678
                                                        team:
                                                            type: object
                                                            description: The user's team information.
                                                            properties:
                                                                name:
                                                                    type: string
                                                                    description: The team's name.
                                                                    example: Test-Team
                                                                id:
                                                                    type: number
                                                                    description: The team's ID.
                                                                    example: 1234
                                                        variables:
                                                            type: object
                                                            description: Additional information about the performed action.
                                                            additionalProperties: true
                            example:
                                trails:
                                    - id: 12345678
                                      ip: 192.0.2.0
                                      userAgent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36
                                      action: user.login_google_success
                                      timestamp: "2022-08-31T15:19:32.000Z"
                                      message: Taylor Lee successfully logged in using the Google OAuth.
                                      data:
                                          actor:
                                              name: Taylor Lee
                                              username: taylor-lee
                                              email: taylor.lee@example.com
                                              id: 12345678
                                              active: true
                                          user:
                                              name: Taylor Lee
                                              username: taylor-lee
                                              email: taylor.lee@example.com
                                              id: 12345678
                                          team:
                                              name: Test-Team
                                              id: 1234
                                    - id: 87654321
                                      ip: 192.0.2.1
                                      userAgent: PostmanRuntime/7.29.0 Postman/5.5.4 ChromeApp
                                      action: user.login_password_success
                                      timestamp: "2022-09-01T06:30:21.000Z"
                                      message: Alex Cruz successfully logged in using the Postman password.
                                      data:
                                          actor:
                                              name: Alex Cruz
                                              username: alex-cruz
                                              email: alex.cruz@example.com
                                              id: 87654321
                                              active: true
                                          user:
                                              name: Alex Cruz
                                              username: alex-cruz
                                              email: alex.cruz@example.com
                                              id: 87654321
                                          team:
                                              name: Test-Team
                                              id: 1234
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - name: since
                  required: false
                  in: query
                  description: Return logs created after the given time, in YYYY-MM-DD format.
                  schema:
                      type: string
                      format: date
                  example: "2022-08-30"
                - name: until
                  required: false
                  in: query
                  description: Return logs created before the given time, in YYYY-MM-DD format.
                  schema:
                      type: string
                      format: date
                  example: "2022-09-15"
                - name: limit
                  required: false
                  in: query
                  description: The maximum number of audit events to return at once.
                  schema:
                      type: integer
                      maximum: 300
                  example: 50
                - name: cursor
                  required: false
                  in: query
                  description: The cursor to get the next set of results.
                  schema:
                      type: string
                  example: eyJzY2hlbWUiOiJjdXJzb3JfcGF0aF92ZXJiIiwiZGlyZWN0aQ==
                - name: order_by
                  required: false
                  in: query
                  description: Return the records in ascending (`ASC`) or descending (`DESC`) order.
                  schema:
                      type: string
                      default: desc
                      enum:
                          - asc
                          - desc
                  example: desc
    /collections:
        get:
            summary: Get all collections
            description: Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections.
            operationId: allCollections
            tags:
                - Collections
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    collections:
                                        type: array
                                        items:
                                            type: object
                                            description: Information about the collection.
                                            properties:
                                                id:
                                                    type: string
                                                    format: uuid
                                                    description: The collection's ID.
                                                    example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                name:
                                                    type: string
                                                    description: The collection's name.
                                                    example: Test Collection
                                                owner:
                                                    type: string
                                                    description: The owner of the collection.
                                                    example: "12345678"
                                                createdAt:
                                                    type: string
                                                    format: date-time
                                                    description: The collection's creation date and time.
                                                    example: "2022-01-13T10:21:46.000Z"
                                                updatedAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the collection was last updated.
                                                    example: "2022-01-13T10:21:46.000Z"
                                                uid:
                                                    type: string
                                                    format: uid
                                                    description: The collection's unique ID.
                                                    example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                fork:
                                                    type: object
                                                    description: If the collection is [forked](https://learning.postman.com/docs/collaborating-in-postman/version-control/#forking-postman-entities), the fork's information.
                                                    properties:
                                                        label:
                                                            type: string
                                                            description: The fork's label.
                                                            example: Test Fork
                                                        createdAt:
                                                            type: string
                                                            format: date-time
                                                            description: The fork's creation date and time.
                                                            example: "2022-06-16T19:51:44.069Z"
                                                        from:
                                                            type: string
                                                            description: The unique ID of the fork's source collection.
                                                            example: 12345678-f2f0cb8f-609d-443f-913c-9831187c326e
                                                isPublic:
                                                    type: boolean
                                                    description: If true, the collection is publicly available.
                                                    example: false
                            example:
                                collections:
                                    - id: dac5eac9-148d-a32e-b76b-3edee9da28f7
                                      name: Cloud API
                                      owner: "12345678"
                                      createdAt: "2022-04-12T10:29:46.000Z"
                                      updatedAt: "2022-04-12T10:29:56.000Z"
                                      uid: 12345678-dac5eac9-148d-a32e-b76b-3edee9da28f7
                                      isPublic: true
                                    - id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                      name: Test Collection
                                      owner: "12345678"
                                      createdAt: "2022-01-13T10:21:46.000Z"
                                      updatedAt: "2022-02-12T11:29:56.000Z"
                                      uid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                      isPublic: false
                                      fork:
                                          label: Test Fork
                                          createdAt: "2022-06-16T19:51:44.069Z"
                                          from: 12345678-f2f0cb8f-609d-443f-913c-9831187c326e
                                    - id: f695cab7-6878-eb55-7943-ad88e1ccfd65
                                      name: Postman Echo
                                      owner: "12345678"
                                      createdAt: "2021-04-11T09:18:26.000Z"
                                      updatedAt: "2022-05-01T15:29:32.000Z"
                                      uid: 12345678-f695cab7-6878-eb55-7943-ad88e1ccfd65
                                      isPublic: true
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - $ref: "#/components/parameters/workspaceQueryId"
        post:
            summary: Create a collection
            description: |
                Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html).

                **Note:**

                - For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):
                    - `info` object — Use the `definitions.info` entry.
                    - `item` object — Use the `definitions.items` entry.
                - For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
            operationId: createCollection
            tags:
                - Collections
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                collection:
                                    type: object
                                    description: For a complete list of values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
                                    required:
                                        - info
                                    properties:
                                        info:
                                            type: object
                                            required:
                                                - name
                                                - schema
                                            description: An object that contains basic information about the collection. For a complete list of values, refer to the `definitions.info` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
                                            properties:
                                                name:
                                                    type: string
                                                    description: The collection's name.
                                                    example: Test Collection
                                                schema:
                                                    type: string
                                                    format: url
                                                    description: A URL to the collection's schema.
                                                    example: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
                                        item:
                                            type: array
                                            description: Information about the collection's HTTP requests and responses. For a complete list of values, refer to the `definitions.item` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
                                            items:
                                                required:
                                                    - request
                                                type: object
                                                properties:
                                                    request:
                                                        type: object
                                                        description: The collection's request information. For a complete list of values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.
                        example:
                            collection:
                                info:
                                    name: Test Collection
                                    description:
                                        This collection makes a request to the Postman Echo service to get
                                        a list of request headers sent by an HTTP client.
                                    schema: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
                                item:
                                    - name: Test GET Response
                                      event:
                                          - listen: test
                                            script:
                                                id: 7d2334fc-a84a-4c3d-b26c-7529afa4c0ae
                                                exec:
                                                    - pm.test("Status code is 200", function () {
                                                    - "    pm.response.to.have.status(200);"
                                                    - "});"
                                                type: text/javascript
                                      request:
                                          url: https://echo.getpostman.com/headers
                                          method: GET
                                          header:
                                              - key: Content-Type
                                                value: application/json
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    collection:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The collection's ID.
                                                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                            name:
                                                type: string
                                                description: The collection's name.
                                                example: Test Collection
                                            uid:
                                                type: string
                                                format: uid
                                                description: The collection's unique ID.
                                                example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                            example:
                                collection:
                                    id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    name: Test Collection
                                    uid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: malformedRequestError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: Found 1 errors with the supplied collection.
                                            details:
                                                type: array
                                                description: Information about the error.
                                                items:
                                                    type: string
                            examples:
                                Bad Request:
                                    value:
                                        error:
                                            name: instanceFoundError
                                            message: The specified item already exists.
                                            details:
                                                item: collection
                                                id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                Malformed Request:
                                    value:
                                        error:
                                            name: malformedRequestError
                                            message: Found 1 errors with the supplied collection.
                                            details:
                                                - ": must have required property 'info'"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - $ref: "#/components/parameters/workspaceQueryId"
    /collections/fork/{collectionId}:
        post:
            summary: Create a fork
            description: Creates a [fork](https://learning.postman.com/docs/collaborating-in-postman/version-control/#creating-a-fork) from an existing collection into a workspace.
            operationId: createAFork
            tags:
                - Collections
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - label
                            type: object
                            properties:
                                label:
                                    type: string
                                    description: The fork's label.
                                    example: Test Fork
                        example:
                            label: Test Fork
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    collection:
                                        type: object
                                        description: Information about the forked collection.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The forked collection's ID.
                                                example: 09547fef-a9a5-4e00-998b-aa563e8db69a
                                            name:
                                                type: string
                                                description: The collection's name.
                                                example: Test Collection
                                            fork:
                                                type: object
                                                description: Information about the collection's fork.
                                                properties:
                                                    label:
                                                        type: string
                                                        description: The fork's label.
                                                        example: Test Fork
                                                    createdAt:
                                                        type: string
                                                        format: date-time
                                                        description: The fork's creation date and time.
                                                        example: "2022-06-16T19:51:44.069Z"
                                                    from:
                                                        type: string
                                                        format: uid
                                                        description: The unique ID of fork's source collection.
                                                        example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                            uid:
                                                type: string
                                                format: uid
                                                description: The forked collection's unique ID.
                                                example: 12345678-09547fef-a9a5-4e00-998b-aa563e8db69a
                            example:
                                collection:
                                    id: 09547fef-a9a5-4e00-998b-aa563e8db69a
                                    name: Test Collection
                                    fork:
                                        label: Test Fork
                                        createdAt: "2022-06-16T19:51:44.069Z"
                                        from: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    uid: 12345678-09547fef-a9a5-4e00-998b-aa563e8db69a
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundCollection"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - name: workspace
                  in: query
                  required: true
                  schema:
                      type: string
                      example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                  description: The workspace ID in which to fork the collection.
        parameters:
            - $ref: "#/components/parameters/collectionId"
    /collections/merge:
        post:
            summary: Merge a fork
            description: Merges a forked collection back into its destination collection.
            operationId: mergeAFork
            tags:
                - Collections
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - source
                                - destination
                            type: object
                            properties:
                                destination:
                                    type: string
                                    format: uid
                                    description: The destination collection's unique ID.
                                    example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                source:
                                    type: string
                                    format: uid
                                    description: The forked collection's unique ID.
                                    example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                strategy:
                                    type: string
                                    description: |
                                        The fork's merge strategy:

                                        - `deleteSource` — The system deletes the forked collection after a successful merge into the destination collection.
                                        - `updateSourceWithDestination` — The system only merges the forked collection into the destination collection.
                                    enum:
                                        - deleteSource
                                        - updateSourceWithDestination
                                    default: updateSourceWithDestination
                                    example: deleteSource
                        example:
                            strategy: deleteSource
                            source: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                            destination: 12345678-09547fef-a9a5-4e00-998b-aa563e8db69a
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    collection:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The source collection's ID.
                                                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                            uid:
                                                type: string
                                                format: uid
                                                description: The source collection's unique ID.
                                                example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                            example:
                                collection:
                                    id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    uid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundCollection"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
    /collections/{collectionId}:
        get:
            summary: Get a collection
            description: Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
            operationId: singleCollection
            tags:
                - Collections
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    collection:
                                        type: object
                                        additionalProperties: true
                                        description: For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
                                        properties:
                                            info:
                                                type: object
                                                description: An object that contains basic information about the collection.
                                                properties:
                                                    _postman_id:
                                                        type: string
                                                        description: The collection's Postman ID.
                                                        example: f2e66c2e-5297-e4a5-739e-20cbb90900e3
                                                    description:
                                                        type: string
                                                        description: The collection's description.
                                                        example: This is a sample collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.
                                                    name:
                                                        type: string
                                                        description: The collection's name.
                                                        example: Test Collection
                                                    schema:
                                                        type: string
                                                        format: url
                                                        description: A URL to the collection's schema.
                                                        example: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
                                                    updatedAt:
                                                        type: string
                                                        format: date-time
                                                        description: The date and time at which the collection was last updated.
                                                        example: "2022-06-16T20:21:13.000Z"
                                                    uid:
                                                        type: string
                                                        format: uid
                                                        description: The collection's unique ID.
                                                        example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                items:
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            request:
                                                                type: object
                                                                description: The collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.
                            example:
                                collection:
                                    info:
                                        name: Test Collection
                                        description: This is a test collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.
                                        _postman_id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                        schema: https://schema.getpostman.com/json/collection/v2.0.0/collection.json
                                        updatedAt: "2022-06-16T20:21:13.000Z"
                                        uid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    item:
                                        - name: Test GET Response
                                          id: 82ee981b-e19f-962a-401e-ea34ebfb4848
                                          event:
                                              - listen: test
                                                script:
                                                    id: 7d2334fc-a84a-4c3d-b26c-7529afa4c0ae
                                                    exec:
                                                        - pm.test("Status code is 200", function () {
                                                        - "    pm.response.to.have.status(200);"
                                                        - "});"
                                                    type: text/javascript
                                          request:
                                              url: https://echo.getpostman.com/headers
                                              method: GET
                                              header:
                                                  - key: Content-Type
                                                    value: application/json
                                          response: []
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: instanceNotFoundError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: We could not find the collection you are looking for
                            example:
                                error:
                                    name: instanceNotFoundError
                                    message: We could not find the collection you are looking for
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - $ref: "#/components/parameters/collectionAccessKeyQuery"
        put:
            summary: Update a collection
            description: |
                Updates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html).

                **Note:**

                - For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):
                    - `info` object — Use the `definitions.info` entry.
                    - `item` object — Use the `definitions.items` entry.
                - For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).

                ### Important

                Use caution when using this endpoint. The system will **replace** the existing collection with the values passed in the request body.
            operationId: updateCollection
            tags:
                - Collections
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                collection:
                                    type: object
                                    description: For a complete list of values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
                                    required:
                                        - info
                                        - item
                                    properties:
                                        info:
                                            type: object
                                            required:
                                                - name
                                                - schema
                                            description: An object that contains basic information about the collection. For a complete list of values, refer to the `definitions.info` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
                                            properties:
                                                description:
                                                    type: string
                                                    description: The collection's description.
                                                    example: This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.
                                                name:
                                                    type: string
                                                    description: The collection's name.
                                                    example: Test Collection
                                                schema:
                                                    type: string
                                                    format: url
                                                    description: A URL to the collection's schema.
                                                    example: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
                                        item:
                                            type: array
                                            description: Information about the collection's HTTP requests and responses. For a complete list of values, refer to the `definitions.item` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
                                            items:
                                                required:
                                                    - request
                                                type: object
                                                properties:
                                                    request:
                                                        type: object
                                                        description: The collection's request information. For a complete list of values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.
                        example:
                            collection:
                                info:
                                    name: Test Collection
                                    description:
                                        This collection makes a request to the Postman Echo service to get
                                        a list of request headers sent by an HTTP client.
                                    schema: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
                                item:
                                    - name: Test POST Response
                                      event:
                                          - listen: test
                                            script:
                                                id: 7d2334fc-a84a-4c3d-b26c-7529afa4c0ae
                                                exec:
                                                    - pm.test("Status code is 200", function () {
                                                    - "    pm.response.to.have.status(200);"
                                                    - "});"
                                                type: text/javascript
                                      request:
                                          url: https://echo.getpostman.com/headers
                                          method: POST
                                          header:
                                              - key: Content-Type
                                                value: application/json
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    collection:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The collection's ID.
                                                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                            name:
                                                type: string
                                                description: The collection's name.
                                                example: Test Collection
                                            uid:
                                                type: string
                                                format: uid
                                                description: The collection's unique ID.
                                                example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                            example:
                                collection:
                                    id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    name: Test Collection
                                    uid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: malformedRequestError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: Found 2 errors with the supplied collection.
                                            details:
                                                type: array
                                                description: Information about the error.
                                                items:
                                                    type: string
                                                    example:
                                                        - ": must have required property 'item'"
                                                        - "info: must have required property 'schema'"
                            examples:
                                Malformed Request:
                                    value:
                                        error:
                                            name: malformedRequestError
                                            message: Found 2 errors with the supplied collection.
                                            details:
                                                - ": must have required property 'item'"
                                                - "info: must have required property 'schema'"
                                Collection ID Mismatch:
                                    value:
                                        error:
                                            name: collectionMismatchError
                                            message: The collection ID in the path does not match the collection ID in the request body.
                "401":
                    $ref: "#/components/responses/unauthorized"
                "403":
                    $ref: "#/components/responses/forbiddenError"
                "404":
                    $ref: "#/components/responses/instanceNotFoundCollection"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        patch:
            summary: Update a collection name or description
            description: Updates the name or description of a collection.
            operationId: updateCollectionNameDescription
            tags:
                - Collections
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                collection:
                                    type: object
                                    required:
                                        - info
                                    properties:
                                        info:
                                            type: object
                                            description: An object that contains the collection's updated name and description. If you pass this as an empty object, the endpoint returns the collection's current `name` and `description` values.
                                            properties:
                                                name:
                                                    type: string
                                                    description: The collection's new name.
                                                    example: Test Collection v2
                                                description:
                                                    type: string
                                                    description: The collection's new description.
                                                    example: This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.
                        example:
                            collection:
                                info:
                                    name: Test Collection v2
                                    description: This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    collection:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The collection's ID.
                                                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                            name:
                                                type: string
                                                description: The collection's updated name.
                                                example: Test Collection v2
                                            description:
                                                type: string
                                                format: uid
                                                description: The collection's updated description.
                                                example: This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.
                            example:
                                collection:
                                    id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    name: Test Collection v2
                                    description: This is a sample collection that makes a request to the Postman Echo service. It returns a list of request headers sent by an HTTP client.
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: badRequest
                                            message:
                                                type: string
                                                description: The error message.
                                                example: You can only update the name and description of a collection's \"info\" object.
                            example:
                                error:
                                    name: badRequest
                                    message: You can only update the name and description of a collection's "info" object.
                "401":
                    $ref: "#/components/responses/unauthorized"
                "403":
                    $ref: "#/components/responses/forbiddenError"
                "404":
                    $ref: "#/components/responses/instanceNotFoundCollection"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        delete:
            summary: Delete a collection
            description: Deletes a collection.
            operationId: deleteCollection
            tags:
                - Collections
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    collection:
                                        type: object
                                        description: Information about the deleted collection.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The deleted collection's ID.
                                                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                            uid:
                                                type: string
                                                format: uid
                                                description: The deleted collection's unique ID.
                                                example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                            example:
                                collection:
                                    id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    uid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundCollection"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/collectionId"
    /environments:
        get:
            summary: Get all environments
            description: Gets information about all of your [environments](https://learning.postman.com/docs/sending-requests/managing-environments/).
            operationId: allEnvironments
            tags:
                - Environments
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    environments:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    format: uuid
                                                    description: The environment's ID.
                                                    example: 5daabc50-8451-43f6-922d-96b403b4f28e
                                                name:
                                                    type: string
                                                    description: The environment's name.
                                                    example: Test Environment
                                                createdAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the environment was created.
                                                    example: "2020-09-23T14:31:18.000Z"
                                                updatedAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the environment was last updated.
                                                    example: "2020-12-04T14:13:40.000Z"
                                                owner:
                                                    type: string
                                                    description: The environment owner's ID.
                                                    example: "12345678"
                                                uid:
                                                    type: string
                                                    format: uid
                                                    description: The environment's unique ID.
                                                    example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                                isPublic:
                                                    type: boolean
                                                    description: If true, the environment is public.
                                                    example: false
                            example:
                                environments:
                                    - id: 5daabc50-8451-43f6-922d-96b403b4f28e
                                      name: Test Environment
                                      createdAt: "2020-09-23T14:31:18.000Z"
                                      updatedAt: "2020-12-04T14:13:40.000Z"
                                      owner: "12345678"
                                      uid: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                      isPublic: false
                                    - id: 7d786cc8-142b-4d62-b5a5-872afc37ad16
                                      name: Environment Scanner
                                      createdAt: "2020-02-04T19:34:23.000Z"
                                      updatedAt: "2020-08-12T13:34:06.000Z"
                                      owner: "12345678"
                                      uid: 12345678-7d786cc8-142b-4d62-b5a5-872afc37ad16
                                      isPublic: false
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundEnvironment"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - $ref: "#/components/parameters/workspaceQueryId"
        post:
            summary: Create an environment
            description: Creates an environment.
            operationId: createEnvironment
            tags:
                - Environments
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                environment:
                                    type: object
                                    required:
                                        - name
                                    properties:
                                        name:
                                            type: string
                                            description: The environment's name.
                                            example: Test Environment
                                        values:
                                            type: array
                                            description: Information about the environment's variables.
                                            items:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        enabled:
                                                            type: boolean
                                                            description: If true, the variable is enabled.
                                                            example: true
                                                        key:
                                                            type: string
                                                            description: The variable's name.
                                                            example: apiKey
                                                        value:
                                                            type: string
                                                            description: The variable's value.
                                                            example: PMAK-1234-5678-0987-6543
                                                        type:
                                                            type: string
                                                            description: The variable type.
                                                            enum:
                                                                - secret
                                                                - default
                                                                - any
                                                            example: secret
                        example:
                            environment:
                                name: Test Environment
                                values:
                                    - key: apiKey
                                      value: PMAK-1234-5678-0987-6543
                                      enabled: true
                                      type: secret
                                    - key: variable_1
                                      value: The variable_1 value.
                                      enabled: false
                                      type: default
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    environment:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The environment's ID.
                                                example: 5daabc50-8451-43f6-922d-96b403b4f28e
                                            name:
                                                type: string
                                                description: The environment's name.
                                                example: Test Environment
                                            uid:
                                                type: string
                                                format: uid
                                                description: The environment's unique ID.
                                                example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                            example:
                                environment:
                                    id: 5daabc50-8451-43f6-922d-96b403b4f28e
                                    name: Test Environment
                                    uid: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                example: malformedRequestError
                                            message:
                                                type: string
                                                example: Found 1 errors with the supplied environment.
                                            details:
                                                type: array
                                                items:
                                                    type: string
                                                    example: ": must have required property 'environment'"
                            example:
                                error:
                                    name: malformedRequestError
                                    message: Found 1 errors with the supplied environment.
                                    details:
                                        - ": must have required property 'environment'"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "403":
                    $ref: "#/components/responses/forbiddenError"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - $ref: "#/components/parameters/workspaceQueryId"
    /environments/{environmentId}:
        get:
            summary: Get an environment
            description: Gets information about an environment.
            operationId: singleEnvironment
            tags:
                - Environments
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    environment:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The environment's ID.
                                                example: 5daabc50-8451-43f6-922d-96b403b4f28e
                                            name:
                                                type: string
                                                description: The environment's name.
                                                example: Test Environment
                                            owner:
                                                type: string
                                                description: The ID of environment's owner.
                                                example: "12345678"
                                            createdAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the environment was created.
                                                example: "2020-11-05T13:59:22.000Z"
                                            updatedAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the environment was last updated.
                                                example: "2020-11-05T13:59:23.000Z"
                                            values:
                                                type: array
                                                description: Information about the environment's variables.
                                                items:
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            enabled:
                                                                type: boolean
                                                                description: If true, the variable is enabled.
                                                                example: true
                                                            key:
                                                                type: string
                                                                description: The variable's name.
                                                                example: apiKey
                                                            value:
                                                                type: string
                                                                description: The variable's value.
                                                                example: PMAK-1234-5678-0987-6543
                                                            type:
                                                                type: string
                                                                description: The variable type.
                                                                enum:
                                                                    - secret
                                                                    - default
                                                                    - any
                                                                example: secret
                                            isPublic:
                                                type: boolean
                                                description: If true, the environment is public.
                                                example: false
                            example:
                                environment:
                                    id: 5daabc50-8451-43f6-922d-96b403b4f28e
                                    name: Test Environment
                                    owner: "12345678"
                                    createdAt: "2020-11-05T13:59:22.000Z"
                                    updatedAt: "2020-11-05T13:59:23.000Z"
                                    values:
                                        - key: apiKey
                                          value: PMAK-1234-5678-0987-6543
                                          enabled: true
                                          type: secret
                                    isPublic: false
                "400":
                    $ref: "#/components/responses/instanceNotFoundEnvironment"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        put:
            summary: Update an environment
            description: Updates an environment.
            operationId: updateEnvironment
            tags:
                - Environments
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                environment:
                                    type: object
                                    required:
                                        - name
                                    properties:
                                        name:
                                            type: string
                                            description: The environment's name.
                                            example: Test Environment
                                        values:
                                            type: array
                                            description: Information about the environment's variables.
                                            items:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        enabled:
                                                            type: boolean
                                                            description: If true, the variable is enabled.
                                                            example: true
                                                        key:
                                                            type: string
                                                            description: The variable's name.
                                                            example: apiKey
                                                        value:
                                                            type: string
                                                            description: The variable's value.
                                                            example: PMAK-1234-5678-0987-6543
                                                        type:
                                                            type: string
                                                            description: The variable type.
                                                            enum:
                                                                - secret
                                                                - default
                                                                - any
                                                            example: secret
                        example:
                            environment:
                                name: Test A Environment
                                values:
                                    - key: variable_a
                                      value: The variable_a value.
                                      enabled: false
                                      type: default
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    environment:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                example: 5daabc50-8451-43f6-922d-96b403b4f28e
                                            name:
                                                type: string
                                                example: Test A Environment
                                            uid:
                                                type: string
                                                example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                            example:
                                environment:
                                    id: 5daabc50-8451-43f6-922d-96b403b4f28e
                                    name: Test A Environment
                                    uid: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: malformedRequestError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: "Invalid type: null (expected object) at environment.values.0"
                            example:
                                error:
                                    name: malformedRequestError
                                    message: "Invalid type: null (expected object) at environment.values.0"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        delete:
            summary: Delete an environment
            description: Deletes an environment.
            operationId: deleteEnvironment
            tags:
                - Environments
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    environment:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The deleted environment's ID.
                                                example: 4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce
                                            uid:
                                                type: string
                                                format: uid
                                                description: The deleted environment's unique ID.
                                                example: 5852-4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce
                            example:
                                environment:
                                    id: 5daabc50-8451-43f6-922d-96b403b4f28e
                                    uid: 1234567-5daabc50-8451-43f6-922d-96b403b4f28e
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundEnvironment"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/environmentId"
    /import/exported:
        post:
            summary: Import an exported Postman data dump file
            deprecated: true
            description: |
                **This endpoint is deprecated.**

                Imports exported Postman data. This endpoint only accepts [export data dump files](https://postman.postman.co/me/export).

                For more information, read our [Exporting data dumps](https://learning.postman.com/docs/getting-started/importing-and-exporting-data/#exporting-data-dumps) documentation.
            operationId: importExportedData
            tags:
                - Import
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - type
                                - input
                            properties:
                                type:
                                    type: string
                                    description: The `file` type value.
                                    enum:
                                        - file
                                    example: file
                                input:
                                    type: string
                                    description: A file containing a valid user's export .zip file.
                                    format: binary
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    collections:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    format: uuid
                                                    description: The collection's ID.
                                                    example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                name:
                                                    type: string
                                                    description: The collection's name.
                                                    example: Test API
                                                uid:
                                                    type: string
                                                    format: uid
                                                    description: The collection's unique ID.
                                                    example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                            example:
                                collections:
                                    - id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                      name: Test API
                                      uid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: paramMissingError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: The request body is missing a value for the type parameter. Check your request and try again.
                                            details:
                                                type: object
                                                description: Information about the error.
                                                properties:
                                                    param:
                                                        type: string
                                                        description: The parameter name.
                                                        example: type
                            examples:
                                Invalid Parameters:
                                    value:
                                        error:
                                            name: invalidParamsError
                                            message:
                                                The request body has invalid values for the type parameter. Value must
                                                be one of file, string, json
                                            details:
                                                param: type
                                Missing Parameter:
                                    value:
                                        error:
                                            name: paramMissingError
                                            message: The request body is missing a value for the type parameter. Check your request and try again.
                                            details:
                                                param: type
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
    /import/openapi:
        post:
            summary: Import an OpenAPI definition
            description: Imports an OpenAPI definition into Postman as a new [Postman Collection](https://learning.postman.com/docs/getting-started/creating-the-first-collection/).
            operationId: importExternalApiSpecification
            tags:
                - Import
            requestBody:
                content:
                    application/json:
                        schema:
                            oneOf:
                                - $ref: "#/components/schemas/jsonSchema"
                                - $ref: "#/components/schemas/jsonStringified"
                        examples:
                            Import a Stringified OpenAPI Definition:
                                value:
                                    type: string
                                    input: "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Test API\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://locahost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"List all users\",\n        \"operationId\": \"listUser\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"The user's ID.\",\n            \"example\": 1234,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Information about the user.\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses.\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                            Import an OpenAPI Definition:
                                value:
                                    type: json
                                    input:
                                        openapi: 3.0.0
                                        info:
                                            version: 1.0.0
                                            title: Test API
                                        servers:
                                            - url: http://locahost:3000
                                        paths:
                                            "/user":
                                                get:
                                                    summary: List all users
                                                    operationId: listUser
                                                    parameters:
                                                        - name: id
                                                          in: query
                                                          required: true
                                                          description: The user's ID.
                                                          example: 1234
                                                          schema:
                                                              type: integer
                                                              format: int32
                                                    responses:
                                                        "200":
                                                            description: Information about the user.
                                                            headers:
                                                                x-next:
                                                                    description: A link to the next page of responses.
                                                                    schema:
                                                                        type: string
                                                            content:
                                                                application/json:
                                                                    schema:
                                                                      type: object
                                                                      required:
                                                                          - id
                                                                          - name
                                                                      properties:
                                                                        id:
                                                                            type: integer
                                                                            format: int64
                                                                        name:
                                                                            type: string
                                                                        tag:
                                                                            type: string
                            Import an OpenAPI Definition with Options:
                                value:
                                    type: json
                                    options:
                                        folderStrategy: Path
                                        disableOptionalParameters: true
                                        exampleParametersResolution: Schema
                                    input:
                                        openapi: 3.0.0
                                        info:
                                            version: 1.0.0
                                            title: Test API
                                        servers:
                                            - url: http://locahost:3000
                                        paths:
                                            "/user":
                                                get:
                                                    summary: List all users
                                                    operationId: listUser
                                                    parameters:
                                                        - name: id
                                                          in: query
                                                          required: true
                                                          description: The user's ID.
                                                          example: 1234
                                                          schema:
                                                              type: integer
                                                              format: int32
                                                    responses:
                                                        "200":
                                                            description: Information about the user.
                                                            headers:
                                                                x-next:
                                                                    description: A link to the next page of responses.
                                                                    schema:
                                                                        type: string
                                                            content:
                                                                application/json:
                                                                schema:
                                                                    type: object
                                                                    required:
                                                                    - id
                                                                    - name
                                                                    properties:
                                                                        id:
                                                                          type: integer
                                                                          format: int64
                                                                        name:
                                                                            type: string
                                                                        tag:
                                                                            type: string

                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/importExportFile"
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    collections:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    format: uuid
                                                    description: The collection's ID.
                                                    example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                name:
                                                    type: string
                                                    description: The collection's name.
                                                    example: Test Collection
                                                uid:
                                                    type: string
                                                    format: uid
                                                    description: The collection's unique ID.
                                                    example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                            example:
                                collections:
                                    - id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                      name: Test Collection
                                      uid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                environments: []
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: invalidParamsError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: The request body has invalid values for the type parameter. Value must be one of file, string, json
                                            details:
                                                type: object
                                                description: Information about the error.
                                                properties:
                                                    param:
                                                        type: string
                                                        description: The parameter name.
                                                        example: type
                            examples:
                                Invalid Parameters:
                                    value:
                                        error:
                                            name: invalidParamsError
                                            message: The request body has invalid values for the type parameter. Value must be one of file, string, json
                                            details:
                                                param: type
                                Missing Parameters:
                                    value:
                                        error:
                                            name: paramMissingError
                                            message:
                                                The request body is missing a value for the type parameter. Check your
                                                request and try again.
                                            details:
                                                param: type
                                Malformed Request:
                                    value:
                                        error:
                                            name: invalidSchemaError
                                            message: Specification must contain a semantic version number of the OAS specification
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - $ref: "#/components/parameters/workspaceQueryId"
    /me:
        get:
            summary: Get authenticated user
            description: |
                Gets information about the authenticated user.

                **Note:**

                This API returns a different response for users with the [Guest role](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles).
            operationId: apiKeyOwner
            tags:
                - User
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    user:
                                        type: object
                                        description: Information about the authenticated user.
                                        properties:
                                            avatar:
                                                type: string
                                                description: The user's avatar image URL.
                                                format: url
                                                example: https://example.com/user/r5u9qpvmujfjf6lbqmga.jpg
                                            email:
                                                type: string
                                                format: email
                                                description: The user's email address.
                                                example: taylor.lee@example.com
                                            fullName:
                                                type: string
                                                description: The user's full name.
                                                example: Taylor Lee
                                            id:
                                                type: number
                                                description: The user's Postman ID.
                                                example: 12345678
                                            isPublic:
                                                type: boolean
                                                description: If true, the user's information is publicly available.
                                                example: true
                                            username:
                                                type: string
                                                description: The user's username.
                                                example: taylor-lee
                                    operations:
                                        type: array
                                        description: Information about operations and their usage limits. The API does not return this object for users with the [Guest role](https://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles).
                                        items:
                                            type: object
                                            properties:
                                                limit:
                                                    type: number
                                                    description: The operation's limit value.
                                                    example: 1000000
                                                name:
                                                    type: string
                                                    description: The operation's name.
                                                    example: mock_usage
                                                overage:
                                                    type: number
                                                    description: The operation's overage value.
                                                    example: 0
                                                usage:
                                                    type: number
                                                    description: The operation's current usage value.
                                                    example: 110276
                            examples:
                                Successful Response:
                                    value:
                                        user:
                                            id: 12345678
                                            username: taylor-lee
                                            email: taylor.lee@example.com
                                            fullName: Taylor Lee
                                            avatar: https://example.com/user/r5u9qpvmujfjf6lbqmga.jpg
                                            isPublic: true
                                        operations:
                                            - name: mock_usage
                                              limit: 1000000
                                              usage: 110276
                                              overage: 0
                                            - name: monitor_request_runs
                                              limit: 10000000
                                              usage: 1141750
                                              overage: 0
                                            - name: api_usage
                                              limit: 1000000
                                              usage: 16240
                                              overage: 0
                                            - name: custom_domains
                                              limit: 25
                                              usage: 25
                                              overage: 0
                                            - name: serverless_requests
                                              limit: 10000
                                              usage: 0
                                              overage: 0
                                            - name: integrations
                                              limit: 5000
                                              usage: 1018
                                              overage: 0
                                            - name: cloud_agent_requests
                                              limit: 1000000
                                              usage: 1615
                                              overage: 0
                                Guest User Response:
                                    value:
                                        user:
                                            id: 12345678
                                            username: taylor-lee
                                            email: taylor.lee@example.com
                                            fullName: Taylor Lee
                                            avatar: https://example.com/user/r5u9qpvmujfjf6lbqmga.jpg
                                            isPublic: true
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
    /mocks:
        get:
            summary: Get all mock servers
            description: Gets all mock servers.
            operationId: getMocks
            tags:
                - Mocks
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    mocks:
                                        type: array
                                        items:
                                            type: object
                                            description: Information about the mock servers.
                                            properties:
                                                collection:
                                                    type: string
                                                    description: The mock's associated collection unique ID.
                                                    example: 12345678-39fee52f-b806-3ffa-1173-00a6f5b183dc
                                                config:
                                                    type: object
                                                    description: Information about the mock server's configuration.
                                                    properties:
                                                        delay:
                                                            type: object
                                                            nullable: true
                                                            description: Information about the mock server's simulated network delay settings. This returns a null value if there are no configured network delay settings.
                                                            properties:
                                                                type:
                                                                    type: string
                                                                    description:
                                                                        |
                                                                        The type of simulated delay value:

                                                                        - `fixed` — The delay value is a fixed value.
                                                                    example: fixed
                                                                    enum:
                                                                        - fixed
                                                                preset:
                                                                    type: string
                                                                    description:
                                                                        |
                                                                        The simulated fixed network delay value:

                                                                        - `1` — 2G (300 ms).
                                                                        - `2` — 3G (100 ms).

                                                                        The object does not return this value for custom delay values.
                                                                    example: "2"
                                                                    enum:
                                                                        - "1"
                                                                        - "2"
                                                                duration:
                                                                    type: integer
                                                                    description: The configured delay, in milliseconds.
                                                                    example: 100
                                                        headers:
                                                            type: array
                                                            description: A list of the mock server's headers.
                                                            items:
                                                                type: string
                                                            example: []
                                                        matchBody:
                                                            type: boolean
                                                            description: If true, match the request body.
                                                            example: false
                                                        matchQueryParams:
                                                            type: boolean
                                                            description: If true, match query parameters.
                                                            example: true
                                                        matchWildcards:
                                                            type: boolean
                                                            description: If true, use wildcard variable matching.
                                                            example: true
                                                createdAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the mock server was created.
                                                    example: "2022-06-09T19:00:39.000Z"
                                                environment:
                                                    type: string
                                                    description: The mock server's environment.
                                                    example: 1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524
                                                id:
                                                    type: string
                                                    format: uuid
                                                    description: The mock server's ID.
                                                    example: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                                isPublic:
                                                    type: boolean
                                                    description: If true, the mock server is public.
                                                    example: false
                                                mockUrl:
                                                    type: string
                                                    format: url
                                                    description: The mock server URL.
                                                    example: https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io
                                                name:
                                                    type: string
                                                    description: The mock server's name.
                                                    example: Test Mock
                                                owner:
                                                    type: string
                                                    description: The ID of mock server's owner.
                                                    example: "12345678"
                                                uid:
                                                    type: string
                                                    format: uid
                                                    description: The mock server's unique ID.
                                                    example: 12345678-e782b64e-406b-4a6c-8fe9-9ebe84aeb706
                                                updatedAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the mock server was last updated.
                                                    example: "2022-06-09T19:00:39.000Z"
                            example:
                                mocks:
                                    - id: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                      owner: "12345678"
                                      uid: 12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289
                                      collection: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                      mockUrl: https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io
                                      name: Test Mock
                                      config:
                                          headers: []
                                          matchBody: false
                                          matchQueryParams: true
                                          matchWildcards: true
                                          delay:
                                              type: fixed
                                              duration: 140000
                                          serverResponseId:
                                      createdAt: "2022-07-25T20:54:30.000Z"
                                      updatedAt: "2022-07-25T20:54:30.000Z"
                                      isPublic: false
                                      environment: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        post:
            summary: Create a mock server
            description: |
                **In Postman v10 and higher you cannot create mocks for collections added to an API definition.**

                Creates a mock server in a collection.
            operationId: createMock
            tags:
                - Mocks
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                mock:
                                    type: object
                                    required:
                                        - collection
                                    properties:
                                        collection:
                                            type: string
                                            description: The mock's associated collection unique ID.
                                            example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                        environment:
                                            type: string
                                            description: The mock server's environment.
                                            example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                        name:
                                            type: string
                                            description: The mock server's name.
                                            example: Test Mock
                        example:
                            mock:
                                collection: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                environment: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                name: Test Mock
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    mock:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The mock server's ID.
                                                example: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                            owner:
                                                type: string
                                                description: The ID of mock server's owner.
                                                example: "12345678"
                                            uid:
                                                type: string
                                                format: uid
                                                description: The mock server's unique ID.
                                                example: 12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289
                                            collection:
                                                type: string
                                                description: The mock's associated collection unique ID.
                                                example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                            mockUrl:
                                                type: string
                                                format: url
                                                description: The mock server URL.
                                                example: https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io
                                            config:
                                                type: object
                                                description: Information about the mock server's configuration.
                                                properties:
                                                    delay:
                                                        type: object
                                                        nullable: true
                                                        description: Information about the mock server's simulated network delay settings. This returns a null value if there are no configured network delay settings.
                                                        properties:
                                                            type:
                                                                type: string
                                                                description: |
                                                                    The type of simulated delay value:

                                                                    - `fixed` — The delay value is a fixed value.
                                                                example: fixed
                                                                enum:
                                                                    - fixed
                                                            preset:
                                                                type: string
                                                                description: |
                                                                    The simulated fixed network delay value:

                                                                    - `1` — 2G (300 ms).
                                                                    - `2` — 3G (100 ms).

                                                                    The object does not return this value for custom delay values.
                                                                example: "2"
                                                                enum:
                                                                    - "1"
                                                                    - "2"
                                                            duration:
                                                                type: integer
                                                                description: The configured delay, in milliseconds.
                                                                example: 100
                                                    headers:
                                                        type: array
                                                        description: A list of the mock server's headers.
                                                        items:
                                                            type: string
                                                        example: []
                                                    matchBody:
                                                        type: boolean
                                                        description: If true, match the request body.
                                                        example: false
                                                    matchQueryParams:
                                                        type: boolean
                                                        description: If true, match query parameters.
                                                        example: true
                                                    matchWildcards:
                                                        type: boolean
                                                        description: If true, use wildcard variable matching.
                                                        example: true
                                                    serverResponseId:
                                                        type: string
                                                        nullable: true
                                                        format: uuid
                                                        description: The active server-level response's ID. All calls to the mock server will return this response.
                                                        example: ~
                                            createdAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the mock server was created.
                                                example: "2022-06-09T19:00:39.000Z"
                                            updatedAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the mock server was last updated.
                                                example: "2022-06-09T19:00:39.000Z"
                                            environment:
                                                type: string
                                                description: The mock's associated environment unique ID.
                                                example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                            example:
                                mock:
                                    id: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                    owner: "12345678"
                                    uid: 12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289
                                    collection: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    mockUrl: https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io
                                    name: Test Mock
                                    config:
                                        headers: []
                                        matchBody: false
                                        matchQueryParams: true
                                        matchWildcards: true
                                        delay:
                                        serverResponseId:
                                    createdAt: "2022-06-09T19:00:39.000Z"
                                    updatedAt: "2022-06-09T19:00:39.000Z"
                                    environment: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: paramMissingError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: Parameter is missing in the request.
                                            details:
                                                type: object
                                                description: Information about the error.
                                                properties:
                                                    param:
                                                        type: array
                                                        description: Information about the missing parameter.
                                                        items:
                                                            type: string
                                                        example: collection
                            example:
                                error:
                                    name: paramMissingError
                                    message: Parameter is missing in the request.
                                    details:
                                        param:
                                            - collection
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - $ref: "#/components/parameters/workspaceQueryId"
    /mocks/{mockId}:
        get:
            summary: Get a mock server
            description: Gets information about a mock server.
            operationId: getMock
            tags:
                - Mocks
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    mock:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The mock server's ID.
                                                example: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                            owner:
                                                type: string
                                                description: The ID of mock server's owner.
                                                example: "12345678"
                                            uid:
                                                type: string
                                                format: uid
                                                description: The mock server's unique ID.
                                                example: 12345678-e782b64e-406b-4a6c-8fe9-9ebe84aeb706
                                            collection:
                                                type: string
                                                description: The mock's associated collection unique ID.
                                                example: 12345678-39fee52f-b806-3ffa-1173-00a6f5b183dc
                                            mockUrl:
                                                type: string
                                                format: url
                                                description: The mock server URL.
                                                example: https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io
                                            name:
                                                type: string
                                                description: The mock server's name.
                                                example: Test Mock
                                            config:
                                                type: object
                                                description: Information about the mock server's configuration.
                                                properties:
                                                    headers:
                                                        type: array
                                                        description: A list of the mock server's headers.
                                                        items: {}
                                                    matchBody:
                                                        type: boolean
                                                        description: If true, match the request body.
                                                        example: false
                                                    matchQueryParams:
                                                        type: boolean
                                                        description: If true, match query parameters.
                                                        example: true
                                                    matchWildcards:
                                                        type: boolean
                                                        description: If true, use wildcard variable matching.
                                                        example: true
                                                    serverResponseId:
                                                        type: string
                                                        nullable: true
                                                        format: uuid
                                                        description: The active server-level response's ID. All calls to the mock server will return this response.
                                                        example: ~
                                            createdAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the mock server was created.
                                                example: "2022-06-09T19:00:39.000Z"
                                            updatedAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the mock server was last updated.
                                                example: "2022-06-09T19:00:39.000Z"
                                            isPublic:
                                                type: boolean
                                                description: If true, the mock server is public.
                                                example: false
                                            environment:
                                                type: string
                                                description: The mock server's environment.
                                                example: 1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524
                            example:
                                mock:
                                    id: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                    owner: "12345678"
                                    uid: 12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289
                                    collection: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    mockUrl: https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io
                                    name: Test Mock
                                    config:
                                        headers: []
                                        matchBody: false
                                        matchQueryParams: true
                                        matchWildcards: true
                                        delay:
                                            type: fixed
                                            duration: 140000
                                        serverResponseId: ~
                                    createdAt: "2022-07-25T20:54:30.000Z"
                                    updatedAt: "2022-07-25T20:54:30.000Z"
                                    isPublic: false
                                    environment: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundMock"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        put:
            summary: Update a mock server
            description: Updates a mock server.
            operationId: updateMock
            tags:
                - Mocks
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                mock:
                                    type: object
                                    properties:
                                        name:
                                            type: string
                                            description: The mock server's name.
                                            example: Test Mock
                                        environment:
                                            type: string
                                            format: uuid
                                            description: The associated environment's ID.
                                            example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                        description:
                                            type: string
                                            description: The mock server's description.
                                            example: This is a test mock server.
                                        private:
                                            type: boolean
                                            description: If true, the mock server is set private.
                                            example: false
                                        versionTag:
                                            type: string
                                            description: The API's version tag ID.
                                            example: abf07d3d-f8ec-47d4-8015-9fe83078b4ec
                                        config:
                                            type: object
                                            description: The mock server's configuration settings.
                                            properties:
                                                serverResponseId:
                                                    type: string
                                                    nullable: true
                                                    description: |
                                                        The server response ID. This sets the given server response as the default response for each request.

                                                        To deactivate a server response, pass a null value.
                                                    example: 9a291bbe-dc0a-44ba-a3c8-6dbd06a61460
                        examples:
                            Update a Mock:
                                value:
                                    mock:
                                        name: Test Mock
                                        environment: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19
                                        description: This is a test mock server.
                                        private: false
                                        versionTag: abf07d3d-f8ec-47d4-8015-9fe83078b4ec
                            Activate a Mock's Server Response:
                                value:
                                    mock:
                                        config:
                                            serverResponseId: 9a291bbe-dc0a-44ba-a3c8-6dbd06a61460
                            Deactivate a Mock's Server Response:
                                value:
                                    mock:
                                        config:
                                            serverResponseId:
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    mock:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The mock server's ID.
                                                example: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                            owner:
                                                type: string
                                                description: The ID of mock server's owner.
                                                example: "12345678"
                                            uid:
                                                type: string
                                                format: uid
                                                description: The mock server's unique ID.
                                                example: 12345678-e782b64e-406b-4a6c-8fe9-9ebe84aeb706
                                            collection:
                                                type: string
                                                description: The mock's associated collection unique ID.
                                                example: 12345678-39fee52f-b806-3ffa-1173-00a6f5b183dc
                                            mockUrl:
                                                type: string
                                                format: url
                                                description: The mock server URL.
                                                example: https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io
                                            name:
                                                type: string
                                                description: The mock server's name.
                                                example: Test Mock
                                            config:
                                                type: object
                                                description: Information about the mock server's configuration.
                                                properties:
                                                    headers:
                                                        type: array
                                                        description: A list of the mock server's headers.
                                                        items: {}
                                                    matchBody:
                                                        type: boolean
                                                        description: If true, match the request body.
                                                        example: false
                                                    matchQueryParams:
                                                        type: boolean
                                                        description: If true, match query parameters.
                                                        example: true
                                                    matchWildcards:
                                                        type: boolean
                                                        description: If true, use wildcard variable matching.
                                                        example: true
                                            createdAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the mock server was created.
                                                example: "2022-06-09T19:00:39.000Z"
                                            updatedAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the mock server was last updated.
                                                example: "2022-06-09T19:00:39.000Z"
                                            environment:
                                                type: string
                                                description: The mock server's environment.
                                                example: 1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524
                            example:
                                mock:
                                    id: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                    owner: "12345678"
                                    uid: 12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289
                                    collection: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    mockUrl: https://e3d951bf-873f-49ac-a658-b2dcb91d3289.mock.pstmn.io
                                    name: Test Mock
                                    config:
                                        headers: []
                                        matchBody: false
                                        matchQueryParams: true
                                        matchWildcards: true
                                    createdAt: "2022-06-09T19:38:06.000Z"
                                    updatedAt: "2022-06-13T18:55:25.000Z"
                                    environment: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundMock"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        delete:
            summary: Delete a mock server
            description: Deletes a mock server.
            operationId: deleteMock
            tags:
                - Mocks
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    mock:
                                        type: object
                                        description: Information about the mock server.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The mock server's ID.
                                                example: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                            uid:
                                                type: string
                                                format: uid
                                                description: The mock server's unique ID.
                                                example: 12345678-e782b64e-406b-4a6c-8fe9-9ebe84aeb706
                            example:
                                mock:
                                    id: e782b64e-406b-4a6c-8fe9-9ebe84aeb706
                                    uid: 12345678-e782b64e-406b-4a6c-8fe9-9ebe84aeb706
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: instanceNotFoundError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: JobTemplate 12345678-e782b64e-406b-4a6c-8fe9-9ebe84aeb706 does not exist
                            examples:
                                Not Found:
                                    value:
                                        error:
                                            name: instanceNotFoundError
                                            message: JobTemplate 12345678-e782b64e-406b-4a6c-8fe9-9ebe84aeb706 does not exist
                                Parameter Missing:
                                    value:
                                        error:
                                            name: paramMissingError
                                            message: Only the name and description of a mock can be updated.
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundMock"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/mockId"
    /mocks/{mockId}/call-logs:
        get:
            summary: Get a mock server's call logs
            description: |
                Gets a mock server's call logs. You can get a maximum of 6.5MB of call logs or a total of 100 call logs, whichever limit is met first in one API call.

                Call logs contain exchanged request and response data made to mock servers. The logs provide visibility into how the mock servers are being used. You can log data to debug, test, analyze, and more, depending upon the use case.
            operationId: getMockCallLogs
            tags:
                - Mocks
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    call-logs:
                                        type: array
                                        items:
                                            type: object
                                            description: Information about the mock server's server responses.
                                            properties:
                                                id:
                                                    type: string
                                                    description: The server response's ID.
                                                    example: 0f63f54d-665e-436a-95b4-c1302d7685a9-3925
                                                responseName:
                                                    type: string
                                                    description: The server response's name.
                                                    example: Bad Request
                                                servedAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the server response was served.
                                                    example: "2022-01-17T06:19:22.000Z"
                                                request:
                                                    type: object
                                                    description: The server response's request information.
                                                    properties:
                                                        method:
                                                            type: string
                                                            description: The request method.
                                                            example: POST
                                                        path:
                                                            type: string
                                                            description: The request's path.
                                                            example: "/animals"
                                                        headers:
                                                            type: object
                                                            description: The request's headers.
                                                            properties:
                                                                key:
                                                                    type: string
                                                                    description: The request header's name.
                                                                    example: content-type
                                                                value:
                                                                    type: string
                                                                    description: The request header's value.
                                                                    example: application/json
                                                        body:
                                                            type: object
                                                            description: The request's body information.
                                                            properties:
                                                                mode:
                                                                    type: string
                                                                    description: The request body's media type (mode).
                                                                    example: raw
                                                                data:
                                                                    type: string
                                                                    description: The request body's contents.
                                                                    example: '{"type":"hamster","breed":"Syrian Hamster","age":"1 month"}'
                                                response:
                                                    type: object
                                                    description: The server response's response information.
                                                    properties:
                                                        type:
                                                            type: string
                                                            description: The type of response.
                                                        statusCode:
                                                            type: number
                                                            description: The response's status code.
                                                            example: 400
                                                        headers:
                                                            type: object
                                                            description: The response's headers.
                                                            properties:
                                                                description:
                                                                    type: object
                                                                    description: The response header's description information.
                                                                    properties:
                                                                        content:
                                                                            type: string
                                                                            description: The response header description's content.
                                                                            example: ""
                                                                        type:
                                                                            type: string
                                                                            description: The response header description's media type.
                                                                            example: text/plain
                                                                key:
                                                                    type: string
                                                                    description: The response header's name.
                                                                    example: content-type
                                                                value:
                                                                    type: string
                                                                    description: The response header's value.
                                                                    example: application/json
                                                        body:
                                                            type: object
                                                            description: The response's body information.
                                                            properties:
                                                                data:
                                                                    type: string
                                                                    description: The response body's contents.
                                                                    example: "{\n\t\"message\": \"Malformed request. You need to send gender as part of the request.\"\n}"
                                    meta:
                                        type: object
                                        description: The response's non-standard meta information.
                                        properties:
                                            nextCursor:
                                                type: string
                                                nullable: true
                                                example: ~
                            examples:
                                Successful Response:
                                    value:
                                        call-logs:
                                            - id: c4505a1e-7261-497c-91ff-db4bd51351a6-9545
                                              responseName: Double check your method and the request path and try again.
                                              servedAt: "2022-01-17T06:19:30.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: error
                                                  statusCode: 404
                                            - id: 0f63f54d-665e-436a-95b4-c1302d7685a9-3925
                                              responseName: Bad request
                                              servedAt: "2022-01-17T06:19:22.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 400
                                            - id: adab0d30-5c38-43bf-af90-4119925138e2-3795
                                              responseName: Successful addition of animals to the store
                                              servedAt: "2022-01-17T06:19:16.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                            - id: dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468
                                              responseName: Get filtered list of Animals
                                              servedAt: "2022-01-17T06:18:26.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals?type=dog"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                            - id: a5330463-26e1-4812-a962-e44b569a2054-9894
                                              responseName: Get Animals
                                              servedAt: "2022-01-17T06:18:06.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                        meta:
                                            nextCursor:
                                Filter by Limit:
                                    value:
                                        call-logs:
                                            - id: c4505a1e-7261-497c-91ff-db4bd51351a6-9545
                                              responseName: Double check your method and the request path and try again.
                                              servedAt: "2022-01-17T06:19:30.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: error
                                                  statusCode: 404
                                            - id: 0f63f54d-665e-436a-95b4-c1302d7685a9-3925
                                              responseName: Bad request
                                              servedAt: "2022-01-17T06:19:22.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 400
                                        meta:
                                            nextCursor: eyJzY2hlbWUiOiJjdXJzb3JfcGFnaW5hdGlvbklkIiwiZGlyZWN0aW9uVHlwZSI6Im5leHQiLCJwaXZvdCI6InBhZ2luYXRpb25JZCIsInZhbHVlIjoxNjQyNDAwMzU2MDAwNTc5fQ==
                                Filter by Cursor:
                                    value:
                                        call-logs:
                                            - id: adab0d30-5c38-43bf-af90-4119925138e2-3795
                                              responseName: Successful addition of animals to the store
                                              servedAt: "2022-01-17T06:19:16.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                            - id: dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468
                                              responseName: Get filtered list of Animals
                                              servedAt: "2022-01-17T06:18:26.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals?type=dog"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                            - id: a5330463-26e1-4812-a962-e44b569a2054-9894
                                              responseName: Get Animals
                                              servedAt: "2022-01-17T06:18:06.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                        meta:
                                            nextCursor:
                                Filter by Date Range:
                                    value:
                                        call-logs:
                                            - id: c4505a1e-7261-497c-91ff-db4bd51351a6-9545
                                              responseName: Double check your method and the request path and try again.
                                              servedAt: "2022-01-17T06:19:30.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: error
                                                  statusCode: 404
                                            - id: 0f63f54d-665e-436a-95b4-c1302d7685a9-3925
                                              responseName: Bad request
                                              servedAt: "2022-01-17T06:19:22.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 400
                                            - id: adab0d30-5c38-43bf-af90-4119925138e2-3795
                                              responseName: Successful addition of animals to the store
                                              servedAt: "2022-01-17T06:19:16.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                            - id: dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468
                                              responseName: Get filtered list of Animals
                                              servedAt: "2022-01-17T06:18:26.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals?type=dog"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                            - id: a5330463-26e1-4812-a962-e44b569a2054-9894
                                              responseName: Get Animals
                                              servedAt: "2022-01-17T06:18:06.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                        meta:
                                            nextCursor:
                                Filter by Date Since:
                                    value:
                                        call-logs:
                                            - id: c4505a1e-7261-497c-91ff-db4bd51351a6-9545
                                              responseName: Double check your method and the request path and try again.
                                              servedAt: "2022-01-17T06:19:30.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: error
                                                  statusCode: 404
                                            - id: 0f63f54d-665e-436a-95b4-c1302d7685a9-3925
                                              responseName: Bad request
                                              servedAt: "2022-01-17T06:19:22.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 400
                                            - id: adab0d30-5c38-43bf-af90-4119925138e2-3795
                                              responseName: Successful addition of animals to the store
                                              servedAt: "2022-01-17T06:19:16.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                        meta:
                                            nextCursor:
                                Filter by responseStatusCode:
                                    value:
                                        call-logs:
                                            - id: adab0d30-5c38-43bf-af90-4119925138e2-3795
                                              responseName: Successful addition of animals to the store
                                              servedAt: "2022-01-17T06:19:16.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                            - id: dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468
                                              responseName: Get filtered list of Animals
                                              servedAt: "2022-01-17T06:18:26.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals?type=dog"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                            - id: a5330463-26e1-4812-a962-e44b569a2054-9894
                                              responseName: Get Animals
                                              servedAt: "2022-01-17T06:18:06.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                        meta:
                                            nextCursor:
                                Filter by responseType:
                                    value:
                                        call-logs:
                                            - id: 0f63f54d-665e-436a-95b4-c1302d7685a9-3925
                                              responseName: Bad request
                                              servedAt: "2022-01-17T06:19:22.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 400
                                            - id: adab0d30-5c38-43bf-af90-4119925138e2-3795
                                              responseName: Successful addition of animals to the store
                                              servedAt: "2022-01-17T06:19:16.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                            - id: dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468
                                              responseName: Get filtered list of Animals
                                              servedAt: "2022-01-17T06:18:26.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals?type=dog"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                            - id: a5330463-26e1-4812-a962-e44b569a2054-9894
                                              responseName: Get Animals
                                              servedAt: "2022-01-17T06:18:06.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                        meta:
                                            nextCursor:
                                Filter by requestMethod:
                                    value:
                                        call-logs:
                                            - id: c4505a1e-7261-497c-91ff-db4bd51351a6-9545
                                              responseName: Double check your method and the request path and try again.
                                              servedAt: "2022-01-17T06:19:30.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: error
                                                  statusCode: 404
                                            - id: 0f63f54d-665e-436a-95b4-c1302d7685a9-3925
                                              responseName: Bad request
                                              servedAt: "2022-01-17T06:19:22.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 400
                                            - id: adab0d30-5c38-43bf-af90-4119925138e2-3795
                                              responseName: Successful addition of animals to the store
                                              servedAt: "2022-01-17T06:19:16.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                        meta:
                                            nextCursor:
                                Filter by requestPath:
                                    value:
                                        call-logs:
                                            - id: dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468
                                              responseName: Get filtered list of Animals
                                              servedAt: "2022-01-17T06:18:26.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals?type=dog"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                        meta:
                                            nextCursor:
                                Sort by servedAt:
                                    value:
                                        call-logs:
                                            - id: a5330463-26e1-4812-a962-e44b569a2054-9894
                                              responseName: Get Animals
                                              servedAt: "2022-01-17T06:18:06.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                            - id: dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468
                                              responseName: Get filtered list of Animals
                                              servedAt: "2022-01-17T06:18:26.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals?type=dog"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                            - id: adab0d30-5c38-43bf-af90-4119925138e2-3795
                                              responseName: Successful addition of animals to the store
                                              servedAt: "2022-01-17T06:19:16.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 200
                                            - id: 0f63f54d-665e-436a-95b4-c1302d7685a9-3925
                                              responseName: Bad request
                                              servedAt: "2022-01-17T06:19:22.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: success
                                                  statusCode: 400
                                            - id: c4505a1e-7261-497c-91ff-db4bd51351a6-9545
                                              responseName: Double check your method and the request path and try again.
                                              servedAt: "2022-01-17T06:19:30.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                              response:
                                                  type: error
                                                  statusCode: 404
                                        meta:
                                            nextCursor:
                                Filter by Header and Body Data:
                                    value:
                                        call-logs:
                                            - id: c4505a1e-7261-497c-91ff-db4bd51351a6-9545
                                              responseName: Double check your method and the request path and try again.
                                              servedAt: "2022-01-17T06:19:30.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                                  headers:
                                                      - key: content-length
                                                        value: "50"
                                                      - key: x-mock-match-request-body
                                                        value: "true"
                                                      - key: content-type
                                                        value: application/json
                                                  body:
                                                      mode: raw
                                                      data: '{"type":"hamster","breed":"Syrian Hamster"}'
                                              response:
                                                  type: error
                                                  statusCode: 404
                                                  headers: []
                                                  body:
                                                      data:
                                                          '{"error":{"name":"mockRequestNotFoundError","message":"Double check your
                                                          method and the request path and try again."}}'
                                            - id: 0f63f54d-665e-436a-95b4-c1302d7685a9-3925
                                              responseName: Bad request
                                              servedAt: "2022-01-17T06:19:22.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                                  headers:
                                                      - key: content-length
                                                        value: "69"
                                                      - key: x-mock-match-request-body
                                                        value: "true"
                                                      - key: content-type
                                                        value: application/json
                                                  body:
                                                      mode: raw
                                                      data: '{"type":"hamster","breed":"Syrian Hamster","age":"1 month"}'
                                              response:
                                                  type: success
                                                  statusCode: 400
                                                  headers:
                                                      - description:
                                                            content: ""
                                                            type: text/plain
                                                        key: Content-Type
                                                        value: application/json
                                                  body:
                                                      data:
                                                          "{\n\t\"message\": \"Malformed request. You need to send gender as part
                                                          of the request.\"\n}"
                                            - id: adab0d30-5c38-43bf-af90-4119925138e2-3795
                                              responseName: Successful addition of animals to the store
                                              servedAt: "2022-01-17T06:19:16.000Z"
                                              request:
                                                  method: POST
                                                  path: "/animals"
                                                  headers:
                                                      - key: content-length
                                                        value: "88"
                                                      - key: x-mock-match-request-body
                                                        value: "true"
                                                      - key: content-type
                                                        value: application/json
                                                  body:
                                                      mode: raw
                                                      data: '{"type":"hamster","breed":"Syrian Hamster","age":"1 month","gender":"male"}'
                                              response:
                                                  type: success
                                                  statusCode: 200
                                                  headers:
                                                      - description:
                                                            content: ""
                                                            type: text/plain
                                                        key: Content-Type
                                                        value: application/json
                                                  body:
                                                      data: "{\n\t\"message\": \"Animal added successfully to the store\"\n}"
                                            - id: dae50669-f4c1-460a-b3a4-3a2445f4f39d-2468
                                              responseName: Get filtered list of Animals
                                              servedAt: "2022-01-17T06:18:26.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals?type=dog"
                                                  headers: []
                                                  body: {}
                                              response:
                                                  type: success
                                                  statusCode: 200
                                                  headers:
                                                      - description:
                                                            content: ""
                                                            type: text/plain
                                                        key: Content-Type
                                                        value: application/json
                                                  body:
                                                      data:
                                                          "[\n\t{\n\t\t\"type\": \"dog\",\n\t\t\"breed\": \"German Sheperd\",\n\t\t\"age\":
                                                          \"6 months\",\n\t\t\"gender\": \"male\"\n\t},\n\t{\n\t\t\"type\": \"dog\",\n\t\t\"breed\":
                                                          \"Bulldog\",\n\t\t\"age\": \"1 year\",\n\t\t\"gender\": \"female\"\n\t}\n]"
                                            - id: a5330463-26e1-4812-a962-e44b569a2054-9894
                                              responseName: Get Animals
                                              servedAt: "2022-01-17T06:18:06.000Z"
                                              request:
                                                  method: GET
                                                  path: "/animals"
                                                  headers: []
                                                  body: {}
                                              response:
                                                  type: success
                                                  statusCode: 200
                                                  headers:
                                                      - description:
                                                            content: ""
                                                            type: text/plain
                                                        key: Content-Type
                                                        value: application/json
                                                  body:
                                                      data:
                                                          "[\n\t{\n\t\t\"type\": \"dog\",\n\t\t\"breed\": \"German Sheperd\",\n\t\t\"age\":
                                                          \"6 months\",\n\t\t\"gender\": \"male\"\n\t},\n\t{\n\t\t\"type\": \"dog\",\n\t\t\"breed\":
                                                          \"Bulldog\",\n\t\t\"age\": \"1 year\",\n\t\t\"gender\": \"female\"\n\t},\n\t{\n\t\t\"type\":
                                                          \"cat\",\n\t\t\"breed\": \"Persian cat\",\n\t\t\"age\": \"3 months\",\n\t\t\"gender\":
                                                          \"female\"\n\t}\n]"
                                        meta:
                                            nextCursor:
                "400":
                    $ref: "#/components/responses/serverResponseNotFoundError"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundMock"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - name: limit
                  in: query
                  description: The maximum number of rows to return in the response.
                  schema:
                      type: number
                      default: 100
                      example: 3
                - name: cursor
                  in: query
                  description: A pointer to the first record of the set of paginated results. To view the next response, use the `nextCursor` value for this parameter.
                  schema:
                      type: string
                      example: eyJzY2hlbWUiOiJjdXJzb3JfcGFnaW5hdGlvbklkIiwiZGlyZWN0aW9uVHlwZSI6Im5leHQiLCJwaXZvdCI6InBhZ2luYXRpb25JZCIsInZhbHVlIjoxNjQyNDAwMzU2MDAwNTc5fQ==
                - name: until
                  in: query
                  description: Return only the call logs created at and after this time, in ISO 8601 UTC format.
                  schema:
                      type: string
                      format: date-time
                      example: "2022-06-15T00:00:00.000Z"
                - name: since
                  in: query
                  description: Return only the call logs created at and before this time, in ISO 8601 UTC format.
                  schema:
                      type: string
                      format: date-time
                      example: "2022-06-01T00:00:00.000Z"
                - name: responseStatusCode
                  in: query
                  description: Return only the call logs that match the given HTTP response status code.
                  schema:
                      type: number
                      example: 500
                - name: responseType
                  in: query
                  description: Return only the call logs with a matching response type. For example, `success` or `error`. Matching is not case-sensitive.
                  schema:
                      type: string
                      example: success
                - name: requestMethod
                  in: query
                  description: Return only the call logs with a matching HTTP method. Matching is not case-sensitive.
                  schema:
                      type: string
                      example: post
                - name: requestPath
                  in: query
                  description: Return only the call logs that match the request's path. Matching is not case-sensitive.
                  schema:
                      type: string
                      example: /animals?type=Dog
                - name: sort
                  in: query
                  description: |
                      Sort the results by the given value.

                      If you use this query parameter, you must also use the `direction` parameter.
                  schema:
                      type: string
                      example: updatedAt
                - name: direction
                  in: query
                  description: |
                      Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive.

                      If you use this query parameter, you must also use the `sort` parameter.
                  schema:
                      type: string
                      enum:
                          - asc
                          - desc
                      example: asc
                - name: include
                  in: query
                  description: Include call log records with header and body data. This query parameter accepts the `request.headers`, `request.body`, `response.headers`, and `response.body` values. For multiple include types, comma-separate each value.
                  schema:
                      type: string
                  examples:
                      One Include Value:
                          value: request.body
                      Multiple Include Values:
                          value: request.headers,request.body,response.headers,response.body
        parameters:
            - $ref: "#/components/parameters/mockId"
    /mocks/{mockId}/publish:
        post:
            summary: Publish a mock server
            description: Publishes a mock server. Publishing a mock server sets its **Access Control** configuration setting to public.
            operationId: publishMock
            tags:
                - Mocks
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    mock:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The mock server's ID.
                                                example: e3d951bf-873f-49ac-a658-b2dcb91d3289
                            example:
                                mock:
                                    id: e3d951bf-873f-49ac-a658-b2dcb91d3289
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: mockAlreadyPublishedError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: This mock is already public.
                            example:
                                error:
                                    name: mockAlreadyPublishedError
                                    message: This mock is already public.
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundMock"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/mockId"
    /mocks/{mockId}/unpublish:
        delete:
            summary: Unpublish a mock server
            description: Unpublishes a mock server. Unpublishing a mock server sets its **Access Control** configuration setting to private.
            operationId: unpublishMock
            tags:
                - Mocks
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    mock:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The mock server's ID.
                                                example: e3d951bf-873f-49ac-a658-b2dcb91d3289
                            example:
                                mock:
                                    id: e3d951bf-873f-49ac-a658-b2dcb91d3289
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: mockAlreadyUnpublishedError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: This mock has already been deleted.
                            example:
                                error:
                                    name: mockAlreadyUnpublishedError
                                    message: This mock has already been deleted.
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundMock"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/mockId"
    /mocks/{mockId}/server-responses:
        get:
            summary: Get all server responses
            description: Gets all of a mock server's server responses.
            operationId: getMockServerResponses
            tags:
                - Mocks
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: array
                                description: Information about the mock server's responses.
                                items:
                                    type: object
                                    description: Information about the server response.
                                    properties:
                                        id:
                                            type: string
                                            format: uuid
                                            description: The server response's ID.
                                            example: 965cdd16-fe22-4d96-a161-3d05490ac421
                                        name:
                                            type: string
                                            description: The server response's name.
                                            example: Internal Server Error
                                        statusCode:
                                            type: number
                                            description: The server response's 5xx HTTP response code.
                                            example: 500
                                        createdAt:
                                            type: string
                                            format: date-time
                                            description: The date and time at which the server response was created.
                                            example: "2022-08-02T14:57:44.000Z"
                                        updatedAt:
                                            type: string
                                            format: date-time
                                            description: The date and time at which the server response was last updated.
                                            example: "2022-08-02T14:57:44.000Z"
                                        createdBy:
                                            type: string
                                            description: The user ID of the user who created the server response.
                                            example: "12345678"
                                        updatedBy:
                                            type: string
                                            description: The user ID of the user who last updated the server response.
                                            example: "12345678"
                            example:
                                - id: 965cdd16-fe22-4d96-a161-3d05490ac421
                                  name: Internal Server Error
                                  statusCode: 500
                                  createdAt: "2022-08-02T14:57:44.000Z"
                                  updatedAt: "2022-08-02T14:57:44.000Z"
                                  createdBy: "12345678"
                                  updatedBy: "12345678"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundMock"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        post:
            summary: Create a server response
            description: |
                Creates a server response. Server responses let you simulate 5xx server-level responses, such as 500 or 503.

                Server-level responses are agnostic to application-level logic. Server responses let you simulate this behavior on a mock server. You do not need to define each error for all exposed paths on the mock server.

                If you set a server response as active, then all the calls to the mock server return with that active server response.

                **Note:**

                You can create multiple server responses for a mock server, but only one mock server can be set as active.
            operationId: createServerResponse
            tags:
                - Mocks
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                serverResponse:
                                    type: object
                                    required:
                                        - name
                                        - statusCode
                                    properties:
                                        name:
                                            type: string
                                            description: The server response's name.
                                            example: Internal Server Error
                                        statusCode:
                                            type: integer
                                            description: The server response's 5xx HTTP response code. This property **only** accepts 5xx values.
                                            example: 500
                                        headers:
                                            type: array
                                            description: The server response's request headers, such as Content-Type, Accept, encoding, and other information.
                                            items:
                                                type: object
                                                properties:
                                                    key:
                                                        type: string
                                                        description: The request header's key value.
                                                        example: Content-Type
                                                    value:
                                                        type: string
                                                        description: The request header's value.
                                                        example: application/json
                                        language:
                                            type: string
                                            nullable: true
                                            description: The server response's body language type.
                                            enum:
                                                - text
                                                - javascript
                                                - json
                                                - html
                                                - xml
                                            example: json
                                        body:
                                            type: string
                                            description: The server response's body that returns when calling the mock server.
                                            example: "{\n    \"message\": \"Something went wrong; try again later.\"\n}"
                        example:
                            serverResponse:
                                name: Internal Server Error
                                statusCode: 500
                                header:
                                    - key: Content-Type
                                      value: application/json
                                language: json
                                body: "{\n    \"message\": \"Something went wrong; try again later.\"\n}"
            responses:
                "200":
                    $ref: "#/components/responses/mockServerResponse"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: paramMissingError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: Parameter is missing in the request.
                                            details:
                                                type: object
                                                description: Information about the error.
                                                properties:
                                                    param:
                                                        type: array
                                                        description: Information about the missing parameter.
                                                        items:
                                                            type: string
                                                        example: statusCode
                            examples:
                                Parameter Missing:
                                    value:
                                        error:
                                            name: paramMissingError
                                            message: Parameter is missing in the request.
                                            details:
                                                param:
                                                    - statusCode
                                Invalid Parameter:
                                    value:
                                        error:
                                            name: invalidParamsError
                                            message: "Invalid value for parameter: language. You must pass a valid language."
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/mockId"
    /mocks/{mockId}/server-responses/{serverResponseId}:
        get:
            summary: Get a server response
            description: Gets information about a server response.
            operationId: getMockServerResponse
            tags:
                - Mocks
            responses:
                "200":
                    $ref: "#/components/responses/mockServerResponse"
                "400":
                    $ref: "#/components/responses/serverResponseNotFoundError"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundMock"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - $ref: "#/components/parameters/mockId"
                - $ref: "#/components/parameters/serverResponseId"
        put:
            summary: Update a server response
            description: Updates a server response.
            operationId: updateServerResponse
            tags:
                - Mocks
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                serverResponse:
                                    type: object
                                    properties:
                                        name:
                                            type: string
                                            description: The server response's name.
                                            example: Internal Server Error
                                        statusCode:
                                            type: integer
                                            description: The server response's 5xx HTTP response code. This property **only** accepts 5xx values.
                                            example: 500
                                        headers:
                                            type: array
                                            description: The server response's request headers, such as Content-Type, Accept, encoding, and other information.
                                            items:
                                                type: object
                                                properties:
                                                    key:
                                                        type: string
                                                        description: The request header's key value.
                                                        example: Content-Type
                                                    value:
                                                        type: string
                                                        description: The request header's value.
                                                        example: application/json
                                        language:
                                            type: string
                                            nullable: true
                                            description: The server response's body language type.
                                            enum:
                                                - text
                                                - javascript
                                                - json
                                                - html
                                                - xml
                                            example: json
                                        body:
                                            type: string
                                            description: The server response's body that returns when calling the mock server.
                                            example: "{\n    \"message\": \"Something went wrong; try again later.\"\n}"
                        example:
                            serverResponse:
                                name: Internal Server Error
                                statusCode: 500
                                headers:
                                    - key: Content-Type
                                      value: application/json
                                language: json
                                body: "{\n    \"message\": \"Something went wrong; try again later.\"\n}"
            responses:
                "200":
                    $ref: "#/components/responses/mockServerResponse"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: paramMissingError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: Parameter is missing in the request.
                                            details:
                                                type: object
                                                description: Information about the error.
                                                properties:
                                                    param:
                                                        type: array
                                                        description: Information about the missing parameter.
                                                        items:
                                                            type: string
                                                        example: serverResponse
                            examples:
                                Parameter Missing:
                                    value:
                                        error:
                                            name: paramMissingError
                                            message: Parameter is missing in the request.
                                            details:
                                                param:
                                                    - serverResponse
                                Invalid Parameter:
                                    value:
                                        error:
                                            name: invalidParamsError
                                            message: "Invalid value for parameter: language. You must pass a valid language."
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        delete:
            summary: Delete a server response
            description: Deletes a mock server's server response.
            operationId: deleteMockServerResponse
            tags:
                - Mocks
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                description: Information about the deleted server response.
                                properties:
                                    id:
                                        type: string
                                        format: uuid
                                        description: The server response's ID.
                                        example: 965cdd16-fe22-4d96-a161-3d05490ac421
                                    name:
                                        type: string
                                        description: The server response's name.
                                        example: Internal Server Error
                                    statusCode:
                                        type: number
                                        description: The server response's 5xx HTTP response code.
                                        example: 500
                                    headers:
                                        type: array
                                        description: The server response's request headers, such as Content-Type, Accept, encoding, and other information.
                                        items:
                                            type: object
                                            properties:
                                                key:
                                                    type: string
                                                    description: The request header's key value.
                                                    example: Content-Type
                                                value:
                                                    type: string
                                                    description: The request header's value.
                                                    example: application/json
                                    language:
                                        type: string
                                        nullable: true
                                        description: The server response's body language type.
                                        enum:
                                            - text
                                            - javascript
                                            - json
                                            - html
                                            - xml
                                        example: json
                                    body:
                                        type: string
                                        description: The server response's body that returns when calling the mock server.
                                        example: "{\n    \"message\": \"Something went wrong; try again later.\"\n}"
                                    createdBy:
                                        type: string
                                        description: The user ID of the user who created the server response.
                                        example: "12345678"
                                    updatedBy:
                                        type: string
                                        description: The user ID of the user who last updated the server response.
                                        example: "12345678"
                                    createdAt:
                                        type: string
                                        format: date-time
                                        description: The date and time at which the server response was created.
                                        example: "2022-09-21T20:20:09.000Z"
                            example:
                                id: 965cdd16-fe22-4d96-a161-3d05490ac421
                                name: Internal Server Error
                                statusCode: 500
                                headers: []
                                language: json
                                body: "{\n    \"message\": \"Something went wrong; try again later.\"\n}"
                                createdBy: "20891195"
                                updatedBy: "20891195"
                                createdAt: "2022-09-21T20:20:09.000Z"
                "400":
                    $ref: "#/components/responses/serverResponseNotFoundError"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundMock"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/mockId"
            - $ref: "#/components/parameters/serverResponseId"
    /monitors:
        get:
            summary: Get all monitors
            description: Gets all monitors.
            operationId: allMonitors
            tags:
                - Monitors
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    monitors:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    format: uuid
                                                    description: The monitor's description.
                                                    example: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                                name:
                                                    type: string
                                                    description: The monitor's name.
                                                    example: Test Monitor
                                                owner:
                                                    type: string
                                                    description: The ID of the monitor's owner.
                                                    example: "12345678"
                                                uid:
                                                    type: string
                                                    format: uid
                                                    description: The monitor's unique ID.
                                                    example: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                            example:
                                monitors:
                                    - id: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                      name: Test Monitor
                                      uid: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                      owner: 12345678
                                    - id: 1e6b6cb7-f13d-4000-acb7-0695757174a8
                                      name: Postman Echo Monitor
                                      uid: 87654321-1e6b6cb7-f13d-4000-acb7-0695757174a8
                                      owner: 87654321
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        post:
            summary: Create a monitor
            description: |
                **In Postman v10 and higher you cannot create monitors for collections added to an API definition.**

                Creates a monitor.
            operationId: createMonitor
            tags:
                - Monitors
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                monitor:
                                    type: object
                                    properties:
                                        collection:
                                            type: string
                                            description: The monitor's associated collection unique ID.
                                            example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                        environment:
                                            type: string
                                            description: The monitor's associated environment unique ID.
                                            example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                        name:
                                            type: string
                                            description: The monitor's name.
                                            example: Test Monitor
                                        schedule:
                                            type: object
                                            description: Information about the monitor's schedule.
                                            properties:
                                                cron:
                                                    type: string
                                                    description: |
                                                        The monitor's run frequency, based on the given cron pattern. For example:

                                                        | Frequency | Pattern |
                                                        | --------- | ------- |
                                                        | Every 5 minutes | `*/5 * * * *` |
                                                        | Every 30 minutes | `*/30 * * * *` |
                                                        | Every hour | `0 */1 * * *` |
                                                        | Every 6 hours | `0 */6 * * *` |
                                                        | Every day at 5 pm | `0 17 * * *` |
                                                        | Every Monday at 12 pm | `0 12 * * MON` |
                                                        | Every weekday (Mon — Fri) at 6 am | `0 6 * * MON-FRI` |

                                                        At this time you can only create monitors with limited schedules. For information about the available schedules, see our [Postman Monitors](https://monitor.getpostman.com) collection.
                                                    example: "0 0 * * *"
                                                timezone:
                                                    type: string
                                                    description: The monitor's [timezone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
                                                    example: America/Chicago
                        example:
                            monitor:
                                name: Test Monitor
                                schedule:
                                    cron: 0 0 * * *
                                    timezone: America/Chicago
                                collection: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                environment: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    monitor:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The monitor's ID.
                                                example: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                            name:
                                                type: string
                                                description: The monitor's name.
                                                example: Test Monitor
                                            uid:
                                                type: string
                                                format: uid
                                                description: The monitor's unique ID.
                                                example: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                            example:
                                monitor:
                                    id: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                    name: Test Monitor
                                    uid: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                example: paramMissingError
                                            message:
                                                type: string
                                                example: Parameter is missing in the request.
                                            details:
                                                type: object
                                                description: Information about the error.
                            examples:
                                Missing Parameter:
                                    value:
                                        error:
                                            error:
                                                name: paramMissingError
                                                message: Parameter is missing in the request.
                                                details:
                                                    param:
                                                        - name
                                Invalid Timezone:
                                    value:
                                        error:
                                            name: invalidParamsError
                                            message: The request had invalid parameters
                                            details:
                                                param: schedule.timezone
                                Invalid Environment UID:
                                    value:
                                        error:
                                            name: invalidUidError
                                            message: The specified uid is invalid.
                                            details:
                                                param: environment
                                                uid: 5daabc50-8451-43f6-922d-96b403b4f28e
                                Invalid Cron Pattern:
                                    value:
                                        error:
                                            name: cronPatternNotAllowedError
                                            message:
                                                The specified cron pattern is not allowed. Please check https://monitor.getpostman.com
                                                for the allowed schedules.
                                            details:
                                                pattern: "* * * * *"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "403":
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: forbiddenError
                                            message:
                                                type: string
                                                description: The error description.
                                                example: You need read access to this collection in order to perform this action.
                            example:
                                error:
                                    name: forbiddenError
                                    message: You need read access to this collection in order to perform this action.
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - $ref: "#/components/parameters/workspaceQueryId"
    /monitors/{monitorId}:
        get:
            summary: Get a monitor
            description: Gets information about a monitor.
            operationId: singleMonitor
            tags:
                - Monitors
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    monitor:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The monitor's ID.
                                                example: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                            name:
                                                type: string
                                                description: The monitor's name.
                                                example: Test Monitor
                                            uid:
                                                type: string
                                                format: uid
                                                description: The monitor's unique ID.
                                                example: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                            owner:
                                                type: number
                                                description: The ID of monitor's owner.
                                                example: 12345678
                                            collectionUid:
                                                type: string
                                                format: uid
                                                description: The monitor's associated collection unique ID.
                                                example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                            environmentUid:
                                                type: string
                                                format: uid
                                                description: The monitor's associated environment unique ID.
                                                example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                            distribution:
                                                type: array
                                                description: A list of the monitor's [geographic regions](https://learning.postman.com/docs/monitoring-your-api/setting-up-monitor/#adding-regions).
                                                items: {}
                                            lastRun:
                                                type: object
                                                description: Information about the monitor's previous run.
                                                properties:
                                                    finishedAt:
                                                        type: string
                                                        format: date-time
                                                        description: The date and time at which the monitor's previous run completed.
                                                        example: "2022-06-17T18:39:53.707Z"
                                                    startedAt:
                                                        type: string
                                                        format: date-time
                                                        description: The date and time at which the monitor's previous run started.
                                                        example: "2022-06-17T18:39:52.852Z"
                                                    stats:
                                                        type: object
                                                        description: Information about the monitor's stats.
                                                        properties:
                                                            assertions:
                                                                type: object
                                                                description: Information about the monitor's assertions.
                                                                properties:
                                                                    failed:
                                                                        type: number
                                                                        description: The total number of test failures.
                                                                        example: 1
                                                                    total:
                                                                        type: number
                                                                        description: The total number of tests performed.
                                                                        example: 8
                                                            requests:
                                                                type: object
                                                                description: Information about the monitor's requests.
                                                                properties:
                                                                    total:
                                                                        type: number
                                                                        description: The total number of requests.
                                                                        example: 4
                                                    status:
                                                        type: string
                                                        description: The monitor's status after its last run.
                                                        example: failed
                                            notifications:
                                                type: object
                                                description: Information about the monitor's notification settings.
                                                properties:
                                                    onError:
                                                        type: array
                                                        items:
                                                            type: object
                                                            properties:
                                                                email:
                                                                    type: string
                                                                    format: email
                                                                    description: The email address of the user to notify on monitor error.
                                                                    example: taylor.lee@example.com
                                                    onFailure:
                                                        type: array
                                                        items:
                                                            type: object
                                                            properties:
                                                                email:
                                                                    type: string
                                                                    format: email
                                                                    description: The email address of the user to notify on monitor failure.
                                                                    example: taylor.lee@example.com
                                            options:
                                                type: object
                                                description: Information about the monitor's option settings.
                                                properties:
                                                    followRedirects:
                                                        type: boolean
                                                        description: If true, follow redirects enabled.
                                                        example: true
                                                    requestDelay:
                                                        type: number
                                                        description: The monitor's request delay value.
                                                        example: 0
                                                    requestTimeout:
                                                        type: number
                                                        description: The monitor's request timeout value.
                                                        example: 3000
                                                    strictSSL:
                                                        type: boolean
                                                        description: If true, strict SSL enabled.
                                                        example: true
                                            schedule:
                                                type: object
                                                description: Information about the monitor's schedule.
                                                properties:
                                                    cron:
                                                        type: string
                                                        description: The monitor's cron frequency value.
                                                        example: "0 0 * * * *"
                                                    nextRun:
                                                        type: string
                                                        format: date-time
                                                        description: The date and time of monitor's next scheduled run.
                                                        example: "2022-06-18T05:00:00.000Z"
                                                    timezone:
                                                        type: string
                                                        description: The monitor's timezone.
                                                        example: America/Chicago
                            example:
                                monitor:
                                    id: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                    name: Test Monitor
                                    uid: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                    owner: 12345678
                                    collectionUid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    environmentUid: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                    options:
                                        strictSSL: true
                                        followRedirects: true
                                        requestTimeout: 3000
                                        requestDelay: 0
                                    notifications:
                                        onError:
                                            - email: taylor.lee@example.com
                                        onFailure:
                                            - email: taylor.lee@example.com
                                    distribution: []
                                    schedule:
                                        cron: 0 0 0 * * *
                                        timezone: America/Chicago
                                        nextRun: "2022-06-18T05:00:00.000Z"
                                    lastRun:
                                        status: failed
                                        startedAt: "2022-06-17T18:39:52.852Z"
                                        finishedAt: "2022-06-17T18:39:53.707Z"
                                        stats:
                                            assertions:
                                                total: 8
                                                failed: 1
                                            requests:
                                                total: 4
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundMonitor"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        put:
            summary: Update a monitor
            description: Updates a monitor.
            operationId: updateMonitor
            tags:
                - Monitors
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                monitor:
                                    type: object
                                    properties:
                                        name:
                                            type: string
                                            description: The monitor's name.
                                            example: Test Monitor
                                        schedule:
                                            type: object
                                            description: Information about the monitor's schedule.
                                            properties:
                                                cron:
                                                    description: |
                                                        The monitor's run frequency, based on the given cron pattern. For example:

                                                        | Frequency | Pattern |
                                                        | --------- | ------- |
                                                        | Every 5 minutes | `*/5 * * * *` |
                                                        | Every 30 minutes | `*/30 * * * *` |
                                                        | Every hour | `0 */1 * * *` |
                                                        | Every 6 hours | `0 */6 * * *` |
                                                        | Every day at 5 pm | `0 17 * * *` |
                                                        | Every Monday at 12 pm | `0 12 * * MON` |
                                                        | Every weekday (Mon — Fri) at 6 am | `0 6 * * MON-FRI` |

                                                        At this time you can only create monitors with limited schedules. For information about the available schedules, see our [Postman Monitors](https://monitor.getpostman.com) collection.
                                                    example: "*/5 * * * *"
                                                timezone:
                                                    type: string
                                                    description: The monitor's [timezone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
                                                    example: America/Chicago
                        example:
                            monitor:
                                name: Test Monitor
                                schedule:
                                    cron: "*/5 * * * *"
                                    timezone: America/Chicago
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    monitor:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The monitor's ID.
                                                example: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                            name:
                                                type: string
                                                description: The monitor's name.
                                                example: Test Monitor
                                            uid:
                                                type: string
                                                format: uid
                                                description: The monitor's unique ID.
                                                example: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                            example:
                                monitor:
                                    id: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                    name: Test Monitor
                                    uid: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundMonitor"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        delete:
            summary: Delete a monitor
            description: Deletes a monitor.
            operationId: deleteMonitor
            tags:
                - Monitors
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    monitor:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The monitor's ID.
                                                example: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                            uid:
                                                type: string
                                                format: uid
                                                description: The monitor's unique ID.
                                                example: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                            example:
                                monitor:
                                    id: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                    uid: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: instanceNotFoundError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: JobTemplate 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1 does not exist
                            example:
                                error:
                                    name: instanceNotFoundError
                                    message: JobTemplate 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1 does not exist
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/monitorId"
    /monitors/{monitorId}/run:
        post:
            summary: Run a monitor
            description: Runs a monitor and returns its run results.
            operationId: runAMonitor
            tags:
                - Monitors
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    run:
                                        type: object
                                        description: Information about the monitor run.
                                        properties:
                                            info:
                                                type: object
                                                description: Information about the monitor.
                                                properties:
                                                    jobId:
                                                        type: string
                                                        format: uuid
                                                        description: The monitor's run job ID.
                                                        example: 1ecee76a-e14e-47c0-bddc-256bf690c407
                                                    collectionUid:
                                                        type: string
                                                        format: uid
                                                        description: The monitor's associated collection ID.
                                                        example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                    environmentUid:
                                                        type: string
                                                        format: uid
                                                        description: The monitor's associated environment ID.
                                                        example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                                    monitorId:
                                                        type: string
                                                        format: uuid
                                                        description: The monitor's ID.
                                                        example: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                                    name:
                                                        type: string
                                                        description: The monitor's name.
                                                        example: Test Monitor
                                                    status:
                                                        type: string
                                                        description: The monitor run's status.
                                                        example: success
                                                    startedAt:
                                                        type: string
                                                        format: date-time
                                                        description: The date and time at which the monitor run began.
                                                        example: "2022-06-17T19:50:04.019Z"
                                                    finishedAt:
                                                        type: string
                                                        format: date-time
                                                        description: The date and time at which the monitor's run completed.
                                                        example: "2022-06-17T19:50:06.439Z"
                                            stats:
                                                type: object
                                                description: Information about the monitor run's stats.
                                                properties:
                                                    assertions:
                                                        type: object
                                                        description: The monitor run's assertions stats.
                                                        properties:
                                                            total:
                                                                type: number
                                                                description: The total number of tests performed.
                                                                example: 0
                                                            failed:
                                                                type: number
                                                                description: The total number of test failures.
                                                                example: 0
                                                    requests:
                                                        type: object
                                                        description: The monitor run's request stats.
                                                        properties:
                                                            total:
                                                                type: number
                                                                description: The total number of requests.
                                                                example: 1
                                                            failed:
                                                                type: number
                                                                description: The number of request failures.
                                                                example: 0
                                            executions:
                                                type: array
                                                description: Information about the monitor run's executions.
                                                items:
                                                    type: object
                                                    properties:
                                                        id:
                                                            type: number
                                                            description: The execution ID.
                                                            example: 1
                                                        item:
                                                            type: object
                                                            description: Information about the executed item.
                                                            properties:
                                                                name:
                                                                    type: string
                                                                    description: The executed item's name.
                                                                    example: Sample POST Request
                                                        request:
                                                            type: object
                                                            description: Information about the monitor run's requests.
                                                            properties:
                                                                method:
                                                                    type: string
                                                                    description: The request method.
                                                                    example: POST
                                                                url:
                                                                    type: string
                                                                    format: url
                                                                    description: The request's URL.
                                                                    example: http://echo.getpostman.com/post
                                                                body:
                                                                    type: object
                                                                    description: Information about the request body, such as Content-Length.
                                                                    additionalProperties: true
                                                                headers:
                                                                    type: object
                                                                    description: Information about the request headers, such as Content-Type, Accept, encoding, and other information.
                                                                    additionalProperties: true
                                                                timestamp:
                                                                    type: string
                                                                    description: The date and time of the request.
                                                                    example: "2016-12-04T14:30:26.025Z"
                                                        response:
                                                            type: object
                                                            description: Information about the monitor run's response.
                                                            properties:
                                                                body:
                                                                    type: object
                                                                    description: Information about the request body, such as Content-Length.
                                                                    additionalProperties: true
                                                                code:
                                                                    type: number
                                                                    description: The response's HTTP status code.
                                                                    example: 200
                                                                headers:
                                                                    type: object
                                                                    description: Information about the response headers, such as Content-Type, Accept, encoding, and other information.
                                                                    additionalProperties: true
                                                                responseSize:
                                                                    type: number
                                                                    description: The response size, in bytes.
                                                                    example: 298
                                                                responseTime:
                                                                    type: number
                                                                    description: The response time, in milliseconds.
                                                                    example: 26
                                            failures:
                                                type: array
                                                description: If the monitor run failed, information about the run's failures.
                                                items:
                                                    type: object
                                                example: []
                            examples:
                                Successful Response:
                                    value:
                                        run:
                                            info:
                                                jobId: 1ecee76a-e14e-47c0-bddc-256bf690c407
                                                monitorId: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                                name: Test Monitor
                                                collectionUid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                environmentUid: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                                status: success
                                                startedAt: "2022-06-17T19:50:04.019Z"
                                                finishedAt: "2022-06-17T19:50:06.439Z"
                                            stats:
                                                assertions:
                                                    total: 0
                                                    failed: 0
                                                requests:
                                                    total: 1
                                                    failed: 0
                                            executions:
                                                - id: 1
                                                  item:
                                                      name: Sample POST Request
                                                  request:
                                                      method: POST
                                                      url: http://echo.getpostman.com/post
                                                      headers:
                                                          Content-Type: application/json
                                                          User-Agent: PostmanRuntime/7.29.0
                                                          Accept: "*/*"
                                                          Cache-Control: no-cache
                                                          Postman-Token:
                                                          Host: echo.getpostman.com
                                                          Accept-Encoding: gzip, deflate, br
                                                          Connection: keep-alive
                                                          Content-Length: "0"
                                                      body:
                                                          contentLength: 0
                                                      timestamp: "2022-06-17T19:50:06.186Z"
                                                  response:
                                                      code: 200
                                                      body:
                                                          contentLength: 50
                                                      responseTime: 49
                                                      responseSize: 50
                                                      headers:
                                                          Date: Fri, 17 Jun 2022 19:50:06 GMT
                                                          Content-Type: text/plain
                                                          Content-Length: "50"
                                                          Connection: keep-alive
                                                          Server:
                                            failures: []
                                Monitor Run Failed:
                                    value:
                                        run:
                                            info:
                                                jobId: 1ecee76a-e14e-47c0-bddc-256bf690c407
                                                monitorId: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                                name: Test Monitor
                                                collectionUid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                environmentUid: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                                status: failed
                                                startedAt: "2022-06-17T20:00:41.659Z"
                                                finishedAt: "2022-06-17T20:00:42.693Z"
                                            stats:
                                                assertions:
                                                    total: 1
                                                    failed: 1
                                                requests:
                                                    total: 1
                                                    failed: 0
                                            executions:
                                                - id: 1
                                                  item:
                                                      name: Sample POST Request
                                                  request:
                                                      method: POST
                                                      url: http://echo.getpostman.com/post
                                                      headers:
                                                          Content-Type: application/json
                                                          User-Agent: PostmanRuntime/7.29.0
                                                          Accept: "*/*"
                                                          Cache-Control: no-cache
                                                          Postman-Token:
                                                          Host: echo.getpostman.com
                                                          Accept-Encoding: gzip, deflate, br
                                                          Connection: keep-alive
                                                          Content-Length: "0"
                                                      body:
                                                          contentLength: 0
                                                      timestamp: "2022-06-17T20:00:42.423Z"
                                                  response:
                                                      code: 200
                                                      body:
                                                          contentLength: 50
                                                      responseTime: 15
                                                      responseSize: 50
                                                      headers:
                                                          Date: Fri, 17 Jun 2022 20:00:42 GMT
                                                          Content-Type: text/plain
                                                          Content-Length: "50"
                                                          Connection: keep-alive
                                                          Server:
                                            failures: []
                                Monitor Run with Errors:
                                    value:
                                        run:
                                            info:
                                                jobId: 1ecee76a-e14e-47c0-bddc-256bf690c407
                                                monitorId: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                                name: Test Monitor
                                                collectionUid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                environmentUid: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                                status: error
                                                startedAt: "2022-06-17T20:04:47.183Z"
                                                finishedAt: "2022-06-17T20:04:48.858Z"
                                            stats:
                                                assertions:
                                                    total: 4
                                                    failed: 2
                                                requests:
                                                    total: 4
                                                    failed: 3
                                            executions:
                                                - id: 1
                                                  item:
                                                      name: Sample GET Request
                                                  request:
                                                      method: GET
                                                      url: https://example.com/search?format=json&state=&city=&country=
                                                      headers:
                                                          User-Agent: PostmanRuntime/7.29.0
                                                          Accept: "*/*"
                                                          Cache-Control: no-cache
                                                          Postman-Token:
                                                          Host: example.com
                                                          Accept-Encoding: gzip, deflate, br
                                                          Connection: keep-alive
                                                      body:
                                                          contentLength: 0
                                                      timestamp: "2022-06-17T20:04:47.926Z"
                                                  response:
                                                      code: 200
                                                      body:
                                                          contentLength: 2
                                                      responseTime: 257
                                                      responseSize: 2
                                                      headers:
                                                          Server:
                                                          Date: Fri, 17 Jun 2022 20:04:47 GMT
                                                          Content-Type: application/json; charset=UTF-8
                                                          Transfer-Encoding: chunked
                                                          Connection: keep-alive
                                                          Keep-Alive:
                                                          Access-Control-Allow-Origin: "*"
                                                          Access-Control-Allow-Methods: OPTIONS,GET
                                                  errors:
                                                      - name: TypeError
                                                        message: Cannot read property 'lat' of undefined
                                            failures:
                                                - executionId: 1
                                                  name: TypeError
                                                  message: Cannot read property 'lat' of undefined
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/monitorId"
    /network/private:
        get:
            summary: Get all elements and folders
            description: |-
                Gets information about the folders and their elements added to your [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/).

                **Note:**

                The `limit` and `offset` parameters are separately applied to elements and folders. For example, if you query a `limit` value of `10` and an `offset` value `0`, the endpoint returns 10 elements and 10 folders for a total of 20 items. The `totalCount` property in the `meta` response is the total count of **both** elements and folders.
            operationId: getAllElementsAndFolders
            tags:
                - Private API Network
            parameters:
                - name: since
                  in: query
                  description: Return only elements updated at and after this time, in ISO 8601 UTC format.
                  schema:
                      type: string
                      format: date-time
                      example: "2022-09-28T13:48:09.000Z"
                - name: until
                  in: query
                  description: Return only elements updated at and before this time, in ISO 8601 UTC format.
                  schema:
                      type: string
                      format: date-time
                      example: "2022-10-28T13:48:09.000Z"
                - name: addedBy
                  in: query
                  description: Return only elements published by the given user ID.
                  schema:
                      type: integer
                      example: 12345678
                - name: name
                  in: query
                  description: Return only elements whose name includes the given value. Matching is not case-sensitive.
                  schema:
                      type: string
                      example: billing
                - name: summary
                  in: query
                  description: Return only elements whose summary includes the given value. Matching is not case-sensitive.
                  schema:
                      type: string
                      example: payments
                - name: description
                  in: query
                  description: Return only elements whose description includes the given value. Matching is not case-sensitive.
                  schema:
                      type: string
                      example: payments
                - name: sort
                  in: query
                  description: Sort the results by the given value. If you use this query parameter, you must also use the `direction` parameter.
                  schema:
                      type: string
                      enum:
                          - createdAt
                          - updatedAt
                      example: updatedAt
                - name: direction
                  in: query
                  description: Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive. If you use this query parameter, you must also use the `sort` parameter.
                  schema:
                      type: string
                      enum:
                          - asc
                          - desc
                      example: asc
                - name: createdBy
                  in: query
                  description: Return only the elements created by the given user ID.
                  schema:
                      type: integer
                      example: 12345678
                - name: offset
                  in: query
                  description: The zero-based offset of the first item to return.
                  schema:
                      type: integer
                      default: 0
                      example: 5
                - name: limit
                  in: query
                  description: The maximum number of elements to return. If the value exceeds the maximum value of `1000`, then the system uses the `1000` value.
                  schema:
                      type: integer
                      default: 1000
                      example: 10
                - name: parentFolderId
                  in: query
                  description: Return the folders and elements in a specific folder. If this value is `0`, then the endpoint only returns the root folder's elements.
                  schema:
                      type: integer
                      example: 1
                      default: 0
                - name: type
                  in: query
                  description: Filter by the element type.
                  schema:
                      type: string
                      enum:
                          - api
                          - collection
                          - workspace
                          - folder
                      example: api
            responses:
                "200":
                    $ref: "#/components/responses/getPANElementsAndFolders"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "403":
                    $ref: "#/components/responses/forbiddenError"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        post:
            summary: Add an element or folder
            description: Publishes a element or creates a folder in your [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). An element is a Postman API, collection, or workspace.
            tags:
                - Private API Network
            operationId: postElementOrFolder
            requestBody:
                $ref: "#/components/requestBodies/postPANElementOrFolder"
            responses:
                "201":
                    $ref: "#/components/responses/postPANElementOrFolder"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "403":
                    $ref: "#/components/responses/forbiddenError"
                "404":
                    $ref: "#/components/responses/instanceNotFoundElementFolder"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
    /network/private/{elementType}/{elementId}:
        put:
            summary: Update an element or folder
            description: Updates an element or folder in your [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/).
            operationId: putElementOrFolder
            tags:
                - Private API Network
            requestBody:
                $ref: "#/components/requestBodies/putPANElementOrFolder"
            responses:
                "200":
                    $ref: "#/components/responses/putPANElementOrFolder"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "403":
                    $ref: "#/components/responses/forbiddenError"
                "404":
                    $ref: "#/components/responses/instanceNotFoundElementFolder"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        delete:
            summary: Remove an element or folder
            description: |-
                Removes an element or delete a folder from your [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/).

                **Note:**

                Removing an API, collection, or workspace element does **not** delete it. It only removes it from the Private API Network folder.
            tags:
                - Private API Network
            operationId: removeElementOrFolder
            responses:
                "200":
                    $ref: "#/components/responses/removePANElementOrFolder"
                "400":
                    $ref: "#/components/responses/folderNotEmptyError"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "403":
                    $ref: "#/components/responses/forbiddenError"
                "404":
                    $ref: "#/components/responses/instanceNotFoundElementFolder"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/elementId"
            - $ref: "#/components/parameters/elementType"
    /network/private/network-entity/request/all:
        get:
            summary: Get all element add requests
            description: Gets a list requests to add elements to the [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/).
            tags:
                - Private API Network
            operationId: getAllAddElementRequests
            parameters:
                - name: since
                  required: false
                  in: query
                  description: Return only requests updated at and after this time, in ISO 8601 UTC format.
                  schema:
                      type: string
                      format: date-time
                      example: "2022-09-28T13:48:09.000Z"
                - name: until
                  required: false
                  in: query
                  description: Return only request updated at and before this time, in ISO 8601 UTC format.
                  schema:
                      type: string
                      format: date-time
                      example: "2022-10-28T13:48:09.000Z"
                - name: requestedBy
                  required: false
                  in: query
                  description: Return a user's element requests by their user ID.
                  schema:
                      type: integer
                      example: 12345678
                - name: type
                  required: false
                  in: query
                  description: Filter by the element type.
                  schema:
                      type: string
                      enum:
                          - api
                          - collection
                          - workspace
                      example: api
                - name: status
                  required: false
                  in: query
                  description: Filter by the request status.
                  schema:
                      type: string
                      enum:
                          - pending
                          - denied
                      example: pending
                - name: name
                  required: false
                  in: query
                  description: Return only elements whose name includes the given value. Matching is not case-sensitive.
                  schema:
                      type: string
                      example: Test api
                - name: sort
                  in: query
                  description: Sort the results by the given value. If you use this query parameter, you must also use the `direction` parameter.
                  schema:
                      type: string
                      enum:
                          - createdAt
                          - updatedAt
                      example: updatedAt
                - name: direction
                  in: query
                  description: Sort in ascending (`asc`) or descending (`desc`) order. Matching is not case-sensitive. If you use this query parameter, you must also use the `sort` parameter.
                  schema:
                      type: string
                      enum:
                          - asc
                          - desc
                      example: asc
                - name: offset
                  in: query
                  description: The zero-based offset of the first item to return.
                  schema:
                      type: integer
                      default: 0
                      example: 5
                - name: limit
                  in: query
                  description: The maximum number of elements to return. If the value exceeds the maximum value of `1000`, then the system uses the `1000` value.
                  schema:
                      type: integer
                      default: 1000
                      example: 10
            responses:
                "200":
                    $ref: "#/components/responses/getAllPANAddElementRequests"
                "400":
                    $ref: "#/components/responses/invalidQueryParamsInGetAllElementRequests"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "403":
                    $ref: "#/components/responses/forbiddenError"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
    /network/private/network-entity/request/{requestId}:
        put:
            summary: Respond to an element add request
            description: Responds to a request to add an element to the [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/). Only managers can approve or deny a request. Once approved, the element will appear in the team's Private API Network.
            tags:
                - Private API Network
            operationId: respondElementAddRequest
            parameters:
                - $ref: "#/components/parameters/requestId"
            requestBody:
                $ref: "#/components/requestBodies/respondPANElementAddRequest"
            responses:
                "200":
                    $ref: "#/components/responses/respondPANElementAddRequest"
                "400":
                    $ref: "#/components/responses/invalidNetworkElementRequest"
                "401":
                    $ref: "#/components/responses/unauthorized"
                "403":
                    $ref: "#/components/responses/forbiddenError"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
    /scim/v2/Groups:
        get:
            summary: Get all group resources
            description: Gets information about all Postman team members.
            operationId: fetchAllGroupResources
            tags:
                - SCIM 2.0 - Identity
                - Group Provisioning
            parameters:
                - name: startIndex
                  in: query
                  schema:
                      type: number
                      default: 1
                      description: The index entry by which to begin the list of returned results.
                      example: 1
                - name: count
                  in: query
                  schema:
                      type: number
                      default: 100
                      description: Limit the number of results returned in a single response.
                      example: 2
                - name: filter
                  in: query
                  schema:
                      type: string
                      description: Filter results by a specific word or phrase.
                      example: displayName eq "Test-API"
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    Resources:
                                        type: array
                                        description: A list of group resources.
                                        items:
                                            $ref: "#/components/schemas/scimGroupResource"
                                    itemsPerPage:
                                        type: number
                                        description: The number of items per response page.
                                        example: 2
                                    schemas:
                                        type: array
                                        items:
                                            type: string
                                            description: The schemas URI.
                                            example: urn:ietf:params:scim:api:messages:2.0:ListResponse
                                    startIndex:
                                        type: number
                                        description: The index entry by which the returned results begin.
                                        example: 1
                                    totalResults:
                                        type: number
                                        description: The total number of results found.
                                        example: 2
                            examples:
                                Successful Response:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:ListResponse
                                        totalResults: 2
                                        startIndex: 1
                                        itemsPerPage: 2
                                        Resources:
                                            - schemas:
                                                  - urn:ietf:params:scim:schemas:core:2.0:Group
                                              id: 561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00
                                              displayName: Test-API
                                              members:
                                                  - value: 23a35c2723d34c03b4c56443c09e7173
                                                    display: taylor.lee@example.com
                                              externalId: "1234"
                                              meta:
                                                  resourceType: Group
                                                  created: "2022-02-22T04:24:13.000Z"
                                                  lastModified: "2022-02-22T04:24:13.000Z"
                                            - schemas:
                                                  - urn:ietf:params:scim:schemas:core:2.0:Group
                                              id: 123775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                                              displayName: Test Group
                                              members:
                                                  - value: 23a35c2723d34c03b4c56443c09e7173
                                                    display: taylor.lee@example.com
                                                  - value: ghc794f24f4c49f4b5d503a4cb2686e90
                                                    display: alex.cruz@example.com
                                              externalId: "4321"
                                              meta:
                                                  resourceType: Group
                                                  created: "2022-02-22T04:24:13.000Z"
                                                  lastModified: "2022-02-22T04:24:13.000Z"
                                No Results Found:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:ListResponse
                                        totalResults: 0
                                        startIndex: 1
                                        itemsPerPage: 0
                                        Resources: []
                                Filter Results:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:ListResponse
                                        totalResults: 1
                                        startIndex: 1
                                        itemsPerPage: 1
                                        Resources:
                                            - schemas:
                                                  - urn:ietf:params:scim:schemas:core:2.0:Group
                                              id: 561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00
                                              displayName: Test-API
                                              members:
                                                  - value: b1c794f24f4c49f4b5d503a4cb2686ea
                                                    display: taylor.lee@example.com
                                              externalId: "1234"
                                              meta:
                                                  resourceType: Group
                                                  created: "2022-02-22T04:24:13.000Z"
                                                  lastModified: "2022-02-22T04:24:13.000Z"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    detail:
                                        type: string
                                        example: You've used filter(s) that Postman doesn't support.
                                    status:
                                        type: string
                                        example: "400"
                            examples:
                                Invalid Team:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        detail: This Postman team doesn't exist anymore.
                                        status: "400"
                                Invalid Filter:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        detail: You've used filter(s) that Postman doesn't support.
                                        status: "400"
                "401":
                    $ref: "#/components/responses/scimUnauthorized"
                "403":
                    $ref: "#/components/responses/scimForbidden"
                "429":
                    $ref: "#/components/responses/scimTooManyRequests"
                "500":
                    $ref: "#/components/responses/scimInternalErrorGroup"
        post:
            summary: Create a group
            description: |
                Creates a new user group in Postman and creates a new account for each group member.

                Each account is added to your Postman team and authentication is activated for each user. If an existing Postman account uses an email that matches a group member's email ID, an [email invite](https://postman.postman.co/docs/administration/managing-your-team/managing-your-team/#invites) to join your Postman team is sent to that user. Once the user accepts the invite, they'll be added to your team.

                By default, the system assigns new users the developer role. You can [update user roles in Postman](https://learning.postman.com/docs/administration/managing-your-team/managing-your-team/#managing-team-roles).
            operationId: createGroup
            tags:
                - SCIM 2.0 - Identity
                - Group Provisioning
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                schemas:
                                    type: array
                                    description: The SCIM schema resource URI.
                                    items:
                                        type: string
                                        example: urn:ietf:params:scim:schemas:core:2.0:User
                                userName:
                                    type: string
                                    description: The user's username.
                                    example: taylor.lee@example.com
                                active:
                                    type: boolean
                                    description: If true, activates the user. This lets them authenticate in to your Postman team.
                                    example: true
                                externalId:
                                    type: string
                                    description: The user's external ID.
                                    example: "12345678"
                                groups:
                                    type: array
                                    description: A list of groups to which to assign the user to.
                                    items:
                                        type: string
                                        example: Test Group
                                locale:
                                    type: string
                                    description: The user's IETF locale.
                                    example: en-US
                                name:
                                    type: object
                                    description: Information about the user's name.
                                    properties:
                                        givenName:
                                            type: string
                                            description: The user's first name.
                                            example: Taylor
                                        familyName:
                                            type: string
                                            description: The user's last name.
                                            example: Lee
                        example:
                            schemas:
                                - urn:ietf:params:scim:schemas:core:2.0:User
                            userName: taylor.lee@example.com
                            name:
                                givenName: Taylor
                                familyName: Lee
                            displayName: Taylor Lee
                            locale: en-US
                            groups:
                                - Test Group
                            active: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        description: The SCIM schema URI.
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:schemas:core:2.0:User
                                    id:
                                        type: string
                                        description: The user's SCIM ID.
                                        example: 561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00
                                    userName:
                                        type: string
                                        format: email
                                        description: The user's username.
                                        example: taylor.lee@example.com
                                    name:
                                        type: object
                                        properties:
                                            givenName:
                                                type: string
                                                description: The user's first name.
                                                example: Taylor
                                            familyName:
                                                type: string
                                                description: The user's last name.
                                                example: Lee
                                    externalId:
                                        type: string
                                        description: The user's external ID.
                                        example: "12345678"
                                    active:
                                        type: boolean
                                        description: If true, the user is active.
                                        example: true
                                    meta:
                                        type: object
                                        description: The response's non-standard meta information.
                                        properties:
                                            created:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the user was created.
                                                example: "2021-02-22T04:24:13.000Z"
                                            lastModified:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the user was last modified.
                                                example: "2021-02-22T04:24:13.000Z"
                                            resourceType:
                                                type: string
                                                description: The SCIM resource type.
                                                enum:
                                                    - User
                                                example: User
                            examples:
                                Group Created:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:schemas:core:2.0:Group
                                        id: 561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00
                                        displayName: Test-API
                                        members: []
                                        externalId: "1234"
                                        meta:
                                            resourceType: Group
                                            created: "2022-02-22T04:24:13.000Z"
                                            lastModified: "2022-02-22T04:24:13.000Z"
                                Group Created with Members:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:schemas:core:2.0:Group
                                        id: 561631fq14ed41872a8eea4c8aa2b38cda9749812cc55c00
                                        displayName: Test-API
                                        members:
                                            - value: b1c794f24f4c49f4b5d503a4cb2686ea
                                              display: taylor.lee@example.com
                                        externalId: "1234"
                                        meta:
                                            resourceType: Group
                                            created: "2022-02-22T04:24:13.000Z"
                                            lastModified: "2022-02-22T04:24:13.000Z"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        description: A list of SCIM schema resource URIs.
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    scimType:
                                        type: string
                                        description: The SCIM type.
                                        example: invalidSyntax
                                    detail:
                                        type: string
                                        description: Information about the error.
                                        example: This Postman team doesn't exist anymore.
                                    status:
                                        type: string
                                        description: The HTTP status code.
                                        example: "400"
                            examples:
                                Invalid Syntax:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        scimType: invalidSyntax
                                        detail: The request body seems to be incomplete or have unsupported characters.
                                        status: "400"
                                Invalid Team:
                                    value:
                                        detail: This Postman team doesn't exist anymore.
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        status: "400"
                                Not Enterprise:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        detail: Only Postman teams on the Enterprise plan can use SCIM provisioning. Upgrade your plan.
                                        status: "400"
                                No Slots Available:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        detail: No slots available on your Postman team. Purchase or free up slots to invite more members. For help, contact Team Admins or members with a Billing role.
                                        status: "400"
                "401":
                    $ref: "#/components/responses/scimUnauthorized"
                "403":
                    $ref: "#/components/responses/scimForbidden"
                "409":
                    description: Conflict
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        description: The SCIM schema resource URIs.
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    scimType:
                                        type: string
                                        description: The SCIM type.
                                        example: uniqueness
                                    detail:
                                        type: string
                                        description: Information about the error.
                                        example: This person is already a member of the team.
                                    status:
                                        type: string
                                        description: The HTTP status code.
                                        example: "409"
                            example:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                scimType: uniqueness
                                detail: This person is already a member of the team.
                                status: "409"
                "429":
                    $ref: "#/components/responses/scimTooManyRequests"
                "500":
                    $ref: "#/components/responses/scimInternalErrorGroupUpdate"
    /scim/v2/Groups/{groupId}:
        get:
            summary: Get a group resource
            description: Gets information about a Postman group within the team.
            operationId: fetchGroupResource
            tags:
                - SCIM 2.0 - Identity
                - Group Provisioning
            responses:
                "200":
                    $ref: "#/components/responses/scimGroupResource"
                "400":
                    $ref: "#/components/responses/scimBadRequest"
                "401":
                    $ref: "#/components/responses/scimUnauthorized"
                "403":
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        items:
                                            type: string
                                            description: The error schema URI.
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    detail:
                                        type: string
                                        description: Information about the error.
                                        example: Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.
                                    status:
                                        type: string
                                        description: The error status code.
                                        example: "403"
                            example:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.
                                status: "403"
                "404":
                    $ref: "#/components/responses/scimGroupNotFound"
                "429":
                    $ref: "#/components/responses/scimTooManyRequests"
                "500":
                    $ref: "#/components/responses/scimInternalErrorUserUpdate"
        patch:
            summary: Update a group
            description: |
                Updates a group's information. Using this endpoint you can:

                - Update a group's name.
                - Add or remove members from a Postman group.
            tags:
                - SCIM 2.0 - Identity
                - Group Provisioning
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                schemas:
                                    type: array
                                    description: The SCIM schema resource URI.
                                    items:
                                        type: string
                                        example: urn:ietf:params:scim:api:messages:2.0:PatchOp
                                Operations:
                                    type: array
                                    description: Information about the group update operation.
                                    items:
                                        type: object
                                        properties:
                                            op:
                                                type: string
                                                description: The operation to perform.
                                                enum:
                                                    - replace
                                                    - remove
                                                    - add
                                                example: replace
                                            path:
                                                type: string
                                                description: The operation's path. Include this value when you update a group's members.
                                                example: members
                                            value:
                                                type: object
                                                description: The performed operation's value.
                                                properties:
                                                    id:
                                                        type: string
                                                        description: The group's ID.
                                                        example: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                                                    displayName:
                                                        type: string
                                                        description: The group's name.
                                                        example: Test-API
                        examples:
                            Update a Group Name:
                                value:
                                    schemas:
                                        - urn:ietf:params:scim:api:messages:2.0:PutOp
                                    Operations:
                                        - op: replace
                                          value:
                                              id: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                                              displayName: Test-API
                            Add and Remove Team Members:
                                value:
                                    schemas:
                                        - urn:ietf:params:scim:api:messages:2.0:PutOp
                                    Operations:
                                        - op: remove
                                          path: members[value eq "89bb1940b90545759e7f6f887cfb368e"]
                                        - op: add
                                          path: members
                                          value:
                                              - value: 23a35c2723d34c03b4c56443c09e7173
                                                display: taylor.lee@example.com
                            Replace Team Members:
                                value:
                                    schemas:
                                        - urn:ietf:params:scim:api:messages:2.0:PutOp
                                    Operations:
                                        - op: replace
                                          path: members
                                          value:
                                              - value: 23a35c2723d34c03b4c56443c09e7173
                                                display: taylor.lee@example.com
                                              - value: 89bb1940b90545759e7f6f887cfb368e
                                                display: alex.cruz@example.com
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        description: The SCIM schema resource URI.
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:api:messages:2.0:PatchOp
                                    id:
                                        type: string
                                        description: The group's ID.
                                        example: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                                    displayName:
                                        type: string
                                        description: The group's name.
                                        example: Test-API
                                    externalId:
                                        type: string
                                        description: The group's external ID.
                                        example: "1234"
                                    meta:
                                        type: object
                                        description: The response's non-standard meta information.
                                        properties:
                                            resourceType:
                                                type: string
                                                description: The resource type.
                                                example: Group
                                            created:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the group was created.
                                                example: "2022-02-22T04:24:13.000Z"
                                            lastModified:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the group was last modified.
                                                example: "2022-02-22T04:24:13.000Z"
                            examples:
                                Update a Group Name:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:schemas:core:2.0:Group
                                        id: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                                        displayName: Test-API
                                        members:
                                        externalId: "1234"
                                        meta:
                                            resourceType: Group
                                            created: "2022-02-22T04:24:13.000Z"
                                            lastModified: "2022-02-22T04:24:13.000Z"
                                Add and Remove Team Members:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:schemas:core:2.0:Group
                                        id: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                                        displayName: Test-API
                                        members:
                                            - value: 23a35c2723d34c03b4c56443c09e7173
                                              display: taylor.lee@example.com
                                        externalId: "1234"
                                        meta:
                                            resourceType: Group
                                            created: "2022-02-22T04:24:13.000Z"
                                            lastModified: "2022-02-22T04:24:13.000Z"
                                Replace Team Members:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:schemas:core:2.0:Group
                                        id: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                                        displayName: Test-API
                                        members:
                                            - value: 23a35c2723d34c03b4c56443c09e7173
                                              display: taylor.lee@example.com
                                            - value: 89bb1940b90545759e7f6f887cfb368e
                                              display: alex.cruz@example.com
                                        externalId: "1234"
                                        meta:
                                            resourceType: Group
                                            created: "2022-02-22T04:24:13.000Z"
                                            lastModified: "2022-02-22T04:24:13.000Z"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        description: A list of SCIM schema resource URIs.
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    scimType:
                                        type: string
                                        description: The SCIM type.
                                        example: invalidSyntax
                                    detail:
                                        type: string
                                        description: Information about the error.
                                        example: This Postman team doesn't exist anymore.
                                    status:
                                        type: string
                                        description: The HTTP status code.
                                        example: "400"
                            examples:
                                Bad Request:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        detail: Couldn't update this team member's username. Try again — it should work next time around.
                                        status: "400"
                                Invalid Team:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        detail: This Postman team doesn't exist anymore.
                                        status: "400"
                                Invalid Syntax:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        scimType: invalidSyntax
                                        detail: The request body seems to be incomplete or have unsupported characters.
                                        status: "400"
                "401":
                    $ref: "#/components/responses/scimUnauthorized"
                "403":
                    $ref: "#/components/responses/scimForbidden"
                "404":
                    $ref: "#/components/responses/scimGroupNotFound"
                "429":
                    $ref: "#/components/responses/scimTooManyRequests"
                "500":
                    $ref: "#/components/responses/scimInternalErrorUserUpdate"
        delete:
            summary: Delete a group
            description: |
                Deletes a group in Postman.

                User accounts that were in the deleted group are deactivated in Postman if the app is assigned to the user only with the deleted group.

                User accounts and the data corresponding to them are **not** deleted. To permanently delete user accounts and their data, [contact Postman support](https://www.postman.com/support/).
            operationId: deleteGroup
            tags:
                - SCIM 2.0 - Identity
                - Group Provisioning
            responses:
                "204":
                    description: Group Deleted
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    detail:
                                        type: string
                                        example: This Postman team doesn't exist anymore.
                                    status:
                                        type: string
                                        example: "400"
                            example:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: This Postman team doesn't exist anymore.
                                status: "400"
                "401":
                    $ref: "#/components/responses/scimUnauthorized"
                "403":
                    $ref: "#/components/responses/scimForbidden"
                "404":
                    $ref: "#/components/responses/scimGroupNotFound"
                "429":
                    $ref: "#/components/responses/scimTooManyRequests"
                "500":
                    $ref: "#/components/responses/scimInternalErrorUserUpdate"
        parameters:
            - $ref: "#/components/parameters/groupId"
    /scim/v2/ResourceTypes:
        get:
            summary: Get resource types
            description: Gets all the resource types supported by Postman's SCIM API.
            operationId: getResourceTypes
            tags:
                - SCIM 2.0 - Identity
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        schemas:
                                            type: array
                                            description: A list of SCIM schema resource URIs.
                                            items:
                                                type: string
                                            example:
                                                - urn:ietf:params:scim:schemas:core:2.0:ResourceType
                                        id:
                                            type: string
                                            description: The resource's ID.
                                            example: User
                                        name:
                                            type: string
                                            description: The resource's friendly name.
                                            example: User
                                        endpoint:
                                            type: string
                                            description: The resource's endpoint.
                                            example: /Users
                                        description:
                                            type: string
                                            description: The resource's description.
                                            example: User Account
                                        schema:
                                            type: string
                                            description: The resource's schema URI.
                                            example: urn:ietf:params:scim:schemas:core:2.0:User
                                        schemaExtensions:
                                            type: array
                                            description: Information about the resource's schema extensions.
                                            items:
                                                type: object
                                                properties:
                                                    schema:
                                                        type: string
                                                        description: The resource extension's URI.
                                                        example: urn:ietf:params:scim:schemas:extension:enterprise:2.0:User
                                                    required:
                                                        type: boolean
                                                        description: If true, the resource must include this schema extension.
                                                        example: true
                            example:
                                - schemas:
                                      - urn:ietf:params:scim:schemas:core:2.0:ResourceType
                                  id: User
                                  name: User
                                  endpoint: /Users
                                  description: User Account
                                  schema: urn:ietf:params:scim:schemas:core:2.0:User
                                  schemaExtensions:
                                      - schema: urn:ietf:params:scim:schemas:extension:enterprise:2.0:User
                                        required: true
                "401":
                    $ref: "#/components/responses/unauthorized"
                "500":
                    $ref: "#/components/responses/scimInternalErrorUserUpdate"
    /scim/v2/ServiceProviderConfig:
        get:
            summary: Get service provider configuration
            description: Gets the Postman SCIM API configuration information. This includes a list of supported operations.
            operationId: serviceProviderConfig
            tags:
                - SCIM 2.0 - Identity
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        description: A list of schema resource URIs.
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig
                                    documentationUri:
                                        type: string
                                        format: url
                                        description: A link to the URI's documentation.
                                        example: "https://learning.postman.com/docs/administration/managing-your-team/configuring-scim"
                                    patch:
                                        type: object
                                        properties:
                                            supported:
                                                type: boolean
                                                example: true
                                    bulk:
                                        type: object
                                        properties:
                                            maxOperations:
                                                type: number
                                                example: 0
                                            maxPayloadSize:
                                                type: number
                                                example: 0
                                            supported:
                                                type: boolean
                                                example: false
                                    filter:
                                        type: object
                                        properties:
                                            maxResults:
                                                type: number
                                                example: 100
                                            supported:
                                                type: boolean
                                                example: true
                                    changePassword:
                                        type: object
                                        properties:
                                            supported:
                                                type: boolean
                                                example: false
                                    sort:
                                        type: object
                                        properties:
                                            supported:
                                                type: boolean
                                                example: false
                                    authenticationSchemes:
                                        type: array
                                        description: A list of authentication schemes.
                                        items:
                                            type: object
                                            description: Information about the scheme.
                                            properties:
                                                description:
                                                    type: string
                                                    description: The scheme's description.
                                                    example: Authentication scheme using the OAuth Bearer Token Standard
                                                name:
                                                    type: string
                                                    description: The scheme's friendly name.
                                                    example: OAuth Bearer Token
                                                specUri:
                                                    type: string
                                                    format: url
                                                    description: A link to the scheme's specification documentation.
                                                    example: http://www.rfc-editor.org/info/rfc6750
                                                type:
                                                    type: string
                                                    description: The scheme's type.
                                                    example: oauthbearertoken
                                    etag:
                                        type: object
                                        properties:
                                            supported:
                                                type: boolean
                                                example: false
                                    meta:
                                        type: object
                                        description: The response's non-standard meta information.
                                        properties:
                                            resourceType:
                                                type: string
                                                example: ServiceProviderConfig
                                            location:
                                                type: string
                                                format: url
                                                example: https://api.getpostman.com/scim/v2/ServiceProviderConfig
                            example:
                                schemas:
                                    - urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig
                                documentationUri: https://learning.postman.com/docs/administration/managing-your-team/configuring-scim
                                patch:
                                    supported: true
                                bulk:
                                    supported: false
                                    maxOperations: 0
                                    maxPayloadSize: 0
                                filter:
                                    supported: true
                                    maxResults: 100
                                changePassword:
                                    supported: false
                                sort:
                                    supported: false
                                etag:
                                    supported: false
                                authenticationSchemes:
                                    - name: OAuth Bearer Token
                                      description: Authentication scheme using the OAuth Bearer Token Standard
                                      specUri: http://www.rfc-editor.org/info/rfc6750
                                      type: oauthbearertoken
                                meta:
                                    resourceType: ServiceProviderConfig
                                    location: https://api.getpostman.com/scim/v2/ServiceProviderConfig
                "401":
                    $ref: "#/components/responses/scimUnauthorized"
                "500":
                    $ref: "#/components/responses/scimInternalErrorUserUpdate"
    /scim/v2/Users:
        get:
            summary: Get all user resources
            description: Gets information about all Postman team members.
            operationId: fetchAllUserResources
            tags:
                - SCIM 2.0 - Identity
                - User Provisioning
            parameters:
                - name: startIndex
                  in: query
                  schema:
                      type: number
                      default: 1
                      description: The index entry by which to begin the list of returned results.
                      example: 1
                - name: count
                  in: query
                  schema:
                      type: number
                      default: 100
                      description: Limit the number of results returned in a single response.
                      example: 50
                - name: filter
                  in: query
                  schema:
                      type: string
                      description: Filter results by a specific word or phrase.
                      example: userName eq "taylor-lee%40example.com"
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    Resources:
                                        type: array
                                        description: A list of user resources.
                                        items:
                                            $ref: "#/components/schemas/scimUserResource"
                                    itemsPerPage:
                                        type: number
                                        description: The number of items per response page.
                                        example: 2
                                    schemas:
                                        type: array
                                        items:
                                            type: string
                                            description: The schemas URI.
                                            example: urn:ietf:params:scim:api:messages:2.0:ListResponse
                                    startIndex:
                                        type: number
                                        description: The index entry by which the returned results begin.
                                        example: 1
                                    totalResults:
                                        type: number
                                        description: The total number of results found.
                                        example: 1000
                            examples:
                                Successful Response:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:ListResponse
                                        totalResults: 1000
                                        startIndex: 1
                                        itemsPerPage: 2
                                        Resources:
                                            - schemas:
                                                  - urn:ietf:params:scim:schemas:core:2.0:User
                                              id: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                                              userName: taylor.lee@example.com
                                              name:
                                                  givenName: Taylor
                                                  familyName: Lee
                                              externalId: "12345678"
                                              active: true
                                              meta:
                                                  resourceType: User
                                                  created: "2021-02-22T04:24:13.000Z"
                                                  lastModified: "2021-02-22T04:24:13.000Z"
                                            - schemas:
                                                  - urn:ietf:params:scim:schemas:core:2.0:User
                                              id: 123775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                                              userName: alex.cruz@example.com
                                              name:
                                                  givenName: Alex
                                                  familyName: Cruz
                                              externalId: "87654321"
                                              active: true
                                              meta:
                                                  resourceType: User
                                                  created: "2021-02-22T04:24:13.000Z"
                                                  lastModified: "2021-02-22T04:24:13.000Z"
                                No Results Found:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:ListResponse
                                        totalResults: 0
                                        startIndex: 1
                                        itemsPerPage: 0
                                        Resources: []
                                Filter Results:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:ListResponse
                                        totalResults: 1000
                                        startIndex: 1
                                        itemsPerPage: 1
                                        Resources:
                                            - schemas:
                                                  - urn:ietf:params:scim:schemas:core:2.0:User
                                              id: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                                              userName: taylor.lee@example.com
                                              name:
                                                  givenName: Taylor
                                                  familyName: Lee
                                              externalId: "12345678"
                                              active: true
                                              meta:
                                                  resourceType: User
                                                  created: "2021-02-22T04:24:13.000Z"
                                                  lastModified: "2021-02-22T04:24:13.000Z"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    detail:
                                        type: string
                                        example: You've used filter(s) that Postman doesn't support.
                                    status:
                                        type: string
                                        example: "400"
                            examples:
                                Bad Request:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        detail: This Postman team doesn't exist anymore.
                                        status: "400"
                                Using Incorrect Filter:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        detail: You've used filter(s) that Postman doesn't support.
                                        status: "400"
                "401":
                    $ref: "#/components/responses/scimUnauthorized"
                "403":
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    detail:
                                        type: string
                                        example: Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.
                                    status:
                                        type: string
                                        example: "403"
                            example:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail:
                                    Your API key was generated by a Team Admin who is no longer on your team.
                                    Use an API key generated by a Team Admin.
                                status: "403"
                "429":
                    $ref: "#/components/responses/scimTooManyRequests"
                "500":
                    $ref: "#/components/responses/scimInternalErrorUserUpdate"
        post:
            summary: Create a user
            description: |
                Creates a new user account in Postman and adds the user to your organization's Postman team. If the account does not already exist, this also activates the user so they can authenticate in to your Postman team.

                If the account already exists, the system sends the user an [email invite](https://learning.postman.com/docs/administration/managing-your-team/managing-your-team/#inviting-users) to join the Postman team. The user joins the team once they accept the invite.

                By default, the system assigns new users the developer role. You can [update user roles in Postman](https://learning.postman.com/docs/administration/managing-your-team/managing-your-team/#managing-team-roles).
            operationId: createUser
            tags:
                - SCIM 2.0 - Identity
                - User Provisioning
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                schemas:
                                    type: array
                                    description: The SCIM schema resource URI.
                                    items:
                                        type: string
                                        example: urn:ietf:params:scim:schemas:core:2.0:User
                                userName:
                                    type: string
                                    description: The user's username.
                                    example: taylor.lee@example.com
                                active:
                                    type: boolean
                                    description: If true, activates the user. This lets them authenticate in to your Postman team.
                                    example: true
                                externalId:
                                    type: string
                                    description: The user's external ID.
                                    example: "12345678"
                                groups:
                                    type: array
                                    description: A list of groups to which to assign the user to.
                                    items:
                                        type: string
                                        example: Test Group
                                locale:
                                    type: string
                                    description: The user's IETF locale.
                                    example: en-US
                                name:
                                    type: object
                                    description: Information about the user's name.
                                    properties:
                                        givenName:
                                            type: string
                                            description: The user's first name.
                                            example: Taylor
                                        familyName:
                                            type: string
                                            description: The user's last name.
                                            example: Lee
                        example:
                            schemas:
                                - urn:ietf:params:scim:schemas:core:2.0:User
                            userName: taylor.lee@example.com
                            name:
                                givenName: Taylor
                                familyName: Lee
                            displayName: Taylor Lee
                            locale: en-US
                            groups:
                                - Test Group
                            active: true
            responses:
                "201":
                    description: Created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        description: The SCIM schema URI.
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:schemas:core:2.0:User
                                    id:
                                        type: string
                                        description: The user's SCIM ID.
                                        example: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                                    userName:
                                        type: string
                                        format: email
                                        description: The user's username.
                                        example: taylor.lee@example.com
                                    name:
                                        type: object
                                        properties:
                                            givenName:
                                                type: string
                                                description: The user's first name.
                                                example: Taylor
                                            familyName:
                                                type: string
                                                description: The user's last name.
                                                example: Lee
                                    externalId:
                                        type: string
                                        description: The user's external ID.
                                        example: "12345678"
                                    active:
                                        type: boolean
                                        description: If true, the user is active.
                                        example: true
                                    meta:
                                        type: object
                                        description: The response's non-standard meta information.
                                        properties:
                                            created:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the user was created.
                                                example: "2021-02-22T04:24:13.000Z"
                                            lastModified:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the user was last modified.
                                                example: "2021-02-22T04:24:13.000Z"
                                            resourceType:
                                                type: string
                                                description: The SCIM resource type.
                                                enum:
                                                    - User
                                                example: User
                            example:
                                schemas:
                                    - urn:ietf:params:scim:schemas:core:2.0:User
                                id: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                                userName: taylor.lee@example.com
                                name:
                                    givenName: Test
                                    familyName: User
                                externalId: "12345678"
                                active: true
                                meta:
                                    resourceType: User
                                    created: "2021-02-22T04:24:13.000Z"
                                    lastModified: "2021-02-22T04:24:13.000Z"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        description: A list of SCIM schema resource URIs.
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    scimType:
                                        type: string
                                        description: The SCIM type.
                                        example: invalidSyntax
                                    detail:
                                        type: string
                                        description: Information about the error.
                                        example: This Postman team doesn't exist anymore.
                                    status:
                                        type: string
                                        description: The HTTP status code.
                                        example: "400"
                            examples:
                                Invalid Syntax:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        scimType: invalidSyntax
                                        detail: The request body seems to be incomplete or have unsupported characters.
                                        status: "400"
                                Invalid Team:
                                    value:
                                        detail: This Postman team doesn't exist anymore.
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        status: "400"
                                Not Enterprise:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        detail: Only Postman teams on the Enterprise plan can use SCIM provisioning. Upgrade your plan.
                                        status: "400"
                                No Slots Available:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        detail: No slots available on your Postman team. Purchase or free up slots to invite more members. For help, contact Team Admins or members with a Billing role.
                                        status: "400"
                "401":
                    $ref: "#/components/responses/scimUnauthorized"
                "403":
                    $ref: "#/components/responses/scimForbidden"
                "409":
                    description: Conflict
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        description: The SCIM schema resource URIs.
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    scimType:
                                        type: string
                                        description: The SCIM type.
                                        example: uniqueness
                                    detail:
                                        type: string
                                        description: Information about the error.
                                        example: This person is already a member of the team.
                                    status:
                                        type: string
                                        description: The HTTP status code.
                                        example: "409"
                            example:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                scimType: uniqueness
                                detail: This person is already a member of the team.
                                status: "409"
                "429":
                    $ref: "#/components/responses/scimTooManyRequests"
                "500":
                    $ref: "#/components/responses/scimInternalErrorUserUpdate"
    /scim/v2/Users/{userId}:
        get:
            summary: Get a user resource
            description: Gets information about a Postman team member.
            operationId: fetchUserResource
            tags:
                - SCIM 2.0 - Identity
                - User Provisioning
            responses:
                "200":
                    $ref: "#/components/responses/scimUserResource"
                "400":
                    $ref: "#/components/responses/scimBadRequest"
                "401":
                    $ref: "#/components/responses/scimUnauthorized"
                "403":
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        items:
                                            type: string
                                            description: The error schema URI.
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    detail:
                                        type: string
                                        description: Information about the error.
                                        example: Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.
                                    status:
                                        type: string
                                        description: The error status code.
                                        example: "403"
                            example:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail:
                                    Your API key was generated by a Team Admin who is no longer on your team.
                                    Use an API key generated by a Team Admin.
                                status: "403"
                "404":
                    $ref: "#/components/responses/scimUserNotFound"
                "429":
                    description: Too Many Requests
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        items:
                                            type: string
                                            description: The error schema URI.
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    detail:
                                        type: string
                                        description: Information about the error.
                                        example: That's 300 attempts in less than a minute. Wait for a minute and then try again.
                                    status:
                                        type: number
                                        description: The error status code.
                                        example: 429
                            example:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: That's 300 attempts in less than a minute. Wait for a minute and then try again.
                                status: 429
                "500":
                    $ref: "#/components/responses/scimInternalErrorUser"
        put:
            summary: Update a user
            description: |
                Updates a user's first and last name in Postman.

                **Note:**

                You can only use the SCIM API to update a user's first and last name. You cannot update any other user attributes with the API.
            operationId: updateUserInformation
            tags:
                - SCIM 2.0 - Identity
                - User Provisioning
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                schemas:
                                    type: array
                                    description: The SCIM schema resource URI.
                                    items:
                                        type: string
                                        example: urn:ietf:params:scim:schemas:core:2.0:User
                                name:
                                    type: object
                                    description: Information about the user's name.
                                    properties:
                                        givenName:
                                            type: string
                                            description: The user's first name.
                                            example: Taylor
                                        familyName:
                                            type: string
                                            description: The user's last name.
                                            example: Lee
                        example:
                            schemas:
                                - urn:ietf:params:scim:schemas:core:2.0:User
                            name:
                                givenName: Taylor
                                familyName: Lee
            responses:
                "200":
                    $ref: "#/components/responses/scimUserResource"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        description: A list of SCIM schema resource URIs.
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    scimType:
                                        type: string
                                        description: The SCIM type.
                                        example: invalidSyntax
                                    detail:
                                        type: string
                                        description: Information about the error.
                                        example: This Postman team doesn't exist anymore.
                                    status:
                                        type: string
                                        description: The HTTP status code.
                                        example: "400"
                            examples:
                                Bad Request:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        detail: Couldn't update this team member's username. Try again — it should work next time around.
                                        status: "400"
                                Invalid Team:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        detail: This Postman team doesn't exist anymore.
                                        status: "400"
                                Invalid Syntax:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        scimType: invalidSyntax
                                        detail: The request body seems to be incomplete or have unsupported characters.
                                        status: "400"
                "401":
                    $ref: "#/components/responses/scimUnauthorized"
                "403":
                    $ref: "#/components/responses/scimForbidden"
                "404":
                    $ref: "#/components/responses/scimUserNotFound"
                "429":
                    $ref: "#/components/responses/scimTooManyRequests"
                "500":
                    $ref: "#/components/responses/scimInternalErrorUserUpdate"
        patch:
            summary: Update a user's state
            description: |
                Updates a user's active state in Postman.

                ### Reactivating users

                By setting the `active` property from `false` to `true`, this reactivates an account. This allows the account to authenticate in to Postman and adds the account back on to your Postman team.
            operationId: updateUserState
            tags:
                - SCIM 2.0 - Identity
                - User Provisioning
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                schemas:
                                    type: array
                                    description: The SCIM schema resource URI.
                                    items:
                                        type: string
                                        example: urn:ietf:params:scim:api:messages:2.0:PatchOp
                                Operations:
                                    type: array
                                    description: Information about the user update operation.
                                    items:
                                        type: object
                                        properties:
                                            op:
                                                type: string
                                                description: The operation to perform.
                                                enum:
                                                    - replace
                                                example: replace
                                            value:
                                                type: object
                                                description: The performed operation's value.
                                                properties:
                                                    active:
                                                        type: boolean
                                                        description: |
                                                            Sets the user's `active` state:
                                                            - `true` — Activates the user. This lets them authenticate in to your Postman team.
                                                            - `false` — Removes the user from your Postman team and deactivates the account. This blocks the user from authenticating in to Postman.
                                                        example: true
                        example:
                            schemas:
                                - urn:ietf:params:scim:api:messages:2.0:PatchOp
                            Operations:
                                - op: replace
                                  value:
                                      active: true
            responses:
                "200":
                    $ref: "#/components/responses/scimUserResource"
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    schemas:
                                        type: array
                                        items:
                                            type: string
                                            example: urn:ietf:params:scim:api:messages:2.0:Error
                                    detail:
                                        type: string
                                        example: Team doesn't exist.
                                    status:
                                        type: string
                                        example: "400"
                            examples:
                                Bad Request:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        scimType: invalidSyntax
                                        detail: You've used operation that Postman doesn't support.
                                        status: "400"
                                Invalid Team:
                                    value:
                                        schemas:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                                        detail: Team doesn't exist.
                                        status: "400"
                "401":
                    $ref: "#/components/responses/scimUnauthorized"
                "403":
                    $ref: "#/components/responses/scimForbidden"
                "404":
                    $ref: "#/components/responses/scimUserNotFound"
                "429":
                    $ref: "#/components/responses/scimTooManyRequests"
                "500":
                    $ref: "#/components/responses/scimInternalErrorUserUpdate"
        parameters:
            - $ref: "#/components/parameters/userId"
    /security/api-validation:
        post:
            summary: Schema security validation
            description: |
                Performs a security analysis on the given definition and returns any issues. This can help you understand their impact and provides solutions to help you resolve the errors. You can include this endpoint to your CI/CD process to automate schema validation.

                For more information, read our [API definition warnings](https://learning.postman-beta.com/docs/api-governance/api-definition/api-definition-warnings/) documentation.

                **Note:**

                The maximum allowed size of the definition is 10 MB.
            operationId: schemaSecurityValidation
            tags:
                - API Security
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                schema:
                                    type: object
                                    required:
                                        - language
                                        - schema
                                        - type
                                    properties:
                                        language:
                                            type: string
                                            description: The definition format.
                                            enum:
                                                - json
                                                - yaml
                                            example: json
                                        schema:
                                            type: string
                                            description: The stringified definition.
                                            example: '{"openapi":"3.0.0","info":{"version":"1","title":"temp","license":{"name":"MIT"}},"servers":[{"url":"https://petstore.swagger.io/v1"}],"paths":{"/user":{"get":{"summary":"Details about a user","operationId":"listUser","tags":["user"],"parameters":[{"name":"id","in":"query","description":"ID of the user","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Details about a user","headers":{"x-next":{"description":"A link to the next page of responses","schema":{"type":"string"}}},"content":{"application/json":{"schema":{$ref:"#/components/schemas/User"}}}},"default":{"description":"unexpected error","content":{"application/json":{"schema":{$ref:"#/components/schemas/Error"}}}}}}}},"components":{"schemas":{"User":{"type":"object","required":["id","name"],"properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"},"tag":{"type":"string"}}},"Error":{"type":"object","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"}}}},"securitySchemes":{"BasicAuth":{"type":"http","scheme":"basic"}}},"security":[{"BasicAuth":[]}]}'
                                        type:
                                            type: string
                                            description: The definition type.
                                            enum:
                                                - openapi3
                                                - openapi2
                                            example: openapi3
                        example:
                            schema:
                                type: openapi3
                                language: json
                                schema: '{"openapi":"3.0.0","info":{"version":"1","title":"temp","license":{"name":"MIT"}},"servers":[{"url":"https://petstore.swagger.io/v1"}],"paths":{"/user":{"get":{"summary":"Details about a user","operationId":"listUser","tags":["user"],"parameters":[{"name":"id","in":"query","description":"ID of the user","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Details about a user","headers":{"x-next":{"description":"A link to the next page of responses","schema":{"type":"string"}}},"content":{"application/json":{"schema":{$ref:"#/components/schemas/User"}}}},"default":{"description":"unexpected error","content":{"application/json":{"schema":{$ref:"#/components/schemas/Error"}}}}}}}},"components":{"schemas":{"User":{"type":"object","required":["id","name"],"properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"},"tag":{"type":"string"}}},"Error":{"type":"object","required":["code","message"],"properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"}}}},"securitySchemes":{"BasicAuth":{"type":"http","scheme":"basic"}}},"security":[{"BasicAuth":[]}]}'
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    warnings:
                                        type: array
                                        description: |
                                            Information about each issue discovered in the security analysis. Each object includes the warning's severity and category, the location of the issue, data paths, and other information. This returns an empty object if there are no issues present in the schema.

                                            If there are issues, this returns the `possibleFixUrl` response in each warning object. This provides a link to documentation you can use to resolve the warning.
                                        items:
                                            type: object
                                            additionalProperties: true
                                        example: {}
                            examples:
                                No Warnings Found:
                                    value:
                                        warnings: []
                                Successful Response with Warnings:
                                    value:
                                        warnings:
                                            - severity: MEDIUM
                                              message: HTTP authentication scheme is using an unknown scheme.
                                              location:
                                                  start:
                                                      line: 1
                                                      column: 1116
                                                  end:
                                                      line: 1
                                                      column: 1118
                                              dataPath:
                                                  - components
                                                  - securitySchemes
                                                  - BasicAuth
                                                  - scheme
                                              possibleFixUrl: https://go.pstmn.io/openapi3-security-warnings#http-authentication-scheme-is-using-an-unknown-scheme
                                              category:
                                                  name: Broken User Authentication
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: Invalid schema
                                            message:
                                                type: string
                                                description: The error message.
                                                example: Provided schema type is not supported.
                            examples:
                                Invalid Schema:
                                    value:
                                        error:
                                            name: Invalid schema
                                            reason: Provided schema type is not supported.
                                Payload Too Large:
                                    value:
                                        error:
                                            message: request entity too large
                                            name: PayloadTooLargeError
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
    /webhooks:
        post:
            summary: Create a webhook
            description: Creates a webhook that triggers a collection with a custom payload. You can get the webhook's URL from the `webhookUrl` property in the endpoint's response.
            operationId: createWebhook
            tags:
                - Webhooks
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                webhook:
                                    type: object
                                    properties:
                                        collection:
                                            type: string
                                            format: uid
                                            description: The collection UID to trigger when calling this webhook.
                                            example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                        name:
                                            type: string
                                            description: The webhook's name. On success, the system creates a new monitor with this name in the **Monitors** tab.
                                            example: Test Webhook
                        example:
                            webhook:
                                name: Test Webhook
                                collection: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
            responses:
                "200":
                    description: "Successful Response"
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    webhook:
                                        type: object
                                        description: Information about the webhook.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The webhook's ID.
                                                example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                            name:
                                                type: string
                                                description: The webhook's name.
                                                example: Test Webhook
                                            collection:
                                                type: string
                                                format: uid
                                                description: The unique ID of the webhook's associated collection.
                                                example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                            webhookUrl:
                                                type: string
                                                format: url
                                                description: The webhook's URL.
                                                example: https://newman-api.getpostman.com/run/12345678/267a6e99-b6da-407c-a96f-03be2d6282fb
                                            uid:
                                                type: string
                                                format: uid
                                                description: The webhook's unique ID.
                                                example: 12345678-1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                            example:
                                webhook:
                                    id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                    name: Test Webhook
                                    collection: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    webhookUrl: https://newman-api.getpostman.com/run/12345678/267a6e99-b6da-407c-a96f-03be2d6282fb
                                    uid: 12345678-1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - $ref: "#/components/parameters/workspaceQueryId"
    /workspaces:
        get:
            summary: Get all workspaces
            description: |
                Gets all [workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/creating-workspaces/). The response includes your workspaces and any workspaces that you have access to.

                **Note:**

                This endpoint's response contains the visibility field. Visibility determines who can access the workspace:

                - `only-me` — Applies to the **My Workspace** workspace.
                - `personal` — Only you can access the workspace.
                - `team` — All team members can access the workspace.
                - `private-team` — Only invited team members can access the workspace.
                - `public` — Everyone can access the workspace.
            operationId: allWorkspaces
            tags:
                - Workspaces
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    workspaces:
                                        type: array
                                        items:
                                            type: object
                                            description: Information about the workspace.
                                            properties:
                                                id:
                                                    type: string
                                                    format: uuid
                                                    description: The workspace's ID.
                                                    example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                                name:
                                                    type: string
                                                    description: The workspace's name.
                                                    example: Test Workspace
                                                type:
                                                    type: string
                                                    description: The type of workspace.
                                                    enum:
                                                        - personal
                                                        - team
                                                    example: personal
                                                visibility:
                                                    type: string
                                                    description: |
                                                        The team's visibility in Postman:

                                                        - `only-me` — Applies to the **My Workspace** workspace.
                                                        - `personal` — Only you can access the workspace.
                                                        - `team` — All team members can access the workspace.
                                                        - `private-team` — Only invited team members can access the workspace.
                                                        - `public` — Everyone can access the workspace.
                                                    enum:
                                                        - only-me
                                                        - personal
                                                        - team
                                                        - private-team
                                                        - public
                                                    example: private-team
                            examples:
                                Successful Response:
                                    value:
                                        workspaces:
                                            - id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                              name: Test Workspace
                                              type: personal
                                              visibility: personal
                                            - id: f8801e9e-03a4-4c7b-b31e-5db5cd771696
                                              name: Team Workspace
                                              type: team
                                              visibility: private-team
                                Filter by Type:
                                    value:
                                        workspaces:
                                            - id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                              name: Test Workspace
                                              type: personal
                                              visibility: personal
                "401":
                    $ref: "#/components/responses/unauthorized"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
            parameters:
                - name: type
                  required: false
                  in: query
                  description: |
                      The type of workspace to filter the response by:

                      - `team` — Return only team workspaces.
                      - `personal` — Return only personal workspaces.
                  schema:
                      type: string
                      example: team
        post:
            summary: Create a workspace
            description: |
                Creates a new [workspace](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/creating-workspaces/).

                ### Important:

                We **deprecated** linking collections or environments between workspaces. We do **not** recommend that you do this.

                If you have a linked collection or environment, note the following:

                - The endpoint does **not** create a clone of a collection or environment.
                - Any changes you make to a linked collection or environment changes them in **all** workspaces.
                - If you delete a collection or environment linked between workspaces, the system deletes it in **all** the workspaces.
            operationId: createWorkspace
            tags:
                - Workspaces
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                workspace:
                                    type: object
                                    description: Information about the workspace.
                                    required:
                                        - name
                                        - type
                                    properties:
                                        name:
                                            type: string
                                            description: The workspace's name.
                                            example: Test Workspace
                                        type:
                                            type: string
                                            description: |
                                                The type of workspace:

                                                - `personal` — A personal workspace.
                                                - `team` — A team workspace.
                                            enum:
                                                - personal
                                                - team
                                            example: personal
                                        description:
                                            type: string
                                            description: The workspace's description.
                                            example: This is a test personal workspace.
                        example:
                            workspace:
                                name: Test Workspace
                                type: personal
                                description: This is a test personal workspace.
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    workspace:
                                        type: object
                                        description: Information about the created workspace.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The workspace's ID.
                                                example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                            name:
                                                type: string
                                                description: The workspace's name.
                                                example: Test Workspace
                            example:
                                workspace:
                                    id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                    name: Test Workspace
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundDatabase"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
    /workspaces/{workspaceId}:
        get:
            summary: Get a workspace
            description: |
                Gets information about a workspace.

                **Note:**

                This endpoint's response contains the `visibility` field. [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) determines who can access the workspace:

                - `only-me` — Applies to the **My Workspace** workspace.
                - `personal` — Only you can access the workspace.
                - `team` — All team members can access the workspace.
                - `private-team` — Only invited team members can access the workspace.
                - `public` — Everyone can access the workspace.
            operationId: singleWorkspace
            tags:
                - Workspaces
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    workspace:
                                        type: object
                                        description: Information about the workspace.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The workspace's ID.
                                                example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                            name:
                                                type: string
                                                description: The workspace's name.
                                                example: Team Workspace
                                            type:
                                                type: string
                                                description: The type of workspace.
                                                enum:
                                                    - personal
                                                    - team
                                                example: personal
                                            description:
                                                type: string
                                                description: The workspace's description.
                                                example: The Test team workspace.
                                            visibility:
                                                type: string
                                                description: |
                                                    The workspace's visibility. [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) determines who can access the workspace:

                                                    - `only-me` — Applies to the **My Workspace** workspace.
                                                    - `personal` — Only you can access the workspace.
                                                    - `team` — All team members can access the workspace.
                                                    - `private-team` — Only invited team members can access the workspace.
                                                    - `public` — Everyone can access the workspace.
                                                enum:
                                                    - only-me
                                                    - personal
                                                    - team
                                                    - private-team
                                                    - public
                                                example: private-team
                                            createdBy:
                                                type: string
                                                description: The user ID of the user who created the workspace.
                                                example: "12345678"
                                            updatedBy:
                                                type: string
                                                description: The user ID of the user who last updated the workspace.
                                                example: "12345678"
                                            createdAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the workspace was created.
                                                example: "2022-07-06T16:18:32.000Z"
                                            updatedAt:
                                                type: string
                                                format: date-time
                                                description: The date and time at which the workspace was last updated.
                                                example: "2022-07-06T20:55:13.000Z"
                                            collections:
                                                type: array
                                                description: The workspace's collections.
                                                items:
                                                    type: object
                                                    description: Information about the collection.
                                                    properties:
                                                        id:
                                                            type: string
                                                            format: uuid
                                                            description: The collection's ID.
                                                            example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                        name:
                                                            type: string
                                                            description: The collection's name.
                                                            example: Test Collection
                                                            deprecated: true
                                                        uid:
                                                            type: string
                                                            format: uid
                                                            description: The collection's unique ID.
                                                            example: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                            deprecated: true
                                            environments:
                                                type: array
                                                description: The workspace's environments.
                                                items:
                                                    type: object
                                                    description: Information about the environment.
                                                    properties:
                                                        id:
                                                            type: string
                                                            format: uuid
                                                            description: The environment's ID.
                                                            example: 5daabc50-8451-43f6-922d-96b403b4f28e
                                                        name:
                                                            type: string
                                                            description: The environment's name.
                                                            example: Test Environment
                                                            deprecated: true
                                                        uid:
                                                            type: string
                                                            format: uid
                                                            description: The environment's unique ID.
                                                            example: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                                            deprecated: true
                                            mocks:
                                                type: array
                                                description: The workspace's mock servers.
                                                items:
                                                    type: object
                                                    description: Information about the mock server.
                                                    properties:
                                                        id:
                                                            type: string
                                                            format: uuid
                                                            description: The mock server's ID.
                                                            example: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                                        name:
                                                            type: string
                                                            description: The mock server's name.
                                                            example: Test Mock
                                                            deprecated: true
                                                        uid:
                                                            type: string
                                                            format: uid
                                                            description: The mock server's unique ID.
                                                            example: 12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289
                                                            deprecated: true
                                            monitors:
                                                type: array
                                                description: The workspace's monitors.
                                                items:
                                                    type: object
                                                    description: Information about the monitor.
                                                    properties:
                                                        id:
                                                            type: string
                                                            format: uuid
                                                            description: The monitor's ID.
                                                            example: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                                        name:
                                                            type: string
                                                            description: The monitor's name.
                                                            example: Test Environment
                                                            deprecated: true
                                                        uid:
                                                            type: string
                                                            format: uid
                                                            description: The monitor's unique ID.
                                                            example: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                                            deprecated: true
                                            apis:
                                                type: array
                                                description: The workspace's APIs.
                                                items:
                                                    type: object
                                                    description: Information about the API.
                                                    properties:
                                                        id:
                                                            type: string
                                                            format: uuid
                                                            description: The API's ID.
                                                            example: 387c2863-6ee3-4a56-8210-225f774edade
                                                        name:
                                                            type: string
                                                            description: The API's name.
                                                            example: Test API
                                                            deprecated: true
                                                        uid:
                                                            type: string
                                                            format: uid
                                                            description: The API's unique ID.
                                                            example: 12345678-387c2863-6ee3-4a56-8210-225f774edade
                                                            deprecated: true
                            example:
                                workspace:
                                    id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                    name: Team Workspace
                                    type: team
                                    description: The Test team workspace.
                                    visibility: private-team
                                    createdBy: "12345678"
                                    updatedBy: "12345678"
                                    createdAt: "2022-07-06T16:18:32.000Z"
                                    updatedAt: "2022-07-06T20:55:13.000Z"
                                    collections:
                                        - id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                          name: Test Collection
                                          uid: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    environments:
                                        - id: 5daabc50-8451-43f6-922d-96b403b4f28e
                                          name: Test Environment
                                          uid: 12345678-5daabc50-8451-43f6-922d-96b403b4f28e
                                    mocks:
                                        - id: e3d951bf-873f-49ac-a658-b2dcb91d3289
                                          name: Test Mock
                                          uid: 12345678-e3d951bf-873f-49ac-a658-b2dcb91d3289
                                    monitors:
                                        - id: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                          name: Test Monitor
                                          uid: 12345678-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
                                    apis:
                                        - id: 387c2863-6ee3-4a56-8210-225f774edade
                                          name: Test API
                                          uid: 12345678-387c2863-6ee3-4a56-8210-225f774edade
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundDatabase"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        put:
            summary: Update a workspace
            description: |
                Updates a workspace.

                **Note:**

                You can change a workspace's type from `personal` to `team`, but you **cannot** change a workspace from `team` to `personal`.

                ### Important:

                We **deprecated** linking collections or environments between workspaces. We do **not** recommend that you do this.

                If you have a linked collection or environment, note the following:

                - The endpoint does **not** create a clone of a collection or environment.
                - Any changes you make to a linked collection or environment changes them in **all** workspaces.
                - If you delete a collection or environment linked between workspaces, the system deletes it in **all** the workspaces.
            operationId: updateWorkspace
            tags:
                - Workspaces
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                workspace:
                                    type: object
                                    properties:
                                        name:
                                            type: string
                                            description: The workspace's name.
                                            example: Test Workspace
                                        type:
                                            type: string
                                            description: |
                                                The type of workspace:

                                                - `personal` — A personal workspace.
                                                - `team` — A team workspace.
                                            enum:
                                                - team
                                                - personal
                                            example: team
                                        description:
                                            type: string
                                            description: The workspace's description.
                                            example: This is a test team workspace.
                        example:
                            workspace:
                                name: Test Workspace
                                description: This is a test team workspace.
                                type: team
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    workspace:
                                        type: object
                                        description: Information about the updated workspace.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The workspace's ID.
                                                example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                            name:
                                                type: string
                                                description: The workspace's name.
                                                example: Test Workspace
                            example:
                                workspace:
                                    id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                    name: Test Workspace
                "400":
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: invalidUIDError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: The ID provided is not a valid UID.
                            example:
                                error:
                                    name: invalidUIDError
                                    message: The ID provided is not a valid UID.
                "401":
                    $ref: "#/components/responses/unauthorized"
                "403":
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: object
                                        properties:
                                            name:
                                                type: string
                                                description: The error name.
                                                example: forbiddenError
                                            message:
                                                type: string
                                                description: The error message.
                                                example: You do not have access to update this workspace.
                            example:
                                error:
                                    name: forbiddenError
                                    message: You do not have access to update this workspace.
                "404":
                    $ref: "#/components/responses/instanceNotFoundWorkspace"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        delete:
            summary: Delete a workspace
            description: |
                Deletes an existing workspace.

                ### Important:

                If you delete a workspace that has a linked collection or environment with another workspace, this will delete the collection and environment in **all** workspaces.
            operationId: deleteWorkspace
            tags:
                - Workspaces
            responses:
                "200":
                    description: Successful Response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    workspace:
                                        type: object
                                        description: Information about the deleted workspace.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                description: The workspace's ID.
                                                example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                            example:
                                workspace:
                                    id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                "401":
                    $ref: "#/components/responses/unauthorized"
                "404":
                    $ref: "#/components/responses/instanceNotFoundWorkspace"
                "429":
                    $ref: "#/components/responses/rateLimited"
                "500":
                    $ref: "#/components/responses/internalServerError"
        parameters:
            - $ref: "#/components/parameters/workspaceId"
components:
    securitySchemes:
        PostmanApiKey:
            type: apiKey
            in: header
            name: x-api-key
    headers:
        Location:
            description: The URL to get or poll the status of an API version task created.
            schema:
                type: string
                example: "/apis/6138195-0262634b-cdcb-4a03-a4b9-2b221eccfbaa/tasks/66ae9950-0869-4e65-96b0-1e0e47e771af"
    responses:
        addCollection:
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            id:
                                type: string
                                example: 12345678-61867bcc-c4c1-11ed-afa1-0242ac120002
                                description: The collection's ID.
                    examples:
                        Successful Response:
                            value:
                                id: 12345678-61867bcc-c4c1-11ed-afa1-0242ac120002
            description: Created
        apiInstanceNotFoundError:
            description: API Not Found
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: instanceNotFoundError
                                description: The type of error.
                            title:
                                type: string
                                example: Resource not found
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: We could not find the API you are looking for
                                description: Details about the error message.
                    example:
                            type: instanceNotFoundError
                            title: Resource not found
                            detail: We could not find the API you are looking for
        apiNotFoundError:
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: instanceNotFoundError
                                description: The type of error.
                            title:
                                type: string
                                example: We could not find the API you are looking for
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: We could not find the API you are looking for
                                description: Details about the error message.
                    example:
                        type: instanceNotFoundError
                        title: We could not find the API you are looking for
                        detail: We could not find the API you are looking for.
            description: API Not Found
        apiVersionInstanceNotFoundError:
            description: API Not Found
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                description: Information about the error.
                                properties:
                                    name:
                                        type: string
                                        example: instanceNotFoundError
                                        description: The type of error.
                                    message:
                                        type: string
                                        example: We could not find the API version you are looking for
                                        description: Details about the error message.
                    example:
                        error:
                            name: instanceNotFoundError
                            message: We could not find the API version you are looking for
        apiVersionNotFound:
            description: Not Found
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: VersionNotFound
                                description: The type of error.
                            title:
                                type: string
                                example: API Version not found.
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: We could not find the API Version you are looking for.
                                description: Details about the error message.
                    example:
                        type: VersionNotFound
                        title: API Version not found.
                        details: We could not find the API Version you are looking for.
        badRequest:
            description: Bad Request
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: badRequest
                                description: The type of error.
                            title:
                                type: string
                                example: Invalid request
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: Missing parameter, workspaceId
                                description: Details about the error message.
                    example:
                        type: badRequest
                        title: Invalid request
                        detail: Missing parameter, workspaceId
        collectionInstanceNotFoundError:
            description: Collection Not Found
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: instanceNotFoundError
                                description: The type of error.
                            title:
                                type: string
                                example: Collection not found
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: We could not find a collection you are looking for
                                description: Details about the error message.
                    example:
                        type: instanceNotFoundError
                        title: Collection not found
                        detail: We could not find a collection you are looking for
        createApi:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        description: The API's base data schema.
                        title: API Base Data Schema
                        properties:
                            id:
                                type: string
                                format: uuid
                                example: 5360b75f-447e-467c-9299-12fd6c92450d
                                description: The API's ID.
                            name:
                                type: string
                                example: User Management API
                                description: The API's name.
                            summary:
                                type: string
                                example: An API to manager users.
                                description: The API's short summary.
                            createdAt:
                                type: string
                                format: date-time
                                example: '2023-08-22T14:21:57.000Z'
                                description: The date and time at which the API was created.
                            createdBy:
                                type: number
                                format: int64
                                example: 12345678
                                description: The Postman ID of the user that created the API.
                            updatedAt:
                                type: string
                                format: date-time
                                example: '2023-08-22T14:21:57.000Z'
                                description: The date and time at which the API was updated.
                            updatedBy:
                                type: number
                                format: int64
                                example: 12345678
                                description: The Postman ID of the user that updated the API.
                            description:
                                type: string
                                example: This API includes operations to add/remove/update users.
                                description: The API's description.
                    examples:
                        Successful Response:
                            value:
                                id: 90ca9f5a-c4c4-11ed-afa1-0242ac120002
                                name: Test API
                                summary: Testing API
                                createdAt: '2023-02-17T04:09:01.000Z'
                                createdBy: '12345678'
                                updatedAt: '2023-02-17T04:09:13.000Z'
                                updatedBy: '12345678'
                                description: This is a test API.
        createApiSchema:
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            id:
                                type: string
                                example: 5381f010-c4c1-11ed-afa1-0242ac120002
                                description: The schema's ID.
                            type:
                                enum:
                                    - proto:2
                                    - proto:3
                                    - graphql
                                    - openapi:3_1
                                    - openapi:3
                                    - openapi:2
                                    - openapi:1
                                    - raml:1
                                    - raml:0_8
                                    - wsdl:2
                                    - wsdl:1
                                    - asyncapi:2
                                type: string
                                example: openapi:3
                                description: The schema's type.
                            files:
                                type: array
                                items:
                                    type: object
                                    title: Schema File Base Data
                                    properties:
                                        id:
                                            type: string
                                            example: ae2b9ab2-28f2-401d-912f-eca09a78e98b
                                            description: The schema file's ID.
                                        name:
                                            type: string
                                            example: index.json
                                            description: The schema file's name.
                                        path:
                                            type: string
                                            example: Test.json
                                            description: The file system path to the schema file.
                                        createdAt:
                                            type: string
                                            format: date-time
                                            example: "2023-03-29T11:37:15Z"
                                            description: The date and time at which the file was created.
                                        createdBy:
                                            type: string
                                            example: "12345678"
                                            description: The user Id of the user that created the file.
                                        updatedAt:
                                            type: string
                                            format: date-time
                                            example: "2023-03-29T11:37:15Z"
                                            description: The date and time at which the file was last updated.
                                        updatedBy:
                                            type: string
                                            example: "12345678"
                                            description: The user ID of the user that last updated the file.
                                    description: Information about the schema file.
                                description: The list of the schema's files.
                            createdAt:
                                type: string
                                format: date-time
                                example: "2023-03-29T11:37:15Z"
                                description: The date and time at which the schema was created.
                            createdBy:
                                type: string
                                example: "12345678"
                                description: The user ID of the user that created the schema.
                            updatedAt:
                                type: string
                                format: date-time
                                example: "2023-03-29T11:37:15Z"
                                description: The date and time at which the schema was last updated.
                            updatedBy:
                                type: string
                                example: "12345678"
                                description: The user ID of the user that updated the schema.
                        description: Information about the created API schema.
                    examples:
                        Create Schema:
                            value:
                                type: openapi:3
                                files:
                                    - path: NewPet.json
                                      createdBy: "557089"
                                      id: 41a3d7fd-bf9a-4053-b20e-37453962b4d6
                                      createdAt: "2023-03-21T10:10:54.000Z"
                                      name: NewPet.json
                                      updatedBy: "557089"
                                      updatedAt: "2023-03-21T10:10:54.000Z"
                                    - path: Pet.json
                                      createdBy: "557089"
                                      id: 93502b81-9f47-45e1-94f7-64882c92519b
                                      createdAt: "2023-03-21T10:10:54.000Z"
                                      name: Pet.json
                                      updatedBy: "557089"
                                      updatedAt: "2023-03-21T10:10:54.000Z"
                                    - path: common/Error.json
                                      createdBy: "557089"
                                      id: 72f4e1c2-5bf8-4247-ab3c-42bcdcc9ae9c
                                      createdAt: "2023-03-21T10:10:54.000Z"
                                      name: Error.json
                                      updatedBy: "557089"
                                      updatedAt: "2023-03-21T10:10:54.000Z"
                                    - path: parameters.json
                                      createdBy: "557089"
                                      id: 2fdc8ea1-d02e-4e50-989e-6fa28f42b995
                                      createdAt: "2023-03-21T10:10:54.000Z"
                                      name: parameters.json
                                      updatedBy: "557089"
                                      updatedAt: "2023-03-21T10:10:54.000Z"
                                    - root:
                                          enabled: true
                                      path: swagger.json
                                      createdBy: "557089"
                                      id: b4fc1bdc-6587-4f9b-95c9-f768146089b4
                                      createdAt: "2023-03-21T10:10:54.000Z"
                                      name: swagger.json
                                      updatedBy: "557089"
                                      updatedAt: "2023-03-21T10:10:54.000Z"
                                createdBy: "557089"
                                createdAt: "2023-03-21T10:10:54.000Z"
                                id: b4fc1bdc-6587-4f9b-95c9-f768146089b4
                                updatedBy: "557089"
                                updatedAt: "2023-03-21T10:10:54.000Z"
                        Create Schema with Proto:
                            value:
                                type: proto:2
                                files:
                                    - path: index.proto
                                      createdBy: "557089"
                                      id: 41a3d7fd-bf9a-4053-b20e-37453962b4d6
                                      createdAt: "2023-03-21T10:10:54.000Z"
                                      name: index.proto
                                      updatedBy: "557089"
                                      updatedAt: "2023-03-21T10:10:54.000Z"
                                      root:
                                          enabled: true
                                createdBy: "557089"
                                createdAt: "2023-03-21T10:10:54.000Z"
                                id: b4fc1bdc-6587-4f9b-95c9-f768146089b4
                                updatedBy: "557089"
                                updatedAt: "2023-03-21T10:10:54.000Z"
            description: Created
        createApiVersion:
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            id:
                                type: string
                                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                description: The version's ID.
                            createdAt:
                                type: string
                                format: date-time
                                example: "2023-06-09T14:48:45.000Z"
                                description: The date and time at which the version was created.
                            updatedAt:
                                type: string
                                format: date-time
                                example: "2023-06-09T19:50:49.000Z"
                                description: The date and time at which the version was last updated.
                    examples:
                        Successful Response:
                            value:
                                id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                createdAt: "2023-06-09T14:48:45.000Z"
                                updatedAt: "2023-06-09T19:50:49.000Z"
            headers:
                Location:
                    $ref: "#/components/headers/Location"
            description: Accepted
        createUpdateSchemaFile:
            content:
                application/json:
                    schema:
                        type: object
                        title: Schema File Base Data
                        properties:
                            id:
                                type: string
                                example: ae2b9ab2-28f2-401d-912f-eca09a78e98b
                                description: The schema file's ID.
                            name:
                                type: string
                                example: index.json
                                description: The schema file's name.
                            path:
                                type: string
                                example: data-model/index.json
                                description: The file system path to the schema file.
                            createdAt:
                                type: string
                                format: date-time
                                example: "2022-03-29T11:37:15Z"
                                description: The date and time at which the file was created.
                            createdBy:
                                type: string
                                example: "2345"
                                description: The user Id of the user that created the file.
                            updatedAt:
                                type: string
                                format: date-time
                                example: "2022-03-29T11:37:15Z"
                                description: The date and time at which the file was last updated.
                            updatedBy:
                                type: string
                                example: "2345"
                                description: The user ID of the user that last updated the file.
                        description: Information about the schema file.
                    examples:
                        Successful Response:
                            value:
                                id: ae2b9ab2-28f2-401d-912f-eca09a78e98b
                                createdBy: "2345"
                                updatedBy: "2345"
                                createdAt: "2022-03-29T11:37:15Z"
                                updatedAt: "2022-03-29T11:37:15Z"
                                path: data-model/index.json
                                name: index.json
            description: Successful Response
        removePANElementOrFolder:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            elementType:
                                type: object
                                description: The Private API Network element type. The name of the object is the element type.
                                enum:
                                    - api
                                    - collection
                                    - workspace
                                    - folder
                                properties:
                                    id:
                                        type: string
                                        description: The element's ID.
                                        example: 5360b75f-447e-467c-9299-12fd6c92450d
                    examples:
                        Remove an API:
                            value:
                                api:
                                    id: 5360b75f-447e-467c-9299-12fd6c92450d
                        Remove a Collection:
                            value:
                                collection:
                                    id: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                        Remove a Workspace:
                            value:
                                workspace:
                                    id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                        Delete a Folder:
                            value:
                                folder:
                                    id: "1"
        folderNotEmptyError:
            description: Bad Request
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            name:
                                type: string
                                description: The error name.
                                example: instanceNotFoundError
                            message:
                                type: string
                                description: The error message.
                                example: You need to empty this folder before deleting it.
                    example:
                        name: folderNotEmptyError
                        message: You need to empty this folder before deleting it.
        forbiddenError:
            description: Forbidden
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: forbiddenError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: You do not have enough permissions to perform this action.
                    example:
                        error:
                            name: forbiddenError
                            message: You do not have enough permissions to perform this action.
        forbiddenErrorApi:
            description: Forbidden
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: ForbiddenError
                                description: The type of error.
                            title:
                                type: string
                                example: You are not permitted to perform the action.
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: Please ensure that you have required permissions
                                description: Details about the error message.
                    example:
                        title: You are not permitted to perform the action.
                        detail: Please ensure that you have required permissions
                        type: ForbiddenError
        forbiddenErrorSchema:
            description: Forbidden
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: ForbiddenError
                                description: The type of error.
                            title:
                                type: string
                                example: You are not permitted to perform the action.
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: You do not have access to perform this operation.
                                description: Details about the error message.
                    example:
                        title: You are not permitted to perform the action.
                        detail: You do not have access to perform this operation.
                        type: ForbiddenError
        getAllApis:
            content:
                application/json:
                    schema:
                        type: object
                        description: Information about the API schema.
                        properties:
                            apis:
                                type: array
                                items:
                                    type: object
                                    title: API Base Data Schema
                                    description: The API's base data schema.
                                    properties:
                                        id:
                                            type: string
                                            format: uuid
                                            example: 5360b75f-447e-467c-9299-12fd6c92450d
                                            description: The API's ID.
                                        name:
                                            type: string
                                            example: User Management API
                                            description: The API's name.
                                        summary:
                                            type: string
                                            example: An API to manager users.
                                            description: The API's short summary.
                                        createdAt:
                                            type: string
                                            format: date-time
                                            example: "2023-08-22T14:21:57.000Z"
                                            description: The date and time at which the API was created.
                                        createdBy:
                                            type: number
                                            format: int64
                                            example: 12345678
                                            description: The Postman ID of the user that created the API.
                                        updatedAt:
                                            type: string
                                            format: date-time
                                            example: "2023-08-22T14:21:57.000Z"
                                            description: The date and time at which the API was updated.
                                        updatedBy:
                                            type: number
                                            format: int64
                                            example: 12345678
                                            description: The Postman ID of the user that updated the API.
                                        description:
                                            type: string
                                            example: This API includes operations to add/remove/update users.
                                            description: The API's description.
                            meta:
                                type: object
                                description: The response's meta information for paginated results.
                                properties:
                                    limit:
                                        type: number
                                        example: 100
                                        description: The maximum number of records in the paginated response.
                                    total:
                                        type: number
                                        example: 1000
                                        description: The number of records that match the defined criteria.
                                    nextCursor:
                                        type: string
                                        example: RnJpIEZlYiAyNCAyMDIzIDEzOjI0OjA5IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=
                                        description: The Base64-encoded value that points to the next record in the results set.
                    examples:
                        Successful Response:
                            value:
                                meta:
                                    nextCursor: VGh1IE1hciAxNiAyMDIzIDE3OjIxOjUzIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=
                                    total: 4
                                    limit: 10
                                apis:
                                    - updatedBy: "893478"
                                      createdBy: "893478"
                                      name: New API
                                      summary:
                                      description:
                                      createdAt: "2023-02-15T06:27:16.000Z"
                                      id: 73e15000-bc7a-4802-b80e-05fff18fd7f8
                                      updatedAt: "2023-02-15T06:27:24.000Z"
                                    - updatedBy: "12345678"
                                      createdBy: "12345678"
                                      name: Test API
                                      summary: This is a test API.
                                      description: This is an API for testing purposes.
                                      createdAt: "2023-02-15T13:07:08.000Z"
                                      id: fec65321-5f55-4feb-8525-be95bccae8dd
                                      updatedAt: "2023-02-15T13:07:08.000Z"
                                    - updatedBy: "12345678"
                                      createdBy: "12345678"
                                      name: Test API
                                      summary: This is a test API.
                                      description: This is an API for testing purposes.
                                      createdAt: "2023-02-16T05:52:27.000Z"
                                      id: b7c54faa-d119-4572-a18d-e2f5c32348ce
                                      updatedAt: "2023-02-16T05:52:27.000Z"
                                    - updatedBy: "12345678"
                                      createdBy: "12345678"
                                      name: Test API
                                      summary: This is a test API.
                                      description: This is an API for testing purposes.
                                      createdAt: "2023-02-16T07:07:16.000Z"
                                      id: d535a8ba-ed4b-4c6a-bf1c-13fac95485b8
                                      updatedAt: "2023-02-16T07:07:16.000Z"
                        Filtered by createdBy:
                            value:
                                meta:
                                    nextCursor: V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=
                                    total: 1
                                    limit: 10
                                apis:
                                    - updatedBy: "893478"
                                      createdBy: "893478"
                                      name: New API
                                      summary:
                                      description:
                                      createdAt: "2023-02-15T06:27:16.000Z"
                                      id: 73e15000-bc7a-4802-b80e-05fff18fd7f8
                                      updatedAt: "2023-02-15T06:27:24.000Z"
                        Filter by description:
                            value:
                                meta:
                                    nextCursor: V2VkIEZlYiAxNSAyMDIzIDEzOjA3OjA4IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=
                                    total: 1
                                    limit: 10
                                apis:
                                    - updatedBy: "893478"
                                      createdBy: "893478"
                                      name: New API
                                      summary:
                                      description: This is an API for testing purposes.
                                      createdAt: "2023-02-15T06:27:16.000Z"
                                      id: 73e15000-bc7a-4802-b80e-05fff18fd7f8
                                      updatedAt: "2023-02-15T06:27:24.000Z"
            description: Successful Response
        getAllPANAddElementRequests:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            requests:
                                description: Information about the requests to add entities to Private API Network.
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id:
                                            type: integer
                                            description: The request's ID.
                                            example: 2
                                        createdAt:
                                            type: string
                                            format: date-time
                                            description: The date and time at which the request was created.
                                            example: "2022-06-09T14:48:45.000Z"
                                        createdBy:
                                            type: integer
                                            description: The ID of the user who created the request.
                                            example: 12345678
                                        message:
                                            type: string
                                            description: The user's optional message included in the request.
                                            example: Please approve this collection
                                        status:
                                            type: string
                                            description: The request's status.
                                            enum:
                                                - pending
                                                - denied
                                            example: denied
                                        element:
                                            type: object
                                            description: Information about the requested element.
                                            properties:
                                                id:
                                                    type: string
                                                    description: The element's UUID.
                                                    format: uuid
                                                    example: 5360b75f-447e-467c-9299-12fd3c92450d
                                                type:
                                                    type: string
                                                    description: The element type.
                                                    enum:
                                                        - api
                                                        - workspace
                                                        - collection
                                                    example: collection
                                                name:
                                                    type: string
                                                    description: The element's name.
                                                    example: Test Collection
                                                summary:
                                                    type: string
                                                    description: The element's short summary.
                                                    example: This is a test collection.
                                        response:
                                            description: Information about the response to the request. This object only returns when the network manager denied a request with a message.
                                            type: object
                                            properties:
                                                createdAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the network manager denied the request.
                                                    example: "2020-06-01T08:32:31.000Z"
                                                createdBy:
                                                    type: integer
                                                    description: The network manager's user ID.
                                                    example: 2272
                                                message:
                                                    type: string
                                                    description: The network manager's request response message.
                                                    example: Too many errors, please fix and resubmit
                            meta:
                                type: object
                                description: The response's non-standard meta information.
                                properties:
                                    limit:
                                        type: integer
                                        description: The maximum number of items returned.
                                        example: 10
                                    offset:
                                        type: integer
                                        description: The zero-based offset of the first item returned.
                                        example: 5
                                    totalCount:
                                        type: integer
                                        description: The total count of items found.
                                        example: 100
                    examples:
                        Successful Response:
                            value:
                                requests:
                                    - id: 1
                                      createdBy: 87654321
                                      createdAt: "2020-06-01T08:32:31.000Z"
                                      status: pending
                                      element:
                                          type: api
                                          id: 360b75f-447e-467c-9299-12fd3c92450d
                                          name: Test api
                                          summary: Test api summary
                                    - id: 2
                                      createdBy: 12345678
                                      createdAt: "2022-06-09T14:48:45.000Z"
                                      message: Please approve this collection
                                      status: denied
                                      element:
                                          type: collection
                                          id: 5360b75f-447e-467c-9299-12fd3c92450d
                                          name: Test Collection
                                          summary: This is a test collection.
                                      response:
                                          createdAt: "2020-06-01T08:32:31.000Z"
                                          createdBy: 2272
                                          message: Too many errors, please fix and resubmit
                                meta:
                                    limit: 10
                                    offset: 5
                                    totalCount: 100
        getAllVersions:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            meta:
                                type: object
                                properties:
                                    limit:
                                        type: number
                                        example: 100
                                        description: The maximum number of records in the paginated response.
                                    total:
                                        type: number
                                        example: 1000
                                        description: The number of records that match the defined criteria.
                                    nextCursor:
                                        type: string
                                        example: RnJpIEZlYiAyNCAyMDIzIDEzOjI0OjA5IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=
                                        description:
                                            The Base64-encoded value that points to the next
                                            record in the results set.
                                description: The response's meta information for paginated results.
                            versions:
                                type: array
                                items:
                                    type: object
                                    title: API Version Data Schema
                                    properties:
                                        id:
                                            type: string
                                            format: uuid
                                            example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                            description: The version's ID.
                                        name:
                                            type: string
                                            example: Release 1.0
                                            description: The version's name.
                                        createdAt:
                                            type: string
                                            format: date-time
                                            example: "2023-06-09T14:48:45.000Z"
                                            description: The date and time at which the version was created.
                                        updatedAt:
                                            type: string
                                            format: date-time
                                            example: "2023-06-09T14:48:45.000Z"
                                            description:
                                                The date and time at which the version was last
                                                updated.
                                        releaseNotes:
                                            type: string
                                            example: This is the first release.
                                            description: The version's release notes.
                                    description: Information about the API version.
                        description: Information about the API's versions.
                    examples:
                        Successful Response:
                            value:
                                versions:
                                    - createdAt: "2022-06-09T14:48:45.000Z"
                                      updatedAt: "2022-06-09T19:50:49.000Z"
                                      id: 07d940bf-40fc-4acd-a11e-be6769894af0
                                      name: Release 2.0
                                      releaseNotes: This is the second release of the Test API.
                                    - createdAt: "2022-06-09T14:48:45.000Z"
                                      updatedAt: "2022-06-09T19:50:49.000Z"
                                      id: 3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2
                                      name: Release 1.0
                                      releaseNotes:
                                          This is the first release of the Test API. For more
                                          information, read the documentation.
                                meta:
                                    nextCursor: VGh1IE1hciAxNiAyMDIzIDE3OjIxOjUzIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=
                                    limit: 2
                                    total: "100"
                        Success with Cursor Response:
                            value:
                                meta:
                                    total: 4
                                    limit: 2
                                    nextCursor: V2VkIEZlYiAxNSAyMDIzIDEzOjUyOjAyIEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=
                                versions:
                                    - createdAt: "2023-02-15T13:41:43.000Z"
                                      name: v1
                                      id: 12691e5b-4a6f-4bc7-8335-4ce9b7c5c2ae
                                      releaseNotes: ""
                                      updatedAt: "2023-02-15T13:41:58.000Z"
                                    - createdAt: "2023-02-15T13:47:23.000Z"
                                      name: v2
                                      id: 2665bfbf-888a-48f6-98fa-24c0b7689207
                                      releaseNotes: ""
                                      updatedAt: "2023-02-15T13:47:27.000Z"
                        Response with cursor Query Parameter:
                            value:
                                meta:
                                    total: 4
                                    limit: 10
                                versions:
                                    - createdAt: "2023-02-17T10:39:51.000Z"
                                      name: v4
                                      id: bc792958-ffd5-4a4c-bcf5-1c07cb8f277b
                                      releaseNotes: ""
                                      updatedAt: "2023-02-17T10:39:57.000Z"
        getAnApi:
            description: Successful Response
            content:
                application/json:
                    schema:
                        oneOf:
                        - type: object
                          title: API Base Data Schema
                          description: The API's base data schema.
                          properties:
                                id:
                                    type: string
                                    format: uuid
                                    example: 5360b75f-447e-467c-9299-12fd6c92450d
                                    description: The API's ID.
                                name:
                                    type: string
                                    example: User Management API
                                    description: The API's name.
                                summary:
                                    type: string
                                    example: An API to manager users.
                                    description: The API's short summary.
                                createdAt:
                                    type: string
                                    format: date-time
                                    example: '2023-08-22T14:21:57.000Z'
                                    description: The date and time at which the API was created.
                                createdBy:
                                    type: number
                                    format: int64
                                    example: 12345678
                                    description: The Postman ID of the user that created the API.
                                updatedAt:
                                    type: string
                                    format: date-time
                                    example: '2023-08-22T14:21:57.000Z'
                                    description: The date and time at which the API was updated.
                                updatedBy:
                                    type: number
                                    format: int64
                                    example: 12345678
                                    description: The Postman ID of the user that updated the API.
                                description:
                                    type: string
                                    example: This API includes operations to add/remove/update users.
                                    description: The API's description.
                        - type: object
                          title: API Extended Data Schema
                          description: The API's extended data schema.
                          allOf:
                          - type: object
                            title: API Base Data Schema
                            description: The API's base data schema.
                            properties:
                                id:
                                    type: string
                                    format: uuid
                                    example: 5360b75f-447e-467c-9299-12fd6c92450d
                                    description: The API's ID.
                                name:
                                    type: string
                                    example: User Management API
                                    description: The API's name.
                                summary:
                                    type: string
                                    example: An API to manager users.
                                    description: The API's short summary.
                                createdAt:
                                    type: string
                                    format: date-time
                                    example: '2023-08-22T14:21:57.000Z'
                                    description: The date and time at which the API was created.
                                createdBy:
                                    type: number
                                    format: int64
                                    example: 12345678
                                    description: The Postman ID of the user that created the API.
                                updatedAt:
                                    type: string
                                    format: date-time
                                    example: '2023-08-22T14:21:57.000Z'
                                    description: The date and time at which the API was updated.
                                updatedBy:
                                    type: number
                                    format: int64
                                    example: 12345678
                                    description: The Postman ID of the user that updated the API.
                                description:
                                    type: string
                                    example: This API includes operations to add/remove/update users.
                                    description: The API's description.
                          - type: object
                            title: API Details
                            description: Detailed information about the API.
                            properties:
                                gitInfo:
                                    type: object
                                    title: Git Repo Data Schema
                                    description: Information about the API's Git repository integration.
                                    properties:
                                        domain:
                                            type: string
                                            example: https://git.example.com
                                            nullable: true
                                            description: The domain at which the Git repository is hosted.
                                        repository:
                                            type: string
                                            example: test-api-repo
                                            description: The repository's name.
                                        organization:
                                            type: string
                                            example: test-org
                                            description: The organization that owns the repository.
                                        schemaFolder:
                                            type: string
                                            example: test-api-schema
                                            description: The API definition's repository folder location.
                                        collectionFolder:
                                            type: string
                                            example: test-api-collection
                                            description: The API definition's collection repository folder location.
                                schemas:
                                    type: array
                                    description: The API's schemas.
                                    items:
                                        type: object
                                        description: Information about the schema.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                example: 5381f010-c4c1-11ed-afa1-0242ac120002
                                                description: The schema's ID.
                                versions:
                                    type: array
                                    description: The API's versions.
                                    items:
                                        type: object
                                        description: Information about the version.
                                        properties:
                                            id:
                                                type: string
                                                format: uuid
                                                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                description: The version's ID.
                                            name:
                                                type: string
                                                example: v1
                                                description: The version's name.
                                collections:
                                    type: array
                                    description: The API's collections.
                                    items:
                                        type: object
                                        description: Information about the collection.
                                        properties:
                                            id:
                                                type: string
                                                example: 12345678-61867bcc-c4c1-11ed-afa1-0242ac120002
                                                description: The collection's ID.
                        discriminator:
                            propertyName: include
                    examples:
                        Successful Response:
                            value:
                                createdAt: '2022-06-09T14:48:45.000Z'
                                updatedAt: '2022-06-09T19:50:49.000Z'
                                id: 5360b75f-447e-467c-9299-12fd6c92450d
                                name: Test API
                                summary: Test API.
                                description: This is a test API.
                                createdBy: '12345678'
                                updatedBy: '12345678'
                        Get Linked Collections:
                            value:
                                createdAt: '2022-06-09T14:48:45.000Z'
                                updatedAt: '2022-06-09T19:50:49.000Z'
                                id: 5360b75f-447e-467c-9299-12fd6c92450d
                                name: Test API
                                summary: Test API.
                                description: This is a test API.
                                createdBy: '12345678'
                                updatedBy: '12345678'
                                collections:
                                    - id: 16bb367e-fafb-4ef3-933b-ee3d971866fb
                                    - id: 16bb367e-fafb-4ef3-933b-ee3d971866fc
                        Successful Response for API Viewers:
                            value:
                                createdAt: '2022-06-09T14:48:45.000Z'
                                updatedAt: '2022-06-09T19:50:49.000Z'
                                id: 5360b75f-447e-467c-9299-12fd6c92450d
                                name: Test API
                                summary: Test API.
                                description: This is a test API.
                                createdBy: '12345678'
                                updatedBy: '12345678'
                                versions:
                                    - id: 2360b75f-447e-467c-9299-12fd6c924502
                                      name: version-name-1
                                    - id: 5260b75f-447e-467c-9299-12f16c924503
                                      name: version-name-2
                        Response with the include Parameter:
                            value:
                                createdAt: '2022-06-09T14:48:45.000Z'
                                updatedAt: '2022-06-09T19:50:49.000Z'
                                id: 5360b75f-447e-467c-9299-12fd6c92450d
                                name: Test API
                                summary: Test API.
                                description: This is a test API.
                                createdBy: '12345678'
                                updatedBy: '12345678'
                                schemas:
                                    id: 16bb367e-fafb-4ef3-933b-ee3d971866fb
                                collections:
                                    - id: 16bb367e-fafb-4ef3-933b-ee3d971866fb
                                    - id: 16bb367e-fafb-4ef3-933b-ee3d971866fc
                                versions:
                                    - id: version-id-1
                                      name: version-name
                                gitInfo: {}
                        Response for Git-Linked API with the include Parameter:
                            value:
                                createdAt: '2022-06-09T14:48:45.000Z'
                                updatedAt: '2022-06-09T19:50:49.000Z'
                                id: 5360b75f-447e-467c-9299-12fd6c92450d
                                name: Test API
                                summary: Test API.
                                description: This is a test API.
                                createdBy: '12345678'
                                updatedBy: '12345678'
                                schemas: []
                                collections: []
                                versions:
                                - id: version-id-1
                                  name: version-name
                                gitInfo:
                                    domain: https://custom-domain.com
                                    organisation: org-name
                                    repository: repo-name
                                    schemaFolder: schema-folder
                                    collectionFolder: collection-folder
        getCollection:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            info:
                                type: object
                                description: Information about the collection.
                                properties:
                                    name:
                                        type: string
                                        example: Test Collection
                                        description: The collection's name.
                                    schema:
                                        enum:
                                            - https://schema.getpostman.com/json/collection/v2.1.0/collection.json
                                        type: string
                                        example: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
                                        description: The collection's JSON schema version.
                                    updatedAt:
                                        type: string
                                        format: date-time
                                        example: "2023-06-16T20:21:13.000Z"
                                        description: The date and time at which the collection was last updated.
                                    _postman_id:
                                        type: string
                                        format: uuid
                                        example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                        description: The collection's ID.
                                    description:
                                        type: string
                                        example: This is a test collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.
                                        description: The collection's description.
                            item:
                                type: array
                                items:
                                    type: object
                                    additionalProperties: true
                                    description:
                                        Information about the collection's contents. For a complete list of values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
                                    properties:
                                        id:
                                            type: string
                                            example: 82ee981b-e19f-962a-401e-ea34ebfb4848
                                            description: The collection item's ID.
                                        name:
                                            type: string
                                            example: Test GET Response
                                            description: The collection item's human-readable identifier.
                                        event:
                                            type: array
                                            items: {}
                                            description:
                                                The collection's event information. For a complete list of values, refer to the `definitions.event` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
                                            additionalProperties: true
                                        request:
                                            type: object
                                            properties: {}
                                            description:
                                                The collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
                                            additionalProperties: true
                                        response:
                                            type: array
                                            items: {}
                                            description:
                                                The collection's response information. For a complete list of values, refer to the `definitions.response` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
                                            additionalProperties: true
                    examples:
                        Successful Response:
                            value:
                                item:
                                    - protocolProfileBehavior:
                                        disableBodyPruning: true
                                      response:
                                          - originalRequest:
                                                url:
                                                    host:
                                                        - https://api.getpostman.com
                                                    raw: https://api.getpostman.com/spacecrafts/:spacecraftId
                                                    variable:
                                                        - description: "(Required) The unique identifier of the spacecraft"
                                                          key: spacecraftId
                                                          value: "<string>"
                                                    path:
                                                        - spacecrafts
                                                        - ":spacecraftId"
                                                method: GET
                                                header:
                                                    - description: "Added as a part of security scheme: apikey"
                                                      key: X-Api-Key
                                                      value: "<API Key>"
                                            code: 200
                                            _postman_previewlanguage: json
                                            responseTime:
                                            header:
                                                - key: Content-Type
                                                  value: application/json
                                            name: The spacecraft corresponding to the provided `spacecraftId`
                                            _postman_previewtype: html
                                            body: |-
                                                {
                                                  "id": "<string>",
                                                  "name": "commodo",
                                                  "type": "capsule",
                                                  "description": "pariatur dolo"
                                                }
                                            cookie: []
                                            status: OK
                                            id: 54467f6e-71d7-43d5-acc0-48f948e38528
                                          - originalRequest:
                                                url:
                                                    host:
                                                        - https://api.getpostman.com
                                                    raw: https://api.getpostman.com/spacecrafts/:spacecraftId
                                                    variable:
                                                        - description: "(Required) The unique identifier of the spacecraft"
                                                          key: spacecraftId
                                                          value: "<string>"
                                                    path:
                                                        - spacecrafts
                                                        - ":spacecraftId"
                                                method: GET
                                                header:
                                                    - description: "Added as a part of security scheme: apikey"
                                                      key: X-Api-Key
                                                      value: "<API Key>"
                                            code: 404
                                            _postman_previewlanguage: json
                                            responseTime:
                                            header:
                                                - key: Content-Type
                                                  value: application/json
                                            name: No spacecraft found for the provided `spacecraftId`
                                            _postman_previewtype: html
                                            body: |-
                                                {
                                                  "message": "dolore Excepteur"
                                                }
                                            cookie: []
                                            status: Not Found
                                            id: 1231609a-7a3d-444d-aa0c-579703e618f4
                                          - originalRequest:
                                                url:
                                                    host:
                                                        - https://api.getpostman.com
                                                    raw: https://api.getpostman.com/spacecrafts/:spacecraftId
                                                    variable:
                                                        - description: "(Required) The unique identifier of the spacecraft"
                                                          key: spacecraftId
                                                          value: "<string>"
                                                    path:
                                                        - spacecrafts
                                                        - ":spacecraftId"
                                                method: GET
                                                header:
                                                    - description: "Added as a part of security scheme: apikey"
                                                      key: X-Api-Key
                                                      value: "<API Key>"
                                            code: 500
                                            _postman_previewlanguage: json
                                            responseTime:
                                            header:
                                                - key: Content-Type
                                                  value: application/json
                                            name: Unexpected error
                                            _postman_previewtype: html
                                            body: |-
                                                {
                                                  "message": "dolore Excepteur"
                                                }
                                            cookie: []
                                            status: Internal Server Error
                                            id: db674465-8cec-4208-9724-42278ca9b83c
                                      id: d3779255-5293-4e58-9b65-8954936e1dca
                                      request:
                                          url:
                                              host:
                                                  - https://api.getpostman.com
                                              raw: https://api.getpostman.com/spacecrafts/:spacecraftId
                                              variable:
                                                  - description: "(Required) The unique identifier of the spacecraft"
                                                    key: spacecraftId
                                                    value: "<string>"
                                              path:
                                                  - spacecrafts
                                                  - ":spacecraftId"
                                          method: GET
                                          header:
                                              - key: Accept
                                                value: application/json
                                      name: Read a spacecraft
                                auth:
                                    apikey:
                                        - type: string
                                          key: key
                                          value: X-Api-Key
                                        - type: string
                                          key: value
                                          value: SCBKCDKCHKDHCK
                                        - type: string
                                          key: in
                                          value: header
                                    type: apikey
                                info:
                                    description: Buy or rent spacecrafts
                                    _postman_id: e726de58-f1b3-4edd-a8a7-2579dc799d39
                                    schema: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
                                    name: Generated
                                variable:
                                    - value: "/"
                                      type: string
                                      id: 526a20ba-acfb-4549-a841-8edf2d24b929
                                      key: baseUrl
        getPANElementsAndFolders:
          description: Successful Response
          content:
              application/json:
                  schema:
                      type: object
                      properties:
                          elements:
                              description: Information about a Private API Network's folder elements. Elements are APIs, collections, and workspaces.
                              type: array
                              items:
                                  type: object
                                  properties:
                                      createdAt:
                                          type: string
                                          format: date-time
                                          description: The date and time at which the element was created.
                                          example: "2020-06-01T08:32:31.000Z"
                                      createdBy:
                                          type: integer
                                          description: The user who created the element.
                                          example: 12345678
                                      updatedAt:
                                          type: string
                                          format: date-time
                                          description: The date and time at which the element was last updated.
                                          example: "2021-11-29T06:31:24.000Z"
                                      updatedBy:
                                          type: integer
                                          description: The user who updated the element.
                                          example: 12345678
                                      addedAt:
                                          type: string
                                          format: date-time
                                          description: The date and time at which the element was published to Private API Network. This value is the same as the `updatedAt` value.
                                          example: "2021-11-29T06:31:24.000Z"
                                      addedBy:
                                          type: integer
                                          description: The user ID of the user who published the element.
                                          example: 12345678
                                      description:
                                          type: string
                                          description: The element's description.
                                          example: The payments and account services API.
                                      id:
                                          type: string
                                          format: uuid
                                          description: The element's ID.
                                          example: 5360b75f-447e-467c-9299-12fd6c92450d
                                      name:
                                          type: string
                                          description: The element's name.
                                          example: Billing API
                                      summary:
                                          type: string
                                          description: The element's summary.
                                          example: Payments and Account Services API
                                      type:
                                          type: string
                                          description: The element's type.
                                          example: api
                                      parentFolderId:
                                          type: integer
                                          description: The element's parent folder ID.
                                          example: 1
                                      href:
                                          type: string
                                          format: url
                                          description: The element's HREF.
                                          example: https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d
                          folders:
                              type: array
                              description: Information about the Private API Network's folders.
                              items:
                                  type: object
                                  properties:
                                      id:
                                          type: integer
                                          description: The folder's ID.
                                          example: 1
                                      parentFolderId:
                                          type: integer
                                          description: The folder's parent folder ID.
                                          example: 0
                                      updatedAt:
                                          type: string
                                          format: date-time
                                          description: The date and time at which the folder was updated.
                                          example: "2021-11-29T06:31:24.000Z"
                                      updatedBy:
                                          type: integer
                                          description: The user ID of the user who updated the folder.
                                          example: 12345678
                                      createdAt:
                                          type: string
                                          format: date-time
                                          description: The date and time at which the folder was created.
                                          example: "2020-06-01T08:32:31.000Z"
                                      createdBy:
                                          type: integer
                                          description: The user who created the folder.
                                          example: 12345678
                                      name:
                                          type: string
                                          description: The folder's name.
                                          example: Billing
                                      description:
                                          type: string
                                          description: The folder's description.
                                          example: The Billing API.
                                      type:
                                          type: string
                                          description: The element's type. This value is always `folder`.
                                          example: folder
                          meta:
                              type: object
                              description: The response's non-standard meta information.
                              properties:
                                  limit:
                                      type: integer
                                      description: The maximum number of elements returned. If the value exceeds the maximum value of `1000`, then the system uses the `1000` value.
                                      example: 1000
                                  offset:
                                      type: integer
                                      description: The zero-based offset of the first item returned.
                                      example: 0
                                  totalCount:
                                      type: integer
                                      description: The total count of the `elements` and `folders` items.
                                      example: 2
                  examples:
                      Successful Response:
                          value:
                              elements:
                                  - addedAt: "2021-11-29T06:31:24.000Z"
                                    addedBy: 12345678
                                    createdBy: 12345678
                                    createdAt: "2020-06-01T08:32:31.000Z"
                                    updatedBy: 12345678
                                    updatedAt: "2021-11-29T06:31:24.000Z"
                                    type: api
                                    id: 5360b75f-447e-467c-9299-12fd6c92450d
                                    parentFolderId: 1
                                    name: Billing API
                                    summary: Payments and Account Services API
                                    description: The payments and account services API.
                                    href: https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d
                                  - addedAt: "2021-11-29T06:31:26.000Z"
                                    addedBy: 12345678
                                    createdBy: 12345678
                                    createdAt: "2020-06-01T13:59:34.000Z"
                                    updatedBy: 12345678
                                    updatedAt: "2021-11-29T06:31:26.000Z"
                                    type: api
                                    id: 41f6dc6d-d8ab-45c6-8506-74a25acf5d5f
                                    parentFolderId: 2
                                    name: Reporting API
                                    summary: The reporting API.
                                    description: ~
                                    href: https://api.getpostman.com/apis/41f6dc6d-d8ab-45c6-8506-74a25acf5d5f
                              folders:
                                  - id: 1
                                    parentFolderId: 0
                                    updatedAt: "2021-11-29T06:31:24.000Z"
                                    updatedBy: 12345678
                                    createdBy: 12345678
                                    createdAt: "2020-06-01T08:32:31.000Z"
                                    name: Billing
                                    description: The Billing API.
                                    type: folder
                                  - id: 2
                                    parentFolderId: 0
                                    updatedAt: "2022-10-17T11:54:51.000Z"
                                    updatedBy: 12345678
                                    createdBy: 12345678
                                    createdAt: "2021-03-05T06:27:24.000Z"
                                    name: Reporting
                                    description: ~
                                    type: folder
                              meta:
                                  limit: 1000
                                  offset: 0
                                  totalCount: 2
                      List Root Folder's Elements:
                          value:
                              elements:
                                  - addedAt: '2021-11-29T06:31:24.000Z'
                                    addedBy: 12345678
                                    createdBy: 12345678
                                    createdAt: '2020-06-01T08:32:31.000Z'
                                    updatedBy: 12345678
                                    updatedAt: '2021-11-29T06:31:24.000Z'
                                    type: api
                                    id: 5360b75f-447e-467c-9299-12fd6c92450d
                                    parentFolderId: 1
                                    name: Billing API
                                    summary: The payments and account services API.
                                    description:
                                    href: https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d
                                  - addedBy: 12345678
                                    addedAt: '2022-12-07T18:22:15.000Z'
                                    createdBy: 12345678
                                    createdAt: '2022-12-07T18:22:15.000Z'
                                    updatedBy: 12345678
                                    updatedAt: '2022-12-07T18:22:15.000Z'
                                    type: collection
                                    id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    name: Billing API Collection
                                    summary: The Billing API collection.
                                    description:
                                    href: https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    parentFolderId: 2
                                    environments:
                                    - 120403-c6cf0fe2-c637-4d30-a640-ed64ec6d0ddb
                                    - 7084-461d8126-22c8-43ed-b99d-27e8a34d8eef
                              folders:
                                  - id: 1
                                    parentFolderId: 0
                                    updatedAt: '2021-11-29T06:31:24.000Z'
                                    updatedBy: 12345678
                                    createdBy: 12345678
                                    createdAt: '2020-06-01T08:32:31.000Z'
                                    name: Billing
                                    description: The Billing API.
                                    type: folder
                              meta:
                                  limit: 1000
                                  offset: 0
                                  totalCount: 2
        getSchema:
            description: Successful Response
            content:
                application/json:
                    schema:
                        oneOf:
                            - type: object
                              title: Get Schema
                              description: Information about the schema.
                              properties:
                                    id:
                                        type: string
                                        example: ae2b9ab2-28f2-401d-912f-eca09a78e98b
                                        description: The schema's ID.
                                    type:
                                        type: string
                                        example: openapi:3
                                        description: The schema's type.
                                    files:
                                        type: object
                                        description: Information about the schema's files. The response is paginated and limited to one page.
                                        properties:
                                            data:
                                                type: array
                                                description: A list of the schema files.
                                                items:
                                                    title: Schema File Base Data
                                                    description: Information about the schema file.
                                                    type: object
                                                    properties:
                                                        id:
                                                          type: string
                                                          example: cf98c187-17c1-455f-afbf-d4be51f12770
                                                          description: The schema file's ID.
                                                        name:
                                                          type: string
                                                          example: s1.json
                                                          description: The schema file's name.
                                                        path:
                                                          type: string
                                                          example: dir/s1.json
                                                          description: The file system path to the schema file.
                                                        createdAt:
                                                          type: string
                                                          format: date-time
                                                          example: "2023-03-16T18:38:56.000Z"
                                                          description: The date and time at which the file was created.
                                                        createdBy:
                                                          type: string
                                                          example: "5000842"
                                                          description: The user Id of the user that created the file.
                                                        updatedAt:
                                                          type: string
                                                          format: date-time
                                                          example: "2023-03-16T19:11:24.000Z"
                                                          description: The date and time at which the file was last updated.
                                                        updatedBy:
                                                          type: string
                                                          example: "5000842"
                                                          description: The user ID of the user that last updated the file.
                                            meta:
                                                type: object
                                                properties:
                                                    nextPath:
                                                        type: string
                                                        example: "/apis/1fdbff7c-036b-4f8a-91bc-17bf3ae74fd2/schemas/cf98c187-17c1-455f-afbf-d4be51f12770/files?cursor=eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJkaXIvczEuanNvbiJ9"
                                                        description: The URL path to the next file.
                                    createdAt:
                                        type: string
                                        format: date-time
                                        example: "2022-03-29T11:37:15Z"
                                        description: The date and time at which the schema was created.
                                    createdBy:
                                        type: string
                                        example: "2345"
                                        description: The user ID of the user that created the schema.
                                    updatedAt:
                                        type: string
                                        format: date-time
                                        example: "2022-03-29T11:37:15Z"
                                        description: The date and time at which the schema was last updated.
                                    updatedBy:
                                        type: string
                                        example: "2345"
                                        description: The user ID of the user that last updated the schema.
                            - type: object
                              title: Get Bundled Schema
                              description: Information about the schema.
                              properties:
                                id:
                                    type: string
                                    example: ae2b9ab2-28f2-401d-912f-eca09a78e98b
                                    description: The schema's ID.
                                type:
                                    type: string
                                    example: openapi:3
                                    description: The schema's type.
                                createdBy:
                                    type: string
                                    example: "2345"
                                    description: The user ID of the user that created the schema.
                                updatedBy:
                                    type: string
                                    example: "2345"
                                    description: The user ID of the user that last updated the schema.
                                createdAt:
                                    type: string
                                    format: date-time
                                    example: "2022-03-29T11:37:15Z"
                                    description: The date and time at which the schema was created.
                                updatedAt:
                                    type: string
                                    format: date-time
                                    example: "2022-03-29T11:37:15Z"
                                    description: The date and time at which the schema was last updated.
                                content:
                                    type: string
                                    description: The schema file, in a bundled format.
                                    example: |-
                                          openapi: '3.0.0'
                                          info:
                                            version: '1.0.0'
                                            title: 'Sample API'
                                            description: Buy or rent spacecrafts

                                          paths:
                                            /spacecrafts/{spacecraftId}:
                                              parameters:
                                                - name: spacecraftId
                                                  description: The unique identifier of the spacecraft
                                                  in: path
                                                  required: true
                                                  schema:
                                                    $ref: '#/components/schemas/SpacecraftId'
                                              get:
                                                summary: Read a spacecraft
                                                responses:
                                                  '200':
                                                    description: The spacecraft corresponding to the provided `spacecraftId`
                                                    content:
                                                      application/json:
                                                        schema:
                                                          $ref: '#/components/schemas/Spacecraft'
                                                  404:
                                                    description: No spacecraft found for the provided `spacecraftId`
                                                    content:
                                                      application/json:
                                                        schema:
                                                          $ref: '#/components/schemas/Error'
                                                  500:
                                                    description: Unexpected error
                                                    content:
                                                      application/json:
                                                        schema:
                                                          $ref: '#/components/schemas/Error'
                                          components:
                                            schemas:
                                              SpacecraftId:
                                                description: The unique identifier of a spacecraft
                                                type: string
                                              Spacecraft:
                                                type: object
                                                required:
                                                  - id
                                                  - names
                                                  - type
                                                properties:
                                                  id:
                                                    $ref: '#/components/schemas/SpacecraftId'
                                                  name:
                                                    type: string
                                                  type:
                                                    type: string
                                                    enum:
                                                      - capsule
                                                      - probe
                                                      - satellite
                                                      - spaceplane
                                                      - station
                                                  description:
                                                    type: string
                                              Error:
                                                type: object
                                                required:
                                                  - message
                                                properties:
                                                  message:
                                                    description: A human readable error message
                                                    type: string
                                            securitySchemes:
                                              ApiKey:
                                                type: apiKey
                                                in: header
                                                name: X-Api-Key
                                          security:
                                            - ApiKey: []
                    examples:
                        Successful Response:
                            value:
                                id: ae2b9ab2-28f2-401d-912f-eca09a78e98b
                                type: openapi:3
                                createdBy: "2345"
                                updatedBy: "2345"
                                createdAt: "2022-03-29T11:37:15Z"
                                updatedAt: "2022-03-29T11:37:15Z"
                                files:
                                    meta:
                                        nextPath: "/apis/1fdbff7c-036b-4f8a-91bc-17bf3ae74fd2/schemas/cf98c187-17c1-455f-afbf-d4be51f12770/files?cursor=eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJkaXIvczEuanNvbiJ9"
                                    data:
                                        - createdBy: "5000842"
                                          path: dir/s1.json
                                          updatedBy: "5000842"
                                          updatedAt: "2023-03-16T19:11:24.000Z"
                                          createdAt: "2023-03-16T18:38:56.000Z"
                                          id: cf98c187-17c1-455f-afbf-d4be51f12770
                                          name: s1.json
                        Get Bundled Schema:
                            value:
                                id: ae2b9ab2-28f2-401d-912f-eca09a78e98b
                                type: openapi:3
                                createdBy: "2345"
                                updatedBy: "2345"
                                createdAt: "2022-03-29T11:37:15Z"
                                updatedAt: "2022-03-29T11:37:15Z"
                                content: |-
                                    openapi: '3.0.0'
                                    info:
                                      version: '1.0.0'
                                      title: 'Sample API'
                                      description: Buy or rent spacecrafts

                                    paths:
                                      /spacecrafts/{spacecraftId}:
                                        parameters:
                                          - name: spacecraftId
                                            description: The unique identifier of the spacecraft
                                            in: path
                                            required: true
                                            schema:
                                              $ref: '#/components/schemas/SpacecraftId'
                                        get:
                                          summary: Read a spacecraft
                                          responses:
                                            '200':
                                              description: The spacecraft corresponding to the provided `spacecraftId`
                                              content:
                                                application/json:
                                                  schema:
                                                    $ref: '#/components/schemas/Spacecraft'
                                            404:
                                              description: No spacecraft found for the provided `spacecraftId`
                                              content:
                                                application/json:
                                                  schema:
                                                    $ref: '#/components/schemas/Error'
                                            500:
                                              description: Unexpected error
                                              content:
                                                application/json:
                                                  schema:
                                                    $ref: '#/components/schemas/Error'
                                    components:
                                      schemas:
                                        SpacecraftId:
                                          description: The unique identifier of a spacecraft
                                          type: string
                                        Spacecraft:
                                          type: object
                                          required:
                                            - id
                                            - names
                                            - type
                                          properties:
                                            id:
                                              $ref: '#/components/schemas/SpacecraftId'
                                            name:
                                              type: string
                                            type:
                                              type: string
                                              enum:
                                                - capsule
                                                - probe
                                                - satellite
                                                - spaceplane
                                                - station
                                            description:
                                              type: string
                                        Error:
                                          type: object
                                          required:
                                            - message
                                          properties:
                                            message:
                                              description: A human readable error message
                                              type: string
                                      securitySchemes:
                                        ApiKey:
                                          type: apiKey
                                          in: header
                                          name: X-Api-Key
                                    security:
                                      - ApiKey: []
        getSchemaFileContents:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        title: Schema File Contents
                        description: Information about the schema file.
                        properties:
                            id:
                                type: string
                                example: "0784657a-668d-4530-85c8-468becdb06fd"
                                description: The schema file's ID.
                            name:
                                type: string
                                example: index.json
                                description: The schema file's name.
                            path:
                                type: string
                                example: common/Test.json
                                description: The file system path to the schema file.
                            content:
                                type: string
                                example: |-
                                    {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                            ],
                                        "properties": {
                                            "code": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                        "message": {
                                            "type": "string"
                                            }
                                        }
                                    }
                                description: The schema file's content.
                            createdAt:
                                type: string
                                format: date-time
                                example: "2023-03-15T13:27:45.000Z"
                                description: The date and time at which the file was created.
                            createdBy:
                                type: string
                                example: "12345678"
                                description: The user Id of the user that created the file.
                            updatedAt:
                                type: string
                                format: date-time
                                example: "2023-03-15T13:27:45.000Z"
                                description: The date and time at which the file was last updated.
                            updatedBy:
                                type: string
                                example: "12345678"
                                description: The user ID of the user that last updated the file.
                    examples:
                        Successful Response:
                            value:
                                id: "0784657a-668d-4530-85c8-468becdb06fd"
                                name: Test.json
                                path: common/Test.json
                                content: |-
                                    {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "message": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                createdAt: "2023-03-15T13:27:45.000Z"
                                createdBy: "12345678"
                                updatedAt: "2023-03-15T13:27:45.000Z"
                                updatedBy: "12345678"
        getSchemaFiles:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        description: Information about the schema files and its meta information.
                        properties:
                            meta:
                                type: object
                                description: The schema's non-standard meta information.
                                properties:
                                    nextCursor:
                                        type: string
                                        example: eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJOZXdQZXQuanNvbiJ9
                                        description: The pointer to the next record in the set of paginated results.
                            files:
                                type: array
                                description: The schema's files.
                                items:
                                    type: object
                                    title: Schema File Base Data
                                    description: Information about the schema file.
                                    properties:
                                        id:
                                            type: string
                                            example: e8a015e0-f472-4bb3-a523-57ce7c4583ed
                                            description: The schema file's ID.
                                        name:
                                            type: string
                                            example: error.yaml
                                            description: The schema file's name.
                                        path:
                                            type: string
                                            example: data-model/error.yaml
                                            description: The file system path to the schema file.
                                        createdAt:
                                            type: string
                                            format: date-time
                                            example: "2022-03-29T11:37:15Z"
                                            description: The date and time at which the file was created.
                                        createdBy:
                                            type: number
                                            format: int64
                                            example: 2345
                                            description: The user Id of the user that created the file.
                                        updatedAt:
                                            type: string
                                            format: date-time
                                            example: "2022-03-29T11:37:15Z"
                                            description: The date and time at which the file was last updated.
                                        updatedBy:
                                            type: number
                                            format: int64
                                            example: 2345
                                            description: The user ID of the user that last updated the file.
                    examples:
                        Successful Response:
                            value:
                                meta:
                                    nextCursor: eyJzY2hlbWUiOiJwYXRoX2FzYyIsImRpcmVjdGlvblR5cGUiOiJuZXh0IiwicGl2b3QiOiJwYXRoIiwidmFsdWUiOiJOZXdQZXQuanNvbiJ9
                                files:
                                    - id: e8a015e0-f472-4bb3-a523-57ce7c4583ed
                                      path: data-model/error.yaml
                                      name: error.yaml
                                      createdAt: "2022-03-29T11:37:15Z"
                                      updatedAt: "2022-03-29T11:37:15Z"
                                      createdBy: 2345
                                      updatedBy: 2345
                                    - id: e8a015e0-f472-4bb3-a523-57ce7c4583ef
                                      path: data-model/error2.yaml
                                      name: error2.yaml
                                      createdAt: "2022-03-29T11:37:15Z"
                                      updatedAt: "2022-03-29T11:37:15Z"
                                      createdBy: 2345
                                      updatedBy: 2345
        getStatusOfAnAsyncTask:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            id:
                                type: string
                                format: uuid
                                example: 10ca9f5a-c4c4-11ed-afa1-0242ac120002
                                description: The task's ID.
                            meta:
                                type: object
                                description: The response's non-standard meta information.
                                properties:
                                    url:
                                        type: string
                                        format: url
                                        example: https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39/sync
                                        description: The endpoint URL that created the task.
                                    model:
                                        enum:
                                            - collection
                                            - api-version
                                        type: string
                                        example: collection
                                        description: The model for which the task is performing the operation.
                                    action:
                                        enum:
                                            - update
                                            - create
                                        type: string
                                        example: update
                                        description: The task's action.
                            status:
                                description: The task's current status.
                                enum:
                                    - pending
                                    - failed
                                    - completed
                                type: string
                                example: completed
                            details:
                                oneOf:
                                    - type: object
                                      title: Task Resources
                                      description: Information about the task's resources.
                                      properties:
                                        resources:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    id:
                                                        type: string
                                                        example: collectionID
                                                        description: The ID of the assigned resource.
                                                    url:
                                                        type: string
                                                        example: https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39
                                                        description: The task's assigned resource URL.
                                      example:
                                        resources:
                                            - id: collectionID
                                              url: "/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39"
                                    - type: object
                                      title: Task Error Information
                                      description: Information about the error that occurred during the task's processing.
                                      properties:
                                        error:
                                            type: object
                                            properties:
                                                message:
                                                    type: string
                                                    example: The API contains invalid schema
                                                    description: The task's error message.
                                      example:
                                        error:
                                            message: The API contains invalid schema
                                example:
                                    resources:
                                        - id: collectionID
                                          url: "/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39"
                                discriminator:
                                    mapping:
                                        failed: "#/components/schemas/taskError"
                                        pending: ""
                                        completed: "#/components/schemas/taskResource"
                                    propertyName: status
                            createdAt:
                                type: string
                                format: date-time
                                example: "2023-08-22T14:21:57.000Z"
                                description: The date and time at which the task was created.
                            updatedAt:
                                type: string
                                format: date-time
                                example: "2023-08-22T14:21:57.000Z"
                                description: The date and time at which the task was last updated.
                    examples:
                        Failed Status:
                            value:
                                id: 66ae9950-0869-4e65-96b0-1e0e47e771af
                                meta:
                                    url: https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39/sync
                                    model: collection
                                    action: update
                                status: failed
                                details:
                                    error:
                                        message: The API contains invalid schema
                                createdAt: "2019-02-12 19:34:49"
                                updatedAt: "2023-02-12 19:34:49"
                        Pending Status:
                            value:
                                id: 66ae9950-0869-4e65-96b0-1e0e47e771af
                                meta:
                                    url: https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39/sync
                                    model: collection
                                    action: update
                                status: pending
                                createdAt: "2023-02-12 19:34:49"
                                updatedAt: "2023-02-12 19:34:49"
                        Completed Status:
                            value:
                                id: 66ae9950-0869-4e65-96b0-1e0e47e771af
                                meta:
                                    url: https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39/sync
                                    model: collection
                                    action: update
                                status: completed
                                details:
                                    resources:
                                        - id: collectionID
                                          url: "/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39"
                                createdAt: "2023-02-12 19:34:49"
                                updatedAt: "2023-02-12 19:34:49"
        getVersion:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        title: API Version Data Schema
                        properties:
                            id:
                                type: string
                                format: uuid
                                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                description: The version's ID.
                            name:
                                type: string
                                example: Release 1.0
                                description: The version's name.
                            createdAt:
                                type: string
                                format: date-time
                                example: "2023-06-09T14:48:45.000Z"
                                description: The date and time at which the version was created.
                            updatedAt:
                                type: string
                                format: date-time
                                example: "2023-06-09T14:48:45.000Z"
                                description: The date and time at which the version was last updated.
                            releaseNotes:
                                type: string
                                example: This is the first release.
                                description: The version's release notes.
                        description: Information about the API version.
                    examples:
                        Successful Response:
                            value:
                                version:
                                    createdAt: "2022-06-09T14:48:45.000Z"
                                    updatedAt: "2022-06-09T19:50:49.000Z"
                                    id: 3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2
                                    name: Release 1.0
                                    releaseNotes: This is the first release.
                                    schemas:
                                        - id: C1
                                          type: openapi3
                                    collections:
                                        - id: C1
                                          name: collection1
                                        - id: C2
                                          name: collection2
                        Successful Response for API Viewers:
                            value:
                                version:
                                    createdAt: "2022-06-09T14:48:45.000Z"
                                    updatedAt: "2022-06-09T19:50:49.000Z"
                                    id: 3563baaa-07a2-46ed-9fd2-0e8a3c5f7ec2
                                    name: Release 1.0
                                    releaseNotes: This is the first release.
                                    schemas:
                                        - id: C1
                                          type: openapi:3
                                    collections:
                                        - id: C1
                                          name: collection1
                                        - id: C2
                                          name: collection2
        gitLinkedApiError:
            description: Git-Linked API Errror
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: actionNotAllowedError
                                description: The error type.
                            title:
                                type: string
                                example: Action not allowed
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: This action is not allowed for git linked APIs
                                description: Details about the error.
                    example:
                        type: actionNotAllowedError
                        title: Action not allowed
                        detail: This action is not allowed for git linked APIs
        inconsistentApiState:
            description: API State Inconsistent
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: APIStateInconsistent
                                description: The error type.
                            title:
                                type: string
                                example: API state seems to be inconsistent.
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example:
                                    Please perform a Git push from the Postman app to sync state
                                    between app and repository.
                                description: Details about the error.
                    example:
                        type: APIStateInconsistent
                        title: API state seems to be inconsistent.
                        detail:
                            Please perform a Git push from the Postman app to sync state between
                            app and repository.
        instanceNotFoundApi:
            description: Instance Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: We could not find the API you are looking for
                    example:
                        error:
                            name: instanceNotFoundError
                            message: We could not find the API you are looking for
        instanceNotFoundDatabase:
            description: Instance Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: Instance not found in the database.
                    example:
                        error:
                            name: instanceNotFoundError
                            message: Instance not found in the database.
        instanceNotFoundElementFolder:
            description: Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: The specified API does not exist.
                    examples:
                        Not Found:
                            value:
                                error:
                                    name: instanceNotFoundError
                                    message: The specified API does not exist.
                        Folder Not Found:
                            value:
                                name: instanceNotFoundError
                                message: Instance not found for the model Folder, id 1
        instanceNotFoundEnvironment:
            description: Instance Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: We could not find the environment you are looking for
                    example:
                        error:
                            name: instanceNotFoundError
                            message: We could not find the environment you are looking for
        instanceNotFoundCollection:
            description: Instance Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: The specified item does not exist.
                                    details:
                                        type: object
                                        description: Information about the error.
                                        properties:
                                            item:
                                                type: string
                                                description: The instance item.
                                                example: collection
                                            id:
                                                type: string
                                                format: uuid
                                                description: The collection ID.
                                                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                    example:
                        error:
                            name: instanceNotFoundError
                            message: The specified item does not exist.
                            details:
                                item: collection
                                id: 12ece9e1-2abf-4edc-8e34-de66e74114d2
        instanceNotFoundMock:
            description: Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: The specified mock does not exist.
                                    details:
                                        type: array
                                        description: Information about the error.
                                        items:
                                            type: string
                                        example: {}
                    example:
                        error:
                            name: instanceNotFoundError
                            message: The specified mock does not exist.
                            details: {}
        instanceNotFoundMonitor:
            description: Instance Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: The specified monitor does not exist.
                    example:
                        error:
                            name: instanceNotFoundError
                            message: The specified monitor does not exist.
        instanceNotFoundWorkspace:
            description: Instance Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: instanceNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: The specified workspace does not exist.
                    example:
                        error:
                            name: instanceNotFoundError
                            message: The specified workspace does not exist.
        internalServerError:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: serverError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: An error has occurred on the server.
                    example:
                        error:
                            name: serverError
                            message: An error has occurred on the server.
        invalidParamsError:
            description: Invalid Parameters
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: invalidParamsError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: The specified parameter is in an invalid format
        invalidNetworkElementRequest:
            description: Bad Request
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            name:
                                type: string
                                description: The error name.
                                enum:
                                    - RequestNotFound
                                    - invalidParamsError
                                    - requestEntityAlreadyPublished
                                    - requestAlreadyResponded
                                example: invalidParamsError
                            message:
                                type: string
                                description: The error message.
                                example: Status type can only be denied or approved.
                    example:
                        name: invalidParamsError
                        message: Status type can only be denied or approved.
        invalidQueryParamsInGetAllElementRequests:
            description: Bad Request
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            name:
                                type: string
                                description: The error name.
                                example: invalidParamsError
                            message:
                                type: string
                                description: The error message.
                                example: The specified request does not exist.
                    example:
                        name: invalidParamsError
                        message: The specified request does not exist.
        mockServerResponse:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: array
                        description: Information about the mock server's responses.
                        items:
                            type: object
                            description: Information about the server response.
                            properties:
                                id:
                                    type: string
                                    format: uuid
                                    description: The server response's ID.
                                    example: 965cdd16-fe22-4d96-a161-3d05490ac421
                                name:
                                    type: string
                                    description: The server response's name.
                                    example: Internal Server Error
                                statusCode:
                                    type: number
                                    description: The server response's 5xx HTTP response code.
                                    example: 500
                                createdAt:
                                    type: string
                                    format: date-time
                                    description: The date and time at which the server response was created.
                                    example: "2022-08-02T14:57:44.000Z"
                                updatedAt:
                                    type: string
                                    format: date-time
                                    description: The date and time at which the server response was last updated.
                                    example: "2022-08-02T14:57:44.000Z"
                                createdBy:
                                    type: string
                                    description: The user ID of the user who created the server response.
                                    example: "12345678"
                                updatedBy:
                                    type: string
                                    description: The user ID of the user who last updated the server response.
                                    example: "12345678"
                    example:
                        createdAt: "2022-08-02T15:08:03.000Z"
                        updatedAt: "2022-08-02T15:08:03.000Z"
                        id: 965cdd16-fe22-4d96-a161-3d05490ac421
                        name: Internal Server Error
                        statusCode: 500
                        headers:
                            - key: Content-Type
                              value: application/json
                        language: json
                        body: "{\n    \"message\": \"Something went wrong; try again later.\"\n}"
                        createdBy: "12345678"
                        updatedBy: "12345678"
                        mock: 32cd624d-9986-4f20-9048-89252f722269
        PANElementCreated:
            description: Created
            content:
                application/json:
                    schema:
                        type: object
                        description: Information about the Private API Network element.
                        properties:
                            addedAt:
                                type: string
                                format: date-time
                                description: The date and time at which the element was added.
                                example: "2022-06-09T14:48:45.000Z"
                            addedBy:
                                type: integer
                                description: The user who added the element.
                                example: 12345678
                            createdBy:
                                type: integer
                                description: The user who created the element.
                                example: 12345678
                            createdAt:
                                type: string
                                format: date-time
                                description: The date and time at which the element was created.
                                example: "2021-10-11T09:39:33.000Z"
                            updatedBy:
                                type: integer
                                description: The user who last updated the element.
                                example: 12345678
                            updatedAt:
                                type: string
                                format: date-time
                                description: The date and time at which the element was last updated.
                                example: "2022-12-07T17:54:33.000Z"
                            type:
                                type: string
                                description: The element's type.
                                example: api
                            id:
                                type: string
                                description: The element's ID or UID.
                                example: 5360b75f-447e-467c-9299-12fd6c92450d
                            name:
                                type: string
                                description: The element's name.
                                example: Billing API
                            summary:
                                type: string
                                description: The element's summary.
                                example: The payments and account services API.
                            description:
                                type: string
                                description: The element's description.
                                example: ~
                            href:
                                type: string
                                format: url
                                description: The element's Postman HREF.
                                example: https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                            environments:
                                type: array
                                description: A list of the collection's environments.
                                items:
                                    type: string
                                    description: The environment's ID.
                                    example: 120403-c6cf0fe2-c637-4d30-a640-ed64ec6d0ddb
                            parentFolderId:
                                type: integer
                                description: The parent folder ID.
                                example: 1
        PANFolderCreated:
            description: Created
            content:
                application/json:
                    schema:
                        type: object
                        description: Information about the Private API Network folder.
                        properties:
                            id:
                                type: integer
                                description: The folder's ID.
                                example: 1
                            parentFolderId:
                                type: integer
                                description: The parent folder ID.
                                example: 0
                            updatedAt:
                                type: string
                                format: date-time
                                description: The date and time at which the folder was updated.
                                example: "2022-12-07T18:00:39.000Z"
                            updatedBy:
                                type: integer
                                description: The user who updated the folder.
                                example: 12345678
                            createdBy:
                                type: integer
                                description: The user who created the element.
                                example: 12345678
                            createdAt:
                                type: string
                                format: date-time
                                description: The date and time at which the element was created.
                                example: "2022-12-07T18:00:39.000Z"
                            name:
                                type: string
                                description: The folder's name.
                                example: Billing
                            description:
                                type: string
                                description: The element's description.
                                example: The Billing API.
                            type:
                                type: string
                                description: The folder's type. This is always the `folder` value.
                                example: folder
        postPANElementOrFolder:
            description: Created
            content:
                application/json:
                    schema:
                        oneOf:
                            - $ref: "#/components/schemas/PANElementCreated"
                            - $ref: "#/components/schemas/PANFolderCreated"
                    examples:
                        Add an API:
                            value:
                                addedAt: "2022-06-09T14:48:45.000Z"
                                addedBy: 12345678
                                createdBy: 12345678
                                createdAt: "2021-10-11T09:39:33.000Z"
                                updatedBy: 12345678
                                updatedAt: "2022-12-07T17:54:33.000Z"
                                type: api
                                id: 5360b75f-447e-467c-9299-12fd6c92450d
                                name: Billing API
                                summary: The payments and account services API.
                                description: ~
                                href: https://api.getpostman.com/apis/fcf87a6d-6d10-4cfa-bed2-0c234ff99f7b
                                parentFolderId: 1
                        Add a Collection:
                            value:
                                addedAt: "2022-12-07T18:22:15.000Z"
                                addedBy: 12345678
                                createdBy: 12345678
                                createdAt: "2022-12-07T18:22:15.000Z"
                                updatedBy: 12345678
                                updatedAt: "2022-12-07T18:22:15.000Z"
                                type: collection
                                id: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                name: Billing API Collection
                                summary: The Billing API collection.
                                description: ~
                                href: https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                parentFolderId: 1
                        Add a Collection with Environments:
                            value:
                                addedAt: '2022-12-07T18:22:15.000Z'
                                addedBy: 12345678
                                createdBy: 12345678
                                createdAt: '2022-12-07T18:22:15.000Z'
                                updatedBy: 12345678
                                updatedAt: '2022-12-07T18:22:15.000Z'
                                type: collection
                                id: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                name: Billing API Collection
                                summary: The Billing API collection.
                                description:
                                href: https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                parentFolderId: 1
                                environments:
                                    - 120403-c6cf0fe2-c637-4d30-a640-ed64ec6d0ddb
                                    - 7084-461d8126-22c8-43ed-b99d-27e8a34d8eef
                        Add a Workspace:
                            value:
                                addedAt: "2022-12-07T17:59:23.000Z"
                                addedBy: 12345678
                                createdBy: 12345678
                                createdAt: "2022-12-07T17:59:23.000Z"
                                updatedBy: 12345678
                                updatedAt: "2022-12-07T17:59:23.000Z"
                                type: workspace
                                id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                name: Billing Team Workspace
                                summary: The Billing team's workspace.
                                description: ~
                                href: https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                parentFolderId: 1
                        Create a Folder:
                            value:
                                id: 1
                                parentFolderId: 0
                                updatedAt: "2022-12-07T18:00:39.000Z"
                                updatedBy: 12345678
                                createdBy: 12345678
                                createdAt: "2022-12-07T18:00:39.000Z"
                                name: Billing
                                description: The Billing API.
                                type: folder
        paramMissingError:
            description: Parameter Missing
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: paramMissingError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: Parameter is missing in the request.
        putPANElementOrFolder:
            description: Successful Response
            content:
                application/json:
                    schema:
                        oneOf:
                            - $ref: "#/components/schemas/PANElementCreated"
                            - $ref: "#/components/schemas/PANFolderCreated"
                    examples:
                        Update API:
                            value:
                                addedAt: "2022-06-09T14:48:45.000Z"
                                addedBy: 12345678
                                createdBy: 12345678
                                createdAt: "2021-10-11T09:39:33.000Z"
                                updatedBy: 12345678
                                updatedAt: "2022-12-07T17:54:33.000Z"
                                type: api
                                id: 5360b75f-447e-467c-9299-12fd6c92450d
                                name: Billing API
                                summary: The payments and account services API.
                                description: ~
                                href: https://api.getpostman.com/apis/fcf87a6d-6d10-4cfa-bed2-0c234ff99f7b
                                parentFolderId: 1
                        Update Collection:
                            value:
                                addedAt: "2022-12-07T18:22:15.000Z"
                                addedBy: 12345678
                                createdBy: 12345678
                                createdAt: "2022-12-07T18:22:15.000Z"
                                updatedBy: 12345678
                                updatedAt: "2022-12-07T18:22:15.000Z"
                                type: collection
                                id: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                name: Billing API Collection
                                summary: The Billing API collection.
                                description: ~
                                href: https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                parentFolderId: 1
                        Update a Collection's Environments:
                            value:
                                addedAt: '2022-12-07T18:22:15.000Z'
                                addedBy: 12345678
                                createdBy: 12345678
                                createdAt: '2022-12-07T18:22:15.000Z'
                                updatedBy: 12345678
                                updatedAt: '2022-12-07T18:22:15.000Z'
                                type: collection
                                id: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                name: Billing API Collection
                                summary: The Billing API collection.
                                description:
                                href: https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                parentFolderId: 1
                                environments:
                                    - 660a6sa-c8sa37-46ca-9sa1d8-7e8c669d1
                                    - 02466-c837-46ca-9sa1d8-7e669d1
                        Update Workspace:
                            value:
                                addedAt: "2022-12-07T17:59:23.000Z"
                                addedBy: 12345678
                                createdBy: 12345678
                                createdAt: "2022-12-07T17:59:23.000Z"
                                updatedBy: 12345678
                                updatedAt: "2022-12-07T17:59:23.000Z"
                                type: workspace
                                id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                name: Billing Team Workspace
                                summary: The Billing team's workspace.
                                description: ~
                                href: https://api.getpostman.com/workspaces/1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                parentFolderId: 1
                        Update Folder:
                            value:
                                id: 1
                                parentFolderId: 0
                                updatedAt: "2022-12-07T20:27:06.000Z"
                                updatedBy: 12345678
                                createdBy: 12345678
                                createdAt: "2022-12-07T17:04:23.000Z"
                                name: Billing
                                description: The Billing API.
                                type: folder
        rateLimited:
            description: Too Many Requests
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: string
                                description: The error name.
                                example: rateLimited
                            message:
                                type: string
                                description: The error message.
                                example: Rate limit exceeded. Please retry after 1669048687
                    example:
                        error: rateLimited
                        message: Rate limit exceeded. Please retry after 1669048687
        respondPANElementAddRequest:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            request:
                                type: array
                                description: Information about the Private API Network request.
                                items:
                                    type: object
                                    properties:
                                        id:
                                            type: integer
                                            description: The request's ID.
                                            example: 2
                                        createdAt:
                                            type: string
                                            format: date-time
                                            description: The date and time at which the request was created.
                                            example: "2022-06-09T14:48:45.000Z"
                                        createdBy:
                                            type: integer
                                            description: The ID of the user who created the request.
                                            example: 12345678
                                        message:
                                            type: string
                                            description: The user's optional message included in the request.
                                            example: Please add this element to the network
                                        response:
                                            description: Information about the response to the element's request. This object only returns when the network manager denied a request with a message.
                                            type: object
                                            properties:
                                                createdAt:
                                                    type: string
                                                    format: date-time
                                                    description: The date and time at which the network manager denied the request.
                                                    example: "2020-06-01T08:32:31.000Z"
                                                createdBy:
                                                    type: integer
                                                    description: The network manager's user ID.
                                                    example: 2272
                                                message:
                                                    type: string
                                                    description: The network manager's request response message.
                                                    example: Please fix the API issues first
                                        element:
                                            description: Information about the requested element.
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                    description: The element's UUID.
                                                    format: uuid
                                                    example: 5360b75f-447e-467c-9299-12fd3c92450d
                                                createdAt:
                                                    type: string
                                                    description: The date and time at which the element was approved and added to the Private API Network.
                                                    format: date-time
                                                    example: "2022-09-28T13:48:09.000Z"
                                                createdBy:
                                                    description: The user ID of the user who requested to add the element to the Private API Network.
                                                    type: integer
                                                    example: 12345678
                                                type:
                                                    type: string
                                                    description: The element type.
                                                    enum:
                                                        - api
                                                        - workspace
                                                        - collection
                                                    example: api
                                                name:
                                                    type: string
                                                    description: The element's name.
                                                    example: Test api
                                                summary:
                                                    type: string
                                                    description: The element's short summary.
                                                    example: This is a test API
                                        status:
                                            type: string
                                            description: The request's status.
                                            enum:
                                                - approved
                                                - denied
                                            example: denied
                    examples:
                        Request Approved:
                            value:
                                request:
                                    - id: 1
                                      createdAt: "2022-06-09T14:48:45.000Z"
                                      createdBy: 12345678
                                      message: Please add this to the network
                                      status: approved
                                      element:
                                          createdAt: "2022-06-09T14:48:45.000Z"
                                          createdBy: 2272
                                          type: api
                                          id: 5360b75f-447e-467c-9299-12fd3c92450d
                                          name: Test api
                                          summary: This is a test API
                        Request Denied:
                            value:
                                request:
                                    - id: 2
                                      createdAt: "2022-06-09T14:48:45.000Z"
                                      createdBy: 12345678
                                      message: Please add this to the network
                                      status: denied
                                      element:
                                          type: api
                                          id: 5360b75f-447e-467c-9299-12fd3c92450d
                                          name: Test api
                                          summary: This is a test API
                                      response:
                                          createdAt: "2022-06-09T14:48:45.000Z"
                                          createdBy: 2272
                                          message: Please fix the API issues first
        schemaInstanceNotFoundError:
            description: Schema Not Found
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: instanceNotFoundError
                                description: The type of error.
                            title:
                                type: string
                                example: Schema not found
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: We could not find a schema linked to this API
                                description: Details about the error message.
                    example:
                        type: instanceNotFoundError
                        title: Schema not found
                        detail: We could not find a schema linked to this API
        schemaInvalidParamsError:
            description: Schema Already Exists
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: invalidParamsError
                                description: The type of error.
                            title:
                                type: string
                                example: Could not create the resource
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: Schema already exists for this API
                                description: Details about the error message.
                    example:
                        type: invalidParamsError
                        title: Could not create the resource
                        detail: Schema already exists for this API
        schemaNotFound:
            description: Schema Not Found
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: instanceNotFoundError
                                description: The type of error.
                            title:
                                type: string
                                example: Resource not found
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: We could not find the resource you are looking for
                                description: Details about the error message.
                    example:
                        type: instanceNotFoundError
                        title: Resource not found
                        detail: We could not find the resource you are looking for
        schemaNotLinked:
            description: Schema Not Linked to API
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: invalidParamError
                                description: The error type.
                            title:
                                type: string
                                example: Invalid param error
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: Schema is not linked to the API
                                description: Details about the error.
                    example:
                        type: invalidParamError
                        title: Invalid param error
                        detail: Schema is not linked to the API
        scimBadRequest:
            description: Bad Request
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: This Postman team doesn't exist anymore.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "400"
                    examples:
                        Invalid Team:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: This Postman team doesn't exist anymore.
                                status: "400"
        scimInternalErrorGroup:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: Couldn't fetch members of the team.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "500"
                    example:
                        schemas:
                            - urn:ietf:params:scim:api:messages:2.0:Error
                        detail: Couldn't fetch members of the team.
                        status: "500"
        scimInternalErrorGroupUpdate:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: Couldn't update this team member's information. Try again — it should work next time around.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "500"
                    examples:
                        Cannot Get Information:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Unable to fetch information about this team member.
                                status: "500"
                        Cannot Update Group:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Couldn't update this team member's information. Try again — it should work next time around.
                                status: "500"
                        Cannot Add Team Members:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Unable to add members to the team. Try again — it should work next time around.
                                status: "500"
        scimInternalErrorUser:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: Unable to fetch information about this team member.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "500"
                    example:
                        schemas:
                            - urn:ietf:params:scim:api:messages:2.0:Error
                        detail: Unable to fetch information about this team member.
                        status: "500"
        scimInternalErrorUserUpdate:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: Couldn't update this team member's information. Try again — it should work next time around.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "500"
                    examples:
                        Cannot Get Information:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Unable to fetch information about this team member.
                                status: "500"
                        Cannot Update User:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Couldn't update this team member's information. Try again — it should work next time around.
                                status: "500"
                        Cannot Add Team Members:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Unable to add members to the team. Try again — it should work next time around.
                                status: "500"
        scimForbidden:
            description: Forbidden
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "403"
                    examples:
                        Invalid API Key:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: Your API key was generated by a Team Admin who is no longer on your team. Use an API key generated by a Team Admin.
                                status: "403"
                        Admin Team Mismatch:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: The admin is not allowed to perform this action.
                                status: "403"
                        Forbidden:
                            value:
                                schemas:
                                    - urn:ietf:params:scim:api:messages:2.0:Error
                                detail: This person isn't a member of the team.
                                status: "403"
        scimGroupNotFound:
            description: Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: This group isn't a member of the team.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "404"
                    example:
                        schemas:
                            - urn:ietf:params:scim:api:messages:2.0:Error
                        detail: This group isn't a member of the team.
                        status: "404"
        scimGroupResource:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: A list of schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:schemas:core:2.0:Group
                            id:
                                type: string
                                description: The group's SCIM ID.
                                example: "405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
                            userName:
                                type: string
                                description: The group's display name.
                                example: Test-API
                            members:
                                type: object
                                description: Information about the group's members.
                                properties:
                                    value:
                                        type: string
                                        description: ""
                                        example: ""
                                    display:
                                        type: string
                                        description: ""
                                        example: ""
                            externalId:
                                type: string
                                description: The group's external ID.
                                example: "1234"
                            meta:
                                type: object
                                description: The response's non-standard meta information.
                                properties:
                                    resourceType:
                                        type: string
                                        description: The resource type.
                                        example: Group
                                    created:
                                        type: string
                                        format: date-time
                                        description: The date and time at which the group was created.
                                        example: "2022-02-22T04:24:13.000Z"
                                    lastModified:
                                        type: string
                                        format: date-time
                                        description: The date and time at which the group was last modified.
                                        example: "2022-02-22T04:24:13.000Z"
                    example:
                        schemas:
                            - urn:ietf:params:scim:schemas:core:2.0:Group
                        id: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                        displayName: Test-API
                        members:
                            - value: b1c794f24f4c49f4b5d503a4cb2686ea
                              display: SCIM 2 Group A
                        externalId: "1234"
                        meta:
                            resourceType: Group
                            created: "2022-02-22T04:24:13.000Z"
                            lastModified: "2022-02-22T04:24:13.000Z"
        scimTooManyRequests:
            description: Too Many Requests
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: That's 180 attempts in less than a minute. Wait for a minute and then try again.
                            status:
                                type: number
                                description: The HTTP status code.
                                example: 429
                    example:
                        schemas:
                            - urn:ietf:params:scim:api:messages:2.0:Error
                        detail: That's 180 attempts in less than a minute. Wait for a minute and then try again.
                        status: 429
        scimUserNotFound:
            description: Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: This person isn't a member of the team.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "404"
                    example:
                        schemas:
                            - urn:ietf:params:scim:api:messages:2.0:Error
                        detail: This person isn't a member of the team.
                        status: "404"
        scimUnauthorized:
            description: Unauthorized
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: The SCIM schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:api:messages:2.0:Error
                            detail:
                                type: string
                                description: Information about the error.
                                example: Unable to access the team. Check if you have entered a valid API key.
                            status:
                                type: string
                                description: The HTTP status code.
                                example: "401"
                    example:
                        schemas:
                            - urn:ietf:params:scim:api:messages:2.0:Error
                        detail: Unable to access the team. Check if you have entered a valid API key.
                        status: "401"
        scimUserResource:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            schemas:
                                type: array
                                description: A list of schema resource URIs.
                                items:
                                    type: string
                                    example: urn:ietf:params:scim:schemas:core:2.0:User
                            id:
                                type: string
                                description: The team member's SCIM ID.
                                example: "405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
                            userName:
                                type: string
                                description: The team member's SCIM username.
                                example: taylor.lee@example.com
                            name:
                                type: object
                                description: Information about the Postman team member.
                                properties:
                                    givenName:
                                        type: string
                                        description: The team member's first name.
                                        example: Taylor
                                    familyName:
                                        type: string
                                        description: The team member's last name.
                                        example: Lee
                            externalId:
                                type: string
                                description: The team member's external ID.
                                example: "12345678"
                            active:
                                type: boolean
                                description: If true, the team member is active.
                                example: true
                            meta:
                                type: object
                                description: The response's non-standard meta information.
                                properties:
                                    resourceType:
                                        type: string
                                        description: The resource type.
                                        example: User
                                    created:
                                        type: string
                                        format: date-time
                                        description: The date and time at which the team member was created.
                                        example: "2021-02-22T04:24:13.000Z"
                                    lastModified:
                                        type: string
                                        format: date-time
                                        description: The date and time at which the team member was last modified.
                                        example: "2021-02-22T04:24:13.000Z"
                    example:
                        schemas:
                            - urn:ietf:params:scim:schemas:core:2.0:User
                        id: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
                        userName: taylor.lee@example.com
                        name:
                            givenName: Taylor
                            familyName: Lee
                        externalId: "12345678"
                        active: true
                        meta:
                            resourceType: User
                            created: "2021-02-22T04:24:13.000Z"
                            lastModified: "2021-02-22T04:24:13.000Z"
        serverError:
            description: Internal Server Error
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: https://api.postman.com/problems/internal-server-error
                                description: The type of error.
                            title:
                                type: string
                                example: Internal Server Error
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: Internal Server Error
                                description: Details about the error message.
                    example:
                        type: https://api.postman.com/problems/internal-server-error
                        title: Internal Server Error
                        detail: Internal Server Error
        serverResponseNotFoundError:
            description: Bad Request
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error name.
                                        example: serverResponseNotFoundError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: We could not find the mock server response you are looking for.
                    example:
                        error:
                            name: serverResponseNotFoundError
                            message: We could not find the mock server response you are looking for.
        syncCollectionWithSchema:
            description: Accepted
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            taskId:
                                type: string
                                format: uuid
                                example: 66ae9950-0869-4e65-96b0-1e0e47e771af
                                description:
                                    The created task ID. You can use this ID to track the
                                    status of syncing an API collection with an API schema.
                    examples:
                        Successful Response:
                            value:
                                taskId: 66ae9950-0869-4e65-96b0-1e0e47e771af
            headers:
                Location:
                    $ref: "#/components/headers/Location"
        taskNotFound:
            description: Task Not Found
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: invalidParamsError
                                description: The type of error.
                            title:
                                type: string
                                example: The specified parameter is in an invalid format
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: Parameter, taskId is in an invalid format.
                                description: Details about the error message.
                    example:
                        detail: Parameter, taskId is in an invalid format.
                        title: The specified parameter is in an invalid format
                        type: invalidParamsError
        unauthorized:
            description: Unauthorized
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                type: object
                                properties:
                                    name:
                                        type: string
                                        description: The error message.
                                        example: AuthenticationError
                                    message:
                                        type: string
                                        description: The error message.
                                        example: Invalid API Key. Every request requires a valid API Key to be sent.
                    example:
                        error:
                            name: AuthenticationError
                            message: Invalid API Key. Every request requires a valid API Key to be sent.
        unauthorizedApi:
            description: Unauthorized
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: https://api.postman.com/problems/unauthorized
                                description: The error type.
                            title:
                                type: string
                                example: Unauthorized
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example:
                                    An API key must be provided in the request header or query
                                    string
                                description: Details about the error.
                            status:
                                type: number
                                example: 401
                                description: The HTTP status code.
                            instance:
                                type: string
                                example: "/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/%7B%7BrequestId%7D%7D"
                                description: The error instance.
                    example:
                        type: https://api.postman.com/problems/unauthorized
                        title: Unauthorized
                        detail: An API key must be provided in the request header or query string
                        status: 401
                        instance: "/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2/requests/%7B%7BrequestId%7D%7D"
        unprocessableEntity:
            description: Unprocessable Entity
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: https://api.postman.com/problems/unauthorized
                                description: The error type.
                            title:
                                type: string
                                example: unprocessableEntity
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: Cannot perform action on the requested entity
                                description: Details about the error.
                    example:
                        type: unprocessableEntityError
                        title: Unprocessable Entity
                        detail: Cannot perform action on the requested entity
        updateAnApi:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        required:
                            - name
                        properties:
                            id:
                                type: string
                                example: 5360b75f-447e-467c-9299-12fd6c92450d
                                description: The API's ID.
                            name:
                                type: string
                                example: Test API A
                                description: The API's name.
                            summary:
                                type: string
                                example: Test API A Schema
                                description: The API's summary.
                            createdAt:
                                type: string
                                format: date-time
                                example: "2022-06-29T20:46:58.000Z"
                                description: The date and time at which the API was created.
                            createdBy:
                                type: string
                                example: "12345678"
                                description: The user ID of the user that created the API.
                            updatedAt:
                                type: string
                                format: date-time
                                example: "2022-06-29T20:46:58.000Z"
                                description: The date and time at which the API was last updated.
                            updatedBy:
                                type: string
                                example: "12345678"
                                description: The user ID of the user that updated the API.
                            description:
                                type: string
                                example: This is Test API A.
                                description: The API's description. This supports Markdown formatting.
                        description: Information about the API.
                    examples:
                        Successful Response:
                            value:
                                createdAt: "2022-06-29T20:46:58.000Z"
                                updatedAt: "2022-06-29T20:46:58.000Z"
                                id: 5360b75f-447e-467c-9299-12fd6c92450d
                                name: Test API A
                                summary: Test API A Schema
                                description: This is Test API A.
                                createdBy: "12345678"
                                updatedBy: "12345678"
        updateVersion:
            description: Successful Response
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            id:
                                type: string
                                example: 8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2
                                description: The version's ID.
                            name:
                                type: string
                                example: Release 1.5
                                description: The version's name.
                            createdAt:
                                type: string
                                format: date-time
                                example: "2022-06-09T14:48:45.000Z"
                                description: The date and time at which the version was created.
                            updatedAt:
                                type: string
                                format: date-time
                                example: "2022-06-09T19:50:49.000Z"
                                description: The date and time at which the version was last updated.
                            releaseNotes:
                                type: string
                                example: This is the first public release update.
                                description: The version's release notes.
                    examples:
                        Successful Response:
                            value:
                                createdAt: "2022-06-09T14:48:45.000Z"
                                updatedAt: "2022-06-09T19:50:49.000Z"
                                id: 8d7ba74e-2c36-4e36-a263-f3c0c9ae21d2
                                name: Release 1.5
                                releaseNotes: This is the first public release update.
        v9Unsupported:
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: unsupportedEntityError
                                description: The error type.
                            title:
                                type: string
                                example: Unsupported API
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: This endpoint does not support v9 APIs.
                                description: Details about the error.
                    example:
                        type: unsupportedEntityError
                        title: Unsupported API
                        detail: This endpoint does not support v9 APIs.
            description: v9 Unsupported
        versionIdMissing:
            description: Version ID Missing
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: invalidParamError
                                description: The error type.
                            title:
                                type: string
                                example: Invalid request body
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: Missing field 'versionId' in the request body
                                description: Details about the error.
                    example:
                        title: Invalid request body
                        type: invalidParamError
                        detail: Missing field 'versionId' in the request body
        versionStatusPending:
            description: Version in Pending Status Response
            content:
                application/json:
                    schema: {}
            headers:
                Location:
                    $ref: "#/components/headers/Location"
        versionTask:
            description: Successful Response
            content:
                "*/*":
                    schema: {}
                    examples:
                        Success: {}
            headers:
                Location:
                    schema:
                        type: string
                        example: "/apis/6138195-0262634b-cdcb-4a03-a4b9-2b221eccfbaa/tasks/66ae9950-0869-4e65-96b0-1e0e47e771af"
                    description: The URL to get or poll the status of an API version task created.
        workspaceInstanceNotFoundError:
            description: Workspace Not Found
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: instanceNotFoundError
                                description: The type of error.
                            title:
                                type: string
                                example: We could not find the workspace you are looking for
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: We could not find the workspace you are looking for.
                                description: Details about the error message.
                    example:
                        title: We could not find the workspace you are looking for
                        detail: We could not find the workspace you are looking for.
                        type: instanceNotFoundError
        workspaceParamMissingError:
            description: Missing Workspace ID
            content:
                application/problem+json:
                    schema:
                        type: object
                        properties:
                            type:
                                type: string
                                example: paramMissingError
                                description: The type of error.
                            title:
                                type: string
                                example: Parameter is missing in the request.
                                description: The generic description for the error's class.
                            detail:
                                type: string
                                example: Parameter, workspaceId is missing in the request.
                                description: Details about the error message.
                    example:
                        type: paramMissingError
                        title: Parameter is missing in the request.
                        detail: Parameter, workspaceId is missing in the request.
    schemas:
        apiBase:
            description: The API's base data schema.
            type: object
            title: API Base Data Schema
            properties:
                id:
                    type: string
                    format: uuid
                    example: 5360b75f-447e-467c-9299-12fd6c92450d
                    description: The API's ID.
                name:
                    type: string
                    example: User Management API
                    description: The API's name.
                summary:
                    type: string
                    example: An API to manager users.
                    description: The API's short summary.
                createdAt:
                    type: string
                    format: date-time
                    example: "2023-08-22T14:21:57.000Z"
                    description: The date and time at which the API was created.
                createdBy:
                    type: number
                    format: int64
                    example: 12345678
                    description: The Postman ID of the user that created the API.
                updatedAt:
                    type: string
                    format: date-time
                    example: "2023-08-22T14:21:57.000Z"
                    description: The date and time at which the API was updated.
                updatedBy:
                    type: number
                    format: int64
                    example: 12345678
                    description: The Postman ID of the user that updated the API.
                description:
                    type: string
                    example: This API includes operations to add/remove/update users.
                    description: The API's description.
        apiDetails:
            description: Detailed information about the API.
            type: object
            title: API Details
            properties:
                gitInfo:
                    type: object
                    title: Git Repo Data Schema
                    properties:
                        domain:
                            type: string
                            example: https://git.example.com
                            nullable: true
                            description: The domain at which the Git repository is hosted.
                        repository:
                            type: string
                            example: test-api-repo
                            description: The repository's name.
                        organization:
                            type: string
                            example: test-org
                            description: The organization that owns the repository.
                        schemaFolder:
                            type: string
                            example: test-api-schema
                            description: The API definition's repository folder location.
                        collectionFolder:
                            type: string
                            example: test-api-collection
                            description: The API definition's collection repository folder location.
                    description: Information about the API's Git repository integration.
                schemas:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                                format: uuid
                                example: 5381f010-c4c1-11ed-afa1-0242ac120002
                                description: The schema's ID.
                        description: Information about the schema.
                    description: The API's schemas.
                versions:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                                format: uuid
                                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                description: The version's ID.
                            name:
                                type: string
                                example: v1
                                description: The version's name.
                        description: Information about the version.
                    description: The API's versions.
                collections:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                                example: 12345678-61867bcc-c4c1-11ed-afa1-0242ac120002
                                description: The collection's ID.
                        description: Information about the collection.
                    description: The API's collections.
        apiExtended:
            description: The API's extended data schema.
            title: API Extended Data Schema
            type: object
            allOf:
                - type: object
                  title: API Base Data Schema
                  properties:
                      id:
                          type: string
                          format: uuid
                          example: 5360b75f-447e-467c-9299-12fd6c92450d
                          description: The API's ID.
                      name:
                          type: string
                          example: User Management API
                          description: The API's name.
                      summary:
                          type: string
                          example: An API to manager users.
                          description: The API's short summary.
                      createdAt:
                          type: string
                          format: date-time
                          example: "2023-08-22T14:21:57.000Z"
                          description: The date and time at which the API was created.
                      createdBy:
                          type: number
                          format: int64
                          example: 12345678
                          description: The Postman ID of the user that created the API.
                      updatedAt:
                          type: string
                          format: date-time
                          example: "2023-08-22T14:21:57.000Z"
                          description: The date and time at which the API was updated.
                      updatedBy:
                          type: number
                          format: int64
                          example: 12345678
                          description: The Postman ID of the user that updated the API.
                      description:
                          type: string
                          example: This API includes operations to add/remove/update users.
                          description: The API's description.
                  description: The API's base data schema.
                - type: object
                  title: API Details
                  properties:
                      gitInfo:
                          type: object
                          title: Git Repo Data Schema
                          properties:
                              domain:
                                  type: string
                                  example: https://git.example.com
                                  nullable: true
                                  description: The domain at which the Git repository is hosted.
                              repository:
                                  type: string
                                  example: test-api-repo
                                  description: The repository's name.
                              organization:
                                  type: string
                                  example: test-org
                                  description: The organization that owns the repository.
                              schemaFolder:
                                  type: string
                                  example: test-api-schema
                                  description: The API definition's repository folder location.
                              collectionFolder:
                                  type: string
                                  example: test-api-collection
                                  description: The API definition's collection repository folder location.
                          description: Information about the API's Git repository integration.
                      schemas:
                          type: array
                          items:
                              type: object
                              properties:
                                  id:
                                      type: string
                                      format: uuid
                                      example: 5381f010-c4c1-11ed-afa1-0242ac120002
                                      description: The schema's ID.
                              description: Information about the schema.
                          description: The API's schemas.
                      versions:
                          type: array
                          items:
                              type: object
                              properties:
                                  id:
                                      type: string
                                      format: uuid
                                      example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                                      description: The version's ID.
                                  name:
                                      type: string
                                      example: v1
                                      description: The version's name.
                              description: Information about the version.
                          description: The API's versions.
                      collections:
                          type: array
                          items:
                              type: object
                              description: Information about the collection.
                              properties:
                                  id:
                                      type: string
                                      example: 12345678-61867bcc-c4c1-11ed-afa1-0242ac120002
                                      description: The collection's ID.
                          description: The API's collections.
                  description: Detailed information about the API.
        collections:
            type: array
            items:
                type: object
                properties:
                    id:
                        type: string
                        example: 12345678-61867bcc-c4c1-11ed-afa1-0242ac120002
                        description: The collection's ID.
                description: Information about the collection.
            description: The API's collections.
        createApiSchema:
            description: Information about the API schema.
            title: Create API Schema
            type: object
            required:
                - type
                - files
            properties:
                type:
                    description: The schema's type.
                    enum:
                        - proto:2
                        - proto:3
                        - graphql
                        - openapi:3_1
                        - openapi:3
                        - openapi:2
                        - openapi:1
                        - raml:1
                        - raml:0_8
                        - wsdl:2
                        - wsdl:1
                        - asyncapi:2
                    type: string
                    example: openapi:3
                files:
                    type: array
                    description: The list of files that are part of the schema.
                    items:
                        type: object
                        properties:
                            path:
                                type: string
                                example: test-api.yaml
                                description: The schema's file path.
                            root:
                                type: object
                                description: Information about the schema's root file.
                                properties:
                                    enabled:
                                        enum:
                                            - true
                                        type: boolean
                                        example: true
                                        description: If true, tag the file as the root file. The root tag is only allowed for protobuf specifications.
                                example:
                                    enabled: true
                            content:
                                type: string
                                example: "{info: file content}"
                                description: The serilalized content of the schema.
        createAPIVersionGitLinked:
            description: Information about the API version.
            title: Create Version Schema (Git-Linked)
            type: object
            properties:
                name:
                    type: string
                    example: v1
                    description: The version's name.
                branch:
                    type: string
                    example: main
                    description: The branch ID.
                schemas:
                    type: array
                    description: A list of the version's schemas.
                    items:
                        type: object
                        description: Information about the schema.
                        properties:
                            directoryPath:
                                type: string
                                example: postman/schemas
                                description: The path to the root directory where schemas are stored in the Git repository.
                collections:
                    type: array
                    description: A list of the version's collections.
                    items:
                        type: object
                        description: Information about the collection.
                        properties:
                            filePath:
                                type: string
                                example: postman/collection/c1.json
                                description: Path to a collection in the Git repository.
                releaseNotes:
                    type: string
                    example: This is the first release.
                    description: Information about the API version release. For example, changelog notes.
        createAPIVersionNonGitLinked:
            description: Information about the API version.
            title: Create Version Schema (Not Git-Linked)
            type: object
            properties:
                name:
                    type: string
                    example: v1
                    description: The version's name.
                schemas:
                    type: array
                    description: A list of the version's schemas.
                    items:
                        type: object
                        description: Information about the schema.
                        properties:
                            id:
                                type: string
                                example: 5381f010-c4c1-11ed-afa1-0242ac120002
                                description: The schema's ID.
                collections:
                    type: array
                    description: A list of the version's collections.
                    items:
                        type: object
                        description: Information about the collection.
                        properties:
                            id:
                                type: string
                                example: 123456-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                description: The collection's ID.
                releaseNotes:
                    type: string
                    example: This is the first release.
                    description: Information about the API version release. For example, changelog notes.
        createPANApi:
            title: Add API
            type: object
            properties:
                api:
                    type: object
                    required:
                        - id
                        - parentFolderId
                    properties:
                        id:
                            type: string
                            description: The API's ID.
                            example: 5360b75f-447e-467c-9299-12fd6c92450d
                        parentFolderId:
                            type: integer
                            description: The API's parent folder ID.
                            example: 1
        createPANCollection:
            title: Add Collection
            type: object
            properties:
                collection:
                    type: object
                    required:
                        - id
                        - parentFolderId
                    properties:
                        id:
                            type: string
                            description: The collection's ID.
                            example: 5360b75f-447e-467c-9299-12fd6c92450d
                        parentFolderId:
                            type: integer
                            description: The collection's parent folder ID.
                            example: 1
                        summary:
                            type: string
                            description: The collection's summary.
                            example: The Billing API collection.
                        environments:
                            type: array
                            description: A list of environments to add to the collection.
                            items:
                                type: string
                                description: The environment's ID.
                                example: 92133-622c084d-4f48-470b-826e-18af3c65c775
        createPANFolder:
            title: Add Folder
            type: object
            properties:
                folder:
                    type: object
                    required:
                        - name
                    properties:
                        name:
                            type: string
                            description: The folder's name.
                            example: Billing
                        description:
                            type: string
                            description: The folder's description.
                            example: The Billing API.
                        parentFolderId:
                            type: integer
                            default: 0
                            description: The folder's parent folder ID. This value defaults to `0`.
                            example: 0
        createPANWorkspace:
            title: Add Workspace
            type: object
            properties:
                workspace:
                    type: object
                    required:
                        - id
                        - parentFolderId
                    properties:
                        id:
                            type: string
                            description: The workspace's ID.
                            example: 5360b75f-447e-467c-9299-12fd6c92450d
                        parentFolderId:
                            type: integer
                            description: The workspace's parent folder ID.
                            example: 1
        createUpdateApi:
            type: object
            title: Create/Update API
            required:
                - name
            properties:
                name:
                    type: string
                    example: Test API
                    description: The API's name.
                summary:
                    type: string
                    example: Testing API
                    description: The API's short summary.
                description:
                    type: string
                    example: This is a test API.
                    description: The API's description. This supports Markdown formatting.
            description: Information about the API.
        gitInfo:
            description: Information about the API's Git repository integration.
            title: Git Repo Data Schema
            type: object
            properties:
                domain:
                    type: string
                    example: https://git.example.com
                    nullable: true
                    description: The domain at which the Git repository is hosted.
                repository:
                    type: string
                    example: test-api-repo
                    description: The repository's name.
                organization:
                    type: string
                    example: test-org
                    description: The organization that owns the repository.
                schemaFolder:
                    type: string
                    example: test-api-schema
                    description: The API definition's repository folder location.
                collectionFolder:
                    type: string
                    example: test-api-collection
                    description: The API definition's collection repository folder location.
        importExportFile:
            type: object
            required:
                - type
                - input
            properties:
                type:
                    type: string
                    description: The `file` type value.
                    enum:
                        - file
                    example: file
                input:
                    type: string
                    description: A file containing a valid user's export .zip file.
                    format: binary
        jsonSchema:
            type: object
            properties:
                type:
                    type: string
                    description: The OpenAPI definition type.
                    enum:
                        - json
                    example: json
                input:
                    type: object
                    description: An object that contains a valid JSON OpenAPI definition. For more information, read the [OpenAPI documentation](https://swagger.io/docs/specification/basic-structure/).
                options:
                    type: object
                    additionalProperties: true
                    description: An object that contains advanced creation options and their values. You can find a complete list of properties and their values in Postman's [OpenAPI 3.0 to Postman Collection v2.1.0 Converter OPTIONS documentation](https://github.com/postmanlabs/openapi-to-postman/blob/develop/OPTIONS.md). **These properties are case-sensitive.**
        jsonStringified:
            type: object
            properties:
                type:
                    type: string
                    description: The OpenAPI definition type.
                    enum:
                        - json
                    example: json
                input:
                    type: string
                    description: The stringified OpenAPI definition.
                    example: "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Test API\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://locahost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"List all users\",\n        \"operationId\": \"listUser\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"The user's ID.\",\n            \"example\": 1234,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Information about the user.\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses.\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                options:
                    type: object
                    additionalProperties: true
                    description: An object that contains advanced creation options and their values. You can find a complete list of properties and their values in Postman's [OpenAPI 3.0 to Postman Collection v2.1.0 Converter OPTIONS documentation](https://github.com/postmanlabs/openapi-to-postman/blob/develop/OPTIONS.md). **These properties are case-sensitive.**
        meta:
            type: object
            description: The response's meta information for paginated results.
            properties:
                limit:
                    type: number
                    example: 100
                    description: The maximum number of records in the paginated response.
                total:
                    type: number
                    example: 1000
                    description: The number of records that match the defined criteria.
                nextCursor:
                    type: string
                    example: RnJpIEZlYiAyNCAyMDIzIDEzOjI0OjA5IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=
                    description: The Base64-encoded value that points to the next record in the results set.
        PANElementCreated:
            title: Element Created
            description: Information about the Private API Network element.
            type: object
            properties:
                addedAt:
                    type: string
                    format: date-time
                    description: The date and time at which the element was added.
                    example: "2022-06-09T14:48:45.000Z"
                addedBy:
                    type: integer
                    description: The user who added the element.
                    example: 12345678
                createdBy:
                    type: integer
                    description: The user who created the element.
                    example: 12345678
                createdAt:
                    type: string
                    format: date-time
                    description: The date and time at which the element was created.
                    example: "2021-10-11T09:39:33.000Z"
                updatedBy:
                    type: integer
                    description: The user who last updated the element.
                    example: 12345678
                updatedAt:
                    type: string
                    format: date-time
                    description: The date and time at which the element was last updated.
                    example: "2022-12-07T17:54:33.000Z"
                type:
                    type: string
                    description: The element's type.
                    example: api
                id:
                    type: string
                    description: The element's ID or UID.
                    example: 5360b75f-447e-467c-9299-12fd6c92450d
                name:
                    type: string
                    description: The element's name.
                    example: Billing API
                summary:
                    type: string
                    description: The element's summary.
                    example: The payments and account services API.
                description:
                    type: string
                    description: The element's description.
                    example: null
                href:
                    type: string
                    format: url
                    description: The element's Postman URL.
                    example: https://api.getpostman.com/collections/12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                parentFolderId:
                    type: integer
                    description: The parent folder's ID.
                    example: 1
                environments:
                    type: array
                    description: A list of the element's environments.
                    items:
                        type: string
                        description: The environment's ID.
                        example: 120403-c6cf0fe2-c637-4d30-a640-ed64ec6d0ddb
        PANFolderCreated:
            title: Folder Created
            type: object
            description: Information about the Private API Network folder.
            properties:
                id:
                    type: integer
                    description: The folder's ID.
                    example: 1
                parentFolderId:
                    type: integer
                    description: The parent folder ID.
                    example: 0
                updatedAt:
                    type: string
                    format: date-time
                    description: The date and time at which the folder was updated.
                    example: "2022-12-07T18:00:39.000Z"
                updatedBy:
                    type: integer
                    description: The user who updated the folder.
                    example: 12345678
                createdBy:
                    type: integer
                    description: The user who created the folder.
                    example: 12345678
                createdAt:
                    type: string
                    format: date-time
                    description: The date and time at which the element was created.
                    example: "2022-12-07T18:00:39.000Z"
                name:
                    type: string
                    description: The folder's name.
                    example: Billing
                description:
                    type: string
                    description: The folder's description.
                    example: The Billing API.
                type:
                    type: string
                    description: The folder's type. This is always the `folder` value.
                    example: folder
        scimGroupResource:
            description: The SCIM group resource object.
            type: object
            properties:
                schemas:
                    type: array
                    description: A list of schema resource URIs.
                    items:
                        type: string
                        example: urn:ietf:params:scim:schemas:core:2.0:Group
                id:
                    type: string
                    description: The group's SCIM ID.
                    example: "405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
                displayName:
                    type: string
                    description: The group's display name.
                    example: Test SCIMv2
                members:
                    type: object
                    description: Information about the group's members.
                    properties:
                        value:
                            type: string
                            description: ""
                            example: ""
                        display:
                            type: string
                            description: ""
                            example: ""
                externalId:
                    type: string
                    description: The group's external ID.
                    example: "1234"
                meta:
                    type: object
                    description: The response's non-standard meta information.
                    properties:
                        resourceType:
                            type: string
                            description: The resource type.
                            example: Group
                        created:
                            type: string
                            format: date-time
                            description: The date and time at which the group was created.
                            example: "2022-02-22T04:24:13.000Z"
                        lastModified:
                            type: string
                            format: date-time
                            description: The date and time at which the group was last modified.
                            example: "2022-02-22T04:24:13.000Z"
        scimUserResource:
            description: The SCIM user resource object.
            type: object
            properties:
                schemas:
                    type: array
                    description: A list of schema resource URIs.
                    items:
                        type: string
                        example: urn:ietf:params:scim:schemas:core:2.0:User
                id:
                    type: string
                    description: The team member's SCIM ID.
                    example: "405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99"
                userName:
                    type: string
                    description: The team member's SCIM username.
                    example: taylor.lee@example.com
                name:
                    type: object
                    description: Information about the Postman team member.
                    properties:
                        givenName:
                            type: string
                            description: The team member's first name.
                            example: Taylor
                        familyName:
                            type: string
                            description: The team member's last name.
                            example: Lee
                externalId:
                    type: string
                    description: The team member's external ID.
                    example: "12345678"
                active:
                    type: boolean
                    description: If true, the team member is active.
                    example: true
                meta:
                    type: object
                    description: The response's non-standard meta information.
                    properties:
                        resourceType:
                            type: string
                            description: The resource type.
                            example: User
                        created:
                            type: string
                            format: date-time
                            description: The date and time at which the team member was created.
                            example: "2021-02-22T04:24:13.000Z"
                        lastModified:
                            type: string
                            format: date-time
                            description: The date and time at which the team member was last modified.
                            example: "2021-02-22T04:24:13.000Z"
        schemas:
            type: array
            description: The API's schemas.
            items:
                type: object
                description: Information about the schema.
                properties:
                    id:
                        type: string
                        format: uuid
                        example: 5381f010-c4c1-11ed-afa1-0242ac120002
                        description: The schema's ID.
        schemaFileBase:
            description: Information about the schema file.
            title: Schema File Base Data
            type: object
            properties:
                id:
                    type: string
                    example: ae2b9ab2-28f2-401d-912f-eca09a78e98b
                    description: The schema file's ID.
                name:
                    type: string
                    example: index.json
                    description: The schema file's name.
                path:
                    type: string
                    example: Test.json
                    description: The file system path to the schema file.
                createdAt:
                    type: string
                    format: date-time
                    example: "2023-03-29T11:37:15Z"
                    description: The date and time at which the file was created.
                createdBy:
                    type: string
                    example: "12345678"
                    description: The user Id of the user that created the file.
                updatedAt:
                    type: string
                    format: date-time
                    example: "2023-03-29T11:37:15Z"
                    description: The date and time at which the file was last updated.
                updatedBy:
                    type: string
                    example: "12345678"
                    description: The user ID of the user that last updated the file.
        schemaFileContents:
            description: Information about the schema file.
            title: Schema File Contents
            type: object
            properties:
                id:
                    type: string
                    example: "0784657a-668d-4530-85c8-468becdb06fd"
                    description: The schema file's ID.
                name:
                    type: string
                    example: index.json
                    description: The schema file's name.
                path:
                    type: string
                    example: common/Test.json
                    description: The file system path to the schema file.
                content:
                    type: string
                    example: |-
                        {
                         "type": "object",
                         "required": [
                         "code",
                         "message"
                         ],
                         "properties": {
                         "code": {
                         "type": "integer",
                         "format": "int32"
                         },
                         "message": {
                         "type": "string"
                         }
                         }
                        }
                    description: The schema file's content.
                createdAt:
                    type: string
                    format: date-time
                    example: "2023-03-15T13:27:45.000Z"
                    description: The date and time at which the file was created.
                createdBy:
                    type: string
                    example: "12345678"
                    description: The user Id of the user that created the file.
                updatedAt:
                    type: string
                    format: date-time
                    example: "2023-03-15T13:27:45.000Z"
                    description: The date and time at which the file was last updated.
                updatedBy:
                    type: string
                    example: "12345678"
                    description: The user ID of the user that last updated the file.
        taskError:
            description: Information about the error that occurred during the task's processing.
            title: Task Error Information
            type: object
            example:
                error:
                    message: The API contains invalid schema
            properties:
                error:
                    type: object
                    properties:
                        message:
                            type: string
                            example: The API contains invalid schema
                            description: The task's error message.
        taskResource:
            description: Information about the task's resources.
            title: Task Resources
            type: object
            example:
                resources:
                    - id: collectionID
                      url: "/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39"
            properties:
                resources:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                                format: uuid
                                example: 10ca9f5a-c4c4-11ed-afa1-0242ac120002
                                description: The task's ID.
                            url:
                                type: string
                                example: https://api.getpostman.com/apis/5360b75f-447e-467c-9299-12fd6c92450d/collections/e726de58-f1b3-4edd-a8a7-2579dc799d39
                                description: The task's assigned resource URL.
        updatePANApi:
            title: Update API
            type: object
            properties:
                api:
                    type: object
                    properties:
                        parentFolderId:
                            type: integer
                            description: The API's new parent folder ID.
                            example: 1
        updatePANCollection:
            title: Update Collection
            type: object
            properties:
                collection:
                    type: object
                    properties:
                        parentFolderId:
                            type: integer
                            description: The collection's new parent folder ID.
                            example: 1
                        summary:
                            type: string
                            description: The collection's updated summary.
                            example: The Billing API collection.
                        environments:
                            type: object
                            description: The collection's updated environments.
                            properties:
                                $add:
                                    type: array
                                    items:
                                        type: string
                                        description: The ID of environment to add to the collection.
                                        example: 92133-622c084d-4f48-470b-826e-18af3c65c775
                                $remove:
                                    type: array
                                    items:
                                        type: string
                                        description: The ID of environment to remove from the collection.
                                        example: 92637-612c7311-4557-470b-826e-18af35682568
        updatePANFolder:
            title: Update Folder
            type: object
            properties:
                folder:
                    type: object
                    properties:
                        name:
                            type: string
                            description: The folder's new name.
                            example: Billing
                        description:
                            type: string
                            description: The folder's updated description.
                            example: The Billing API.
                        parentFolderId:
                            type: integer
                            description: The folder's new parent folder ID.
                            example: 0
        updatePANWorkspace:
            title: Update Workspace
            type: object
            properties:
                workspace:
                    type: object
                    properties:
                        parentFolderId:
                            type: integer
                            description: The workspace's new parent folder ID.
                            example: 1
        versions:
            type: array
            description: The API's versions.
            items:
                type: object
                description: Information about the version.
                properties:
                    id:
                        type: string
                        format: uuid
                        example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                        description: The version's ID.
                    name:
                        type: string
                        example: v1
                        description: The version's name.
        versionBase:
            description: Information about the API version.
            title: API Version Data Schema
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                    description: The version's ID.
                name:
                    type: string
                    example: Release 1.0
                    description: The version's name.
                createdAt:
                    type: string
                    format: date-time
                    example: "2023-06-09T14:48:45.000Z"
                    description: The date and time at which the version was created.
                updatedAt:
                    type: string
                    format: date-time
                    example: "2023-06-09T14:48:45.000Z"
                    description: The date and time at which the version was last updated.
                releaseNotes:
                    type: string
                    example: This is the first release.
                    description: The version's release notes.
        versionExtended:
            description: Detailed information about the API version.
            title: API Version Extended Data Schema
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                    description: The version's ID.
                name:
                    type: string
                    example: Release name goes here.
                    description: The version's name.
                schemas:
                    type: array
                    description: A list of the version's API schemas.
                    items:
                        type: object
                        description: Information about the schema.
                        properties:
                            id:
                                type: string
                                format: uuid
                                example: 12345678-8b583606-c4c2-11ed-afa1-0242ac120002
                                description: The schema's ID.
                            type:
                                enum:
                                    - proto:2
                                    - proto:3
                                    - graphql
                                    - openapi:3_1
                                    - openapi:3
                                    - openapi:2
                                    - openapi:1
                                    - raml:1
                                    - raml:0_8
                                    - wsdl:2
                                    - wsdl:1
                                    - asyncapi:2
                                type: string
                                example: openapi:3
                                description: The type of schema.
                createdAt:
                    type: string
                    format: date-time
                    example: "2023-06-09T14:48:45.000Z"
                    description: The date and time at which the version was created.
                updatedAt:
                    type: string
                    format: date-time
                    example: "2023-06-09T14:48:45.000Z"
                    description: The date and time at which the version was last updated.
                collections:
                    type: array
                    description: A list of the version's collections.
                    items:
                        type: object
                        description: Information about the collection.
                        properties:
                            id:
                                type: string
                                format: uuid
                                example: 12345678-a6ff0d08-c4c2-11ed-afa1-0242ac120002
                                description: The collection's ID.
                            name:
                                type: string
                                example: Test API Collection
                                description: The collection's name.
                releaseNotes:
                    type: string
                    example: Release notes go here.
                    description: The version's release notes.
    requestBodies:
        addCollection:
            content:
                application/json:
                    schema:
                        oneOf:
                            - type: object
                              title: Copy Collection
                              properties:
                                  data:
                                      type: object
                                      properties:
                                          collectionId:
                                              type: string
                                              example: 12345678-61867bcc-c4c1-11ed-afa1-0242ac120002
                                              description: The collection ID to copy to the API.
                                  operationType:
                                      enum:
                                          - COPY_COLLECTION
                                          - GENERATE_FROM_SCHEMA
                                          - CREATE_NEW
                                      type: string
                                      example: COPY_COLLECTION
                                      description: The method to use to add a collection to the API.
                            - type: object
                              title: Generate from Schema
                              properties:
                                  name:
                                      type: string
                                      example: Sample collection
                                      description: The collection's name.
                                  operationType:
                                      enum:
                                          - COPY_COLLECTION
                                          - GENERATE_FROM_SCHEMA
                                          - CREATE_NEW
                                      type: string
                                      example: GENERATE_FROM_SCHEMA
                                      description: The method to use to add a collection to the API.
                            - type: object
                              title: Create Collection
                              properties:
                                  data:
                                      type: object
                                      example:
                                          info:
                                              name: New collection
                                              schema: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
                                          item:
                                              - request: {}
                                      properties:
                                          info:
                                              type: object
                                              example:
                                                  name: Sample collection
                                                  schema: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
                                              properties:
                                                  name:
                                                      type: string
                                                      example: Sample collection
                                                      description: The collection's name.
                                                  schema:
                                                      enum:
                                                          - https://schema.getpostman.com/json/collection/v2.1.0/collection.json
                                                      type: string
                                                      format: url
                                                      example: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
                                                      description: The collection's schema format.
                                              description: Information about the collection.
                                          item:
                                              type: array
                                              items: {}
                                              example:
                                                  - request: {}
                                              description:
                                                  Information about the requests and responses in
                                                  the collection. For a complete list of values, refer to the
                                                  [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
                                      description:
                                          Information about the collection's contents, such as
                                          requests and responses. For a complete list of values, refer to
                                          the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).
                                  operationType:
                                      enum:
                                          - COPY_COLLECTION
                                          - GENERATE_FROM_SCHEMA
                                          - CREATE_NEW
                                      type: string
                                      example: CREATE_NEW
                                      description: The method to use to add a collection to the API.
                    examples:
                        Copy a Collection:
                            value:
                                operationType: COPY_COLLECTION
                                data:
                                    collectionId: 12ece9e1-2abf-4edc-8e34-de66e74114d2
                        Generate a Collection from Schema:
                            value:
                                name: Test Collection
                                operationType: GENERATE_FROM_SCHEMA
                        Add a New Collection:
                            value:
                                operationType: CREATE_NEW
                                data:
                                    item:
                                        - protocolProfileBehavior:
                                              disableBodyPruning: true
                                          response:
                                              - originalRequest:
                                                    url:
                                                        host:
                                                            - https://api.getpostman.com
                                                        raw: https://api.getpostman.com/spacecrafts/:spacecraftId
                                                        variable:
                                                            - description:
                                                                  "(Required) The unique identifier of the
                                                                  spacecraft"
                                                              key: spacecraftId
                                                              value: "<string>"
                                                        path:
                                                            - spacecrafts
                                                            - ":spacecraftId"
                                                    method: GET
                                                    header:
                                                        - description: "Added as a part of security scheme: apikey"
                                                          key: X-Api-Key
                                                          value: "<API Key>"
                                                code: 200
                                                _postman_previewlanguage: json
                                                responseTime:
                                                header:
                                                    - key: Content-Type
                                                      value: application/json
                                                name: The spacecraft corresponding to the provided `spacecraftId`
                                                _postman_previewtype: html
                                                body: |-
                                                    {
                                                      "id": "<string>",
                                                      "name": "commodo",
                                                      "type": "capsule",
                                                      "description": "pariatur dolo"
                                                    }
                                                cookie: []
                                                status: OK
                                                id: 54467f6e-71d7-43d5-acc0-48f948e38528
                                              - originalRequest:
                                                    url:
                                                        host:
                                                            - https://api.getpostman.com
                                                        raw: https://api.getpostman.com/spacecrafts/:spacecraftId
                                                        variable:
                                                            - description:
                                                                  "(Required) The unique identifier of the
                                                                  spacecraft"
                                                              key: spacecraftId
                                                              value: "<string>"
                                                        path:
                                                            - spacecrafts
                                                            - ":spacecraftId"
                                                    method: GET
                                                    header:
                                                        - description: "Added as a part of security scheme: apikey"
                                                          key: X-Api-Key
                                                          value: "<API Key>"
                                                code: 404
                                                _postman_previewlanguage: json
                                                responseTime:
                                                header:
                                                    - key: Content-Type
                                                      value: application/json
                                                name: No spacecraft found for the provided `spacecraftId`
                                                _postman_previewtype: html
                                                body: |-
                                                    {
                                                      "message": "dolore Excepteur"
                                                    }
                                                cookie: []
                                                status: Not Found
                                                id: 1231609a-7a3d-444d-aa0c-579703e618f4
                                              - originalRequest:
                                                    url:
                                                        host:
                                                            - https://api.getpostman.com
                                                        raw: https://api.getpostman.com/spacecrafts/:spacecraftId
                                                        variable:
                                                            - description:
                                                                  "(Required) The unique identifier of the
                                                                  spacecraft"
                                                              key: spacecraftId
                                                              value: "<string>"
                                                        path:
                                                            - spacecrafts
                                                            - ":spacecraftId"
                                                    method: GET
                                                    header:
                                                        - description: "Added as a part of security scheme: apikey"
                                                          key: X-Api-Key
                                                          value: "<API Key>"
                                                code: 500
                                                _postman_previewlanguage: json
                                                responseTime:
                                                header:
                                                    - key: Content-Type
                                                      value: application/json
                                                name: Unexpected error
                                                _postman_previewtype: html
                                                body: |-
                                                    {
                                                      "message": "dolore Excepteur"
                                                    }
                                                cookie: []
                                                status: Internal Server Error
                                                id: db674465-8cec-4208-9724-42278ca9b83c
                                          id: d3779255-5293-4e58-9b65-8954936e1dca
                                          request:
                                              url:
                                                  host:
                                                      - https://api.getpostman.com
                                                  raw: https://api.getpostman.com/spacecrafts/:spacecraftId
                                                  variable:
                                                      - description: "(Required) The unique identifier of the spacecraft"
                                                        key: spacecraftId
                                                        value: "<string>"
                                                  path:
                                                      - spacecrafts
                                                      - ":spacecraftId"
                                              method: GET
                                              header:
                                                  - key: Accept
                                                    value: application/json
                                          name: Read a spacecraft
                                    auth:
                                        apikey:
                                            - type: string
                                              key: key
                                              value: X-Api-Key
                                            - type: string
                                              key: value
                                              value: SCBKCDKCHKDHCK
                                            - type: string
                                              key: in
                                              value: header
                                        type: apikey
                                    info:
                                        description: Buy or rent spacecrafts
                                        _postman_id: e726de58-f1b3-4edd-a8a7-2579dc799d39
                                        schema: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
                                        name: Generated
                                    variable:
                                        - value: "/"
                                          type: string
                                          id: 526a20ba-acfb-4549-a841-8edf2d24b929
                                          key: baseUrl
        createAPI:
            description: The request body to create an API.
            content:
                application/json:
                    schema:
                        title: Create/Update API
                        description: Information about the API.
                        type: object
                        required:
                            - name
                        properties:
                            name:
                                type: string
                                example: Test API
                                description: The API's name.
                            summary:
                                type: string
                                example: Testing API
                                description: The API's short summary.
                            description:
                                type: string
                                example: This is a test API.
                                description: The API's description. This supports Markdown formatting.
                    example:
                        name: Test API
                        summary: Testing API
                        description: This is a test API.
        createApiSchema:
            content:
                application/json:
                    schema:
                        description: Information about the API schema.
                        title: Create API Schema
                        type: object
                        required:
                            - type
                            - files
                        properties:
                            type:
                                enum:
                                    - proto:2
                                    - proto:3
                                    - graphql
                                    - openapi:3_1
                                    - openapi:3
                                    - openapi:2
                                    - openapi:1
                                    - raml:1
                                    - raml:0_8
                                    - wsdl:2
                                    - wsdl:1
                                    - asyncapi:2
                                type: string
                                example: openapi:3
                                description: The schema's type.
                            files:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        path:
                                            type: string
                                            example: common/Error.json
                                            description: The schema's file path.
                                        root:
                                            type: object
                                            description: Information about the schema's root file.
                                            example:
                                                enabled: true
                                            properties:
                                                enabled:
                                                    enum:
                                                        - true
                                                    type: boolean
                                                    example: true
                                                    description: If true, tag the file as the root file. The root tag is only allowed for protobuf specifications.
                                        content:
                                            type: string
                                            example: |-
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "code",
                                                    "message"
                                                  ],
                                                  "properties": {
                                                    "code": {
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "message": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                            description: The schema file's stringified contents.
                                description: The list of files that are part of the schema.
                    examples:
                        Create Schema:
                            value:
                                type: openapi:3
                                files:
                                    - path: swagger.json
                                      content: |-
                                          {
                                            "openapi": "3.0.0",
                                            "info": {
                                              "version": "1.0.0",
                                              "title": "Sample API",
                                              "description": "Buy or rent spacecrafts"
                                            },
                                            "paths": {
                                              "/spacecrafts/{spacecraftId}": {
                                                "parameters": [
                                                  {
                                                    "name": "spacecraftId",
                                                    "description": "The unique identifier of the spacecraft",
                                                    "in": "path",
                                                    "required": true,
                                                    "schema": {
                                                      $ref: "#/components/schemas/SpacecraftId"
                                                    }
                                                  }
                                                ],
                                                "get": {
                                                  "summary": "Read a spacecraft",
                                                  "responses": {
                                                    "200": {
                                                      "description": "The spacecraft corresponding to the provided `spacecraftId`",
                                                      "content": {
                                                        "application/json": {
                                                          "schema": {
                                                            $ref: "#/components/schemas/Spacecraft"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "404": {
                                                      "description": "No spacecraft found for the provided `spacecraftId`",
                                                      "content": {
                                                        "application/json": {
                                                          "schema": {
                                                            $ref: "#/components/schemas/Error"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "500": {
                                                      "description": "Unexpected error",
                                                      "content": {
                                                        "application/json": {
                                                          "schema": {
                                                            $ref: "#/components/schemas/Error"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "components": {
                                              "schemas": {
                                                "SpacecraftId": {
                                                  "description": "The unique identifier of a spacecraft",
                                                  "type": "string"
                                                },
                                                "Spacecraft": {
                                                  "type": "object",
                                                  "required": [
                                                    "id",
                                                    "name",
                                                    "type"
                                                  ],
                                                  "properties": {
                                                    "id": {
                                                      $ref: "#/components/schemas/SpacecraftId"
                                                    },
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "capsule",
                                                        "probe",
                                                        "satellite",
                                                        "spaceplane",
                                                        "station"
                                                      ]
                                                    },
                                                    "description": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "Error": {
                                                  "type": "object",
                                                  "required": [
                                                    "message"
                                                  ],
                                                  "properties": {
                                                    "message": {
                                                      "description": "A human readable error message",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "securitySchemes": {
                                                "ApiKey": {
                                                  "type": "apiKey",
                                                  "in": "header",
                                                  "name": "X-Api-Key"
                                                }
                                              }
                                            },
                                            "security": [
                                              {
                                                "ApiKey": []
                                              }
                                            ]
                                          }
                                    - path: Pet.json
                                      content: |-
                                          {
                                            "type": "object",
                                            "required": [
                                              "id",
                                              "name"
                                            ],
                                            "properties": {
                                              "id": {
                                                "type": "integer",
                                                "format": "int64"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "tag": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                    - path: NewPet.json
                                      content: |-
                                          {
                                            "type": "object",
                                            "allOf": [
                                              {
                                                $ref: "Pet.json"
                                              },
                                              {
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "description": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                    - path: parameters.json
                                      content: |-
                                          {
                                            "tagsParam": {
                                              "name": "tags",
                                              "in": "query",
                                              "description": "tags to filter by",
                                              "required": false,
                                              "type": "array",
                                              "collectionFormat": "csv",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "limitsParam": {
                                              "name": "limit",
                                              "in": "query",
                                              "description": "maximum number of results to return",
                                              "required": false,
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                    - path: common/Error.json
                                      content: |-
                                          {
                                            "type": "object",
                                            "required": [
                                              "code",
                                              "message"
                                            ],
                                            "properties": {
                                              "code": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "message": {
                                                "type": "string"
                                              }
                                            }
                                          }
                        Create Schema with Proto:
                            value:
                                type: proto:2
                                files:
                                    - path: index.proto
                                      content: "<file contents>"
                                      root:
                                          enabled: true
            description: The request body to create an API schema.
        createApiVersion:
            content:
                application/json:
                    schema:
                        oneOf:
                            - type: object
                              title: Create Version Schema (Not Git-Linked)
                              required:
                                  - name
                                  - schemas
                                  - collections
                              properties:
                                  name:
                                      type: string
                                      example: v1
                                      description: The version's name.
                                  schemas:
                                      type: array
                                      items:
                                          type: object
                                          properties:
                                              id:
                                                  type: string
                                                  example: 5381f010-c4c1-11ed-afa1-0242ac120002
                                                  description: The schema's ID.
                                          description: Information about the schema.
                                      description: A list of the version's schemas.
                                  collections:
                                      type: array
                                      items:
                                          type: object
                                          properties:
                                              id:
                                                  type: string
                                                  example: 123456-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                                  description: The collection's ID.
                                          description: Information about the collection.
                                      description: A list of the version's collections.
                                  releaseNotes:
                                      type: string
                                      example: This is the first release.
                                      description:
                                          Information about the API version release. For example,
                                          changelog notes.
                              description: Information about the API version.
                            - type: object
                              title: Create Version Schema (Git-Linked)
                              required:
                                  - name
                                  - branch
                                  - schemas
                                  - collections
                              properties:
                                  name:
                                      type: string
                                      example: v1
                                      description: The version's name.
                                  branch:
                                      type: string
                                      example: main
                                      description: The branch ID.
                                  schemas:
                                      type: array
                                      items:
                                          type: object
                                          properties:
                                              directoryPath:
                                                  type: string
                                                  example: postman/schemas
                                                  description:
                                                      The path to the root directory where schemas
                                                      are stored in the Git repository.
                                          description: Information about the schema.
                                      description: A list of the version's schemas.
                                  collections:
                                      type: array
                                      items:
                                          type: object
                                          properties:
                                              filePath:
                                                  type: string
                                                  example: postman/collection/c1.json
                                                  description: Path to a collection in the Git repository.
                                          description: Information about the collection.
                                      description: A list of the version's collections.
                                  releaseNotes:
                                      type: string
                                      example: This is the first release.
                                      description:
                                          Information about the API version release. For example,
                                          changelog notes.
                              description: Information about the API version.
                    examples:
                        Create Version:
                            value:
                                name: Release 1.5
                                releaseNotes: This is the first public release update.
                                collections:
                                    - id: e8a015e0-f472-4bb3-a523-57ce7c4583ed
                                schemas:
                                    - id: 18a015e0-f472-4bb3-a523-57ce7c458387
                        Create Version for Git-Linked API with Schemas and Collection:
                          value:
                              name: Release 1.5
                              releaseNotes: This is the first public release update.
                              collections:
                                  - filePath: path/to/collection1.json
                                  - filePath: path/to/collection2.json
                              schemas:
                                  - directoryPath: postman/schemas
                              branch: develop
        createOrUpdateSchemaFile:
            content:
                application/json:
                    schema:
                        required:
                            - content
                        type: object
                        properties:
                            name:
                                type: string
                                example: index.json
                                description: The schema file's name.
                            root:
                                type: object
                                example:
                                    enabled: true
                                properties:
                                    enabled:
                                        enum:
                                            - true
                                        type: boolean
                                        example: true
                                        description: If true, tag the file as the root file.
                                description:
                                    Information about the schema's root file. This tag only
                                    applies to protobuf specifications.
                            content:
                                type: string
                                example: |-
                                    {
                                     "type": "object",
                                     "required": [
                                     "code",
                                     "message"
                                     ],
                                     "properties": {
                                     "code": {
                                     "type": "integer",
                                     "format": "int32"
                                     },
                                     "message": {
                                     "type": "string"
                                     }
                                     }
                                    }
                                description: The schema file's content.
                        description: Information about schema file.
                    examples:
                        Create or Update Schema File:
                            value:
                                content: |-
                                    {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "name"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "format": "int64"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "tag": {
                                          "type": "string"
                                        }
                                      }
                                    }
                        Create or Update Schema File root Tag:
                            value:
                                root:
                                    enabled: true
            description: The request body to create or update schema file.
        postPANElementOrFolder:
            required: true
            content:
                application/json:
                    schema:
                        oneOf:
                            - $ref: "#/components/schemas/createPANApi"
                            - $ref: "#/components/schemas/createPANCollection"
                            - $ref: "#/components/schemas/createPANWorkspace"
                            - $ref: "#/components/schemas/createPANFolder"
                    examples:
                        Add an API:
                            value:
                                api:
                                    id: 5360b75f-447e-467c-9299-12fd6c92450d
                                    parentFolderId: 1
                        Add a Collection:
                            value:
                                collection:
                                    id: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    parentFolderId: 1
                        Add a Collection with Environments:
                            value:
                                collection:
                                    id: 12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2
                                    parentFolderId: 1
                                    environments:
                                        - 92133-622c084d-4f48-470b-826e-18af3c65c775
                                        - 92134-0e15a049-f810-4682-9086-ebb7b40dfb9b
                        Add a Workspace:
                            value:
                                workspace:
                                    id: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
                                    parentFolderId: 1
                        Create a Folder:
                            value:
                                folder:
                                    name: Billing
                                    description: The Billing API.
                                    parentFolderId: 0
        putPANElementOrFolder:
            required: true
            content:
                application/json:
                    schema:
                            oneOf:
                                - $ref: "#/components/schemas/updatePANApi"
                                - $ref: "#/components/schemas/updatePANCollection"
                                - $ref: "#/components/schemas/updatePANWorkspace"
                                - $ref: "#/components/schemas/updatePANFolder"
                    examples:
                        Update an API:
                            value:
                                api:
                                    parentFolderId: 1
                        Update a Collection:
                            value:
                                collection:
                                    parentFolderId: 1
                        Update a Collection's Environments:
                            value:
                                collection:
                                    environments:
                                        $add:
                                            - 92133-622c084d-4f48-470b-826e-18af3c65c775
                                            - 92134-0e15a049-f810-4682-9086-ebb7b40dfb9b
                                        $remove:
                                            - 92637-612c7311-4557-470b-826e-18af35682568
                        Update a Workspace:
                            value:
                                workspace:
                                    parentFolderId: 1
                        Update a Folder:
                            value:
                                folder:
                                    name: Billing
                                    description: The Billing API.
                                    parentFolderId: 0
        respondPANElementAddRequest:
            content:
                application/json:
                    schema:
                        type: object
                        required:
                            - status
                        properties:
                            response:
                                    type: object
                                    description: The response to the user's request.
                                    properties:
                                        message:
                                            type: string
                                            description: A message that details why the user's request was denied.
                                            example: The requested collection has a lot of governance violations. Please fix them.
                            status:
                                type: string
                                description: The request's status.
                                enum:
                                    - denied
                                    - approved
                                example: approved
                    examples:
                        Approve a Request:
                            value:
                                status: approved
                        Deny a Request:
                            value:
                                status: denied
                                response:
                                    message: The requested collection has a lot of governance violations. Please fix them.
                        Deny a Request Without a Message:
                            value:
                                status: denied
        updateAnApi:
            content:
                application/json:
                    schema:
                        type: object
                        title: Create/Update API
                        required:
                            - name
                        properties:
                            name:
                                type: string
                                example: Test API
                                description: The API's name.
                            summary:
                                type: string
                                example: Testing API
                                description: The API's short summary.
                            description:
                                type: string
                                example: This is a test API.
                                description: The API's description. This supports Markdown formatting.
                        description: Information about the API.
                    example:
                        name: Test API
                        summary: Testing API
                        description: This is a test API.
            description: The request body to update the API's meta information.
        updateVersion:
            content:
                application/json:
                    schema:
                        type: object
                        description: Information about the API version.
                        required:
                            - name
                        properties:
                            name:
                                type: string
                                example: Release 1.5
                                description: The version's name.
                            releaseNotes:
                                type: string
                                example: This is the first public release update.
                                description: The version's Markdown-supported release notes.
                    example:
                        name: Release 1.5
                        releaseNotes: This is the first public release update.
    parameters:
        Accept:
            name: Accept
            in: header
            required: true
            description: The request header to use for Postman v10 and higher only.
            schema:
                type: string
                enum:
                    - application/vnd.api.v10+json
                example: application/vnd.api.v10+json
        apiDescription:
            in: query
            name: description
            schema:
                type: string
                example: This is an API for testing purposes
            description: Return only APIs whose description includes the given value. Matching is not case-sensitive.
        apiId:
            name: apiId
            in: path
            required: true
            description: The API's ID.
            schema:
                type: string
                example: 90ca9f5a-c4c4-11ed-afa1-0242ac120002
        apiVersionId:
            name: apiVersionId
            in: path
            required: true
            description: The API version's ID.
            schema:
                type: string
                format: uuid
                example: a9879d02-74bf-425a-bbec-6d27aa135507
        collectionAccessKeyQuery:
            name: access_key
            in: query
            description: A collection's read-only access key. Using this query parameter does not require an API key to call the endpoint.
            schema:
                type: string
                example: PMAT-XXXXXXXXXXXXXXXXXXXXXXXXXX
        collectionId:
            name: collectionId
            in: path
            required: true
            description: The collection's ID.
            schema:
                type: string
                format: uuid
                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
        collectionIdApi:
            name: collectionId
            in: path
            required: true
            description: The collection's ID.
            schema:
                type: string
                format: uuid
                example: 12345678-61867bcc-c4c1-11ed-afa1-0242ac120002
        createdBy:
            in: query
            name: createdBy
            schema:
                type: integer
                example: 12345678
            description: The user ID of the user that created the resource.
        cursor:
            in: query
            name: cursor
            schema:
                type: string
                example: RnJpIEZlYiAyNCAyMDIzIDEzOjI0OjA5IEdNVCswMDAwIChDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZSk=
            description: The pointer to the first record of the set of paginated results.
        elementId:
            name: elementId
            required: true
            description: The element's ID or UUID. For Postman Collections you must pass the collection's UID (`userId`-`collectionId`) value.
            in: path
            schema:
                type: string
                example: 5360b75f-447e-467c-9299-12fd6c92450d
        elementType:
            name: elementType
            in: path
            required: true
            description: The Private API Network element type.
            schema:
                type: string
                enum:
                    - api
                    - folder
                    - collection
                    - workspace
                example: api
        entityId:
            name: entityId
            in: path
            required: true
            description: |
                The collection's UID value.

                **Note:**

                In Postman v10 and earlier, the entity's ID value is one of the following, based on its relation type:

                - `documentation` and `test` — The collection UID value.
                - `environment` — The environment UID value.
                - `mock` — The mock ID value.
                - `monitor` — The monitor ID value.
            schema:
                type: string
                format: uuid
                example: 12345678-b4abc083-3ee2-4fc2-8959-29a7653a1c91
        environmentId:
            name: environmentId
            in: path
            required: true
            description: The environment's ID.
            schema:
                type: string
                format: uuid
                example: 5daabc50-8451-43f6-922d-96b403b4f28e
        file-path:
            name: file-path
            in: path
            required: true
            description: The path to the schema file.
            schema:
                type: string
                example: postman/collection/c1.json
        groupId:
            name: groupId
            in: path
            required: true
            description: The group's ID.
            schema:
                type: string
                format: uuid
                example: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
        include:
            in: query
            name: include
            description: |
                An array that contains additional resources to include in the response. Use this parameter to query for element links to the API, such as collections and schemas:
                    - `collections` — Query for linked Postman collections.
                    - `versions` — Query for linked versions.
                    - `schemas` — Query for linked schemas.
                    - `gitInfo` — Query for information about the API’s git-linked repository.
                
                **Note:**
                
                API viewers can only use the `versions` option.
            schema:
                type: array
                items:
                    enum:
                        - collections
                        - versions
                        - schemas
                        - gitInfo
                    type: string
                example: schemas,collections
        limit:
            in: query
            name: limit
            description: The maximum number of rows to return in the response.
            schema:
                type: integer
                default: 10
                example: 10
        mockId:
            name: mockId
            in: path
            required: true
            description: The mock's ID.
            schema:
                type: string
                format: uuid
                example: e3d951bf-873f-49ac-a658-b2dcb91d3289
        monitorId:
            name: monitorId
            in: path
            required: true
            description: The monitor's ID.
            schema:
                type: string
                format: uuid
                example: 1e6b6cc1-c760-48e0-968f-4bfaeeae9af1
        relationType:
            name: relationType
            in: path
            required: true
            description: |
                The `unclassified` relation type. This relation is used for documentation and testing.

                **Note:**

                In Postman v10 and earlier, this value is one of:

                - `documentation`
                - `test`
                - `mock`
                - `monitor`
            schema:
                type: string
                enum:
                    - unclassified
            example: unclassified
        requestId:
            name: requestId
            required: true
            in: path
            description: The element request's ID.
            schema:
                type: integer
            example: 232
        schemaId:
            name: schemaId
            in: path
            required: true
            description: The API schema's ID.
            schema:
                type: string
                format: uuid
                example: 5381f010-c4c1-11ed-afa1-0242ac120002
        schemaOutput:
            name: bundled
            in: query
            description: If true, return the schema in a bundled format.
            schema:
                default: false
                enum:
                    - true
                type: boolean
                example: true
        serverResponseId:
            name: serverResponseId
            in: path
            required: true
            description: The server response's ID.
            schema:
                type: string
                format: uuid
                example: 965cdd16-fe22-4d96-a161-3d05490ac421
        taskId:
            name: taskId
            in: path
            description: The task's ID.
            schema:
                type: string
                example: 90ca9f5a-c4c4-21ed-afa1-0242ac120002
            required: true
        userId:
            name: userId
            in: path
            required: true
            description: The user's SCIM ID.
            schema:
                type: string
                example: 405775fe15ed41872a8eea4c8aa2b38cda9749812cc55c99
        versionId:
            name: versionId
            in: path
            required: true
            description: The API's version ID.
            schema:
                type: string
                format: uuid
                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
        versionQuery:
            name: versionId
            in: query
            description: The API's version ID.
            schema:
                type: string
                format: uuid
                example: 12ece9e1-2abf-4edc-8e34-de66e74114d2
        workspaceId:
            name: workspaceId
            in: path
            required: true
            description: The workspace's ID.
            schema:
                type: string
                format: uid
                example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
        workspaceIdApi:
            in: query
            name: workspaceId
            schema:
                type: string
                format: uid
                example: 9a7bb368-c4c4-11ed-afa1-0242ac120002
            required: true
            description: The workspace ID.
        workspaceQueryId:
            name: workspaceId
            required: false
            in: query
            description: |
                The workspace's ID.

                If you do not include this query parameter, the system defaults to the **My Workspace** workspace.
            schema:
                type: string
                format: uuid
            example: 1f0df51a-8658-4ee8-a2a1-d2567dfa09a9
tags:
    - name: API
      description: The `/apis` endpoints let you manage your APIs.
    - name: API Version
      description: |
          The API version endpoints let you manage your [API's versions](https://learning.postman.com/docs/designing-and-developing-your-api/versioning-an-api/versioning-an-api-overview/).

          ### Important

          **API versions are deprecated as of Postman v10 and higher.**

          In v9 and earlier, when you create an API, the system creates a single, default API version. You can use this version's ID with any endpoints that require an API version ID.

          In Postman v10, published versions are static representations of your API that consumers can reference (like releases in Postman v9). If you need to work on more than one major iteration of your API in Postman v10, create separate APIs.
    - name: API Security
      description: The API Security endpoints let you manage the [security of your API](https://learning.postman.com/docs/api-governance/api-definition/api-definition-warnings/). API security includes ensuring you follow security and format warnings and schema validation.
    - name: Audit Logs
      description: |
          The [Audit Logs](https://learning.postman.com/docs/administration/audit-logs/) endpoints let you monitor and analyze your Professional or Enterprise Postman teams.

          **Note:**

          These endpoints are **only** available to Postman **Professional** and **Enterprise** [pricing plans](https://www.postman.com/pricing).
    - name: Collections
      description: The `/collections` endpoints let you manage your [collections](https://learning.postman.com/docs/sending-requests/intro-to-collections/).
    - name: Environments
      description: The `/environments` endpoints let you manage your [environments](https://learning.postman.com/docs/sending-requests/managing-environments/).
    - name: Group Provisioning
      description: The `/scim/v2/Groups` endpoint lets you provision and manage your Postman groups.
    - name: Import
      description: The `/import` endpoints let you manage [importing and exporting](https://learning.postman.com/docs/getting-started/importing-and-exporting-data/) Postman data.
    - name: Mocks
      description: |
          The `/mocks` endpoints let you manage your [mock servers](https://learning.postman.com/docs/designing-and-developing-your-api/mocking-data/setting-up-mock/).

          ### Important

          **In Postman v10 and higher you cannot create mock servers for collections added to an API definition.** You can still create mock servers for collections that are not part of an API definition.
    - name: Monitors
      description: |
          The `/monitors` endpoints let you manage your [monitors](https://learning.postman.com/docs/monitoring-your-api/intro-monitors/).

          ### Important

          **In Postman v10 and higher you cannot create monitors for collections added to an API definition.** You can still create monitors for collections that are not part of an API definition.
    - name: Private API Network
      description: The `/private` endpoint lets you manage and work with your team's [Private API Network](https://learning.postman.com/docs/collaborating-in-postman/adding-private-network/).
    - name: Relations
      description: |
          The Relations endpoints let you manage your API's relations. [Relations](https://learning.postman.com/docs/designing-and-developing-your-api/developing-an-api/) are an API's connections to items such as documentation, tests, environments, mocks, and monitors.

          ### Important

          In Postman v10 and higher, we only support the following relation types:

          - `unclassified` — The relation for documentation and testing.
          - `apiDefinition` — The relation for API definitions.
    - name: Schema
      description: |
          The Schema endpoints let you manage your API's schemas.

          **The schemas concept is deprecated as of Postman v10 and higher.**

          In Postman v10 and higher, “schemas” are now known as “API definitions”. You may see that API responses may return both the `schemas` and `apiDefinition` properties. Use the `apiDefinition` property.
    - name: SCIM 2.0 - Identity
      description: |
          Postman supports [SCIM](https://en.wikipedia.org/wiki/System_for_Cross-domain_Identity_Management) (System for Cross-domain Identity Management), which allows you to automate the provisioning of your team. You can deploy Postman at scale across your organization and control access to it with your identity provider.

          **Note:**

          - You **must** be a [Postman Team admin](http://learning.postman.com/docs/collaborating-in-postman/roles-and-permissions/#team-roles) to enable SCIM.
          - SCIM provisioning is only available with a Postman **Enterprise** [pricing plan](https://www.postman.com/pricing).

          ### Enabling SCIM provisioning in Postman

          You must [configure SSO](https://learning.postman.com/docs/administration/sso/admin-sso/) and [enable SCIM](http://learning.postman.com/docs/administration/managing-your-team/configuring-scim/#enabling-scim-provisioning) for your Postman team to use these endpoints.

          **Important:**

          To use SCIM, you must have only **one** SSO method configured. If you have more than one SSO method enabled, you **cannot** generate an SCIM API key.

          ### SCIM provisioning limitations

          You can only deactivate users with the SCIM API. You **cannot** permanently delete users with the API.

          ### Rate limits

          For your organization's team, Postman applies per-minute rate limits across all SCIM API endpoints. This helps ensure that you have the best experience using Postman's SCIM API. The rate limits apply as follows:

          - **Write (POST, PUT, PATCH)** — 180 requests per minute.
          - **Read (GET)** — 300 requests per minute.

          If your requests are limited, the API will return an HTTP `429 Too Many Requests` response status code.
    - name: User
      description: The `/me` endpoints let you manage information about the authenticated user.
    - name: User Provisioning
      description: |
          The `/scim/v2/Users` endpoint lets you provision and manage your Postman users.

          **Note:**

          You can only deactivate users with the SCIM API. You **cannot** permanently delete users with the API.

          ### Provisioning users with the SCIM API

          - You can only deactivate users with the SCIM API. You cannot permanently delete users with the API.
          - Users created with the SCIM API are automatically created in Postman:
            - If the account's email ID does not exist, the user is also added to their organization's Postman team.
            - If the account's email ID already exists, the system sends the user an email invite to join the Postman team. After they accept the invite, the are added to the team.
          - By default, new users are given the developer role in Postman. Postman user roles cannot be updated via the SCIM API. You must manage user and group roles in Postman.
    - name: v10
      description: These endpoints are for Postman version 10 and higher.
    - name: Workspaces
      description: The `/workspaces` endpoints let you manage your [workspaces](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/creating-workspaces/).
    - name: Webhooks
      description: The `/webhooks` endpoints let you manage [custom webhooks](https://learning.postman.com/docs/running-collections/collection-webhooks/).
